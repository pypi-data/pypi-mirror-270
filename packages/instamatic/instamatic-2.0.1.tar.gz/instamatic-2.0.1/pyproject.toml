[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

# https://packaging.python.org/en/latest/specifications/declaring-project-metadata/
[project]
name = "instamatic"
version = "2.0.1"
description = "Python program for automated electron diffraction data collection"
readme = "README.md"
requires-python = ">=3.7"
authors = [
	{name = "Stef Smeets", email = "s.smeets@esciencecenter.nl"},
]
keywords = [
    "electron-crystallography",
    "electron-microscopy",
    "electron-diffraction",
    "serial-crystallography",
    "3D-electron-diffraction",
    "micro-ed",
    "data-collection",
    "automation",
]
license = {text = "BSD License"}
classifiers = [
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: Microsoft :: Windows",
    "Topic :: Scientific/Engineering :: Human Machine Interfaces",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Software Development :: Libraries",
]
dependencies = [
    "comtypes >= 1.1.7",
    "h5py >= 2.10.0",
    "ipython >= 7.11.1",
    "lmfit >= 1.0.0",
    "matplotlib >= 3.1.2",
    "mrcfile >= 1.1.2",
    "numpy >= 1.17.3",
    "pandas >= 1.0.0",
    "pillow >= 7.0.0",
    "pywinauto >= 0.6.8",
    "pyyaml >= 5.3",
    "scikit-image >= 0.17.1",
    "scipy >= 1.3.2",
    "tifffile >= 2019.7.26.2",
    "tqdm >= 4.41.1",
    "virtualbox >= 2.0.0",
    "pyserialem >= 0.3.2",
]

[project.urls]
homepage = "https://github.com/instamatic-dev/instamatic"
issues = "http://github.com/instamatic-dev/instamatic/issues"
documentation = "https://instamatic.readthedocs.io"
changelog = "https://github.com/instamatic-dev/instamatic/releases"

[project.optional-dependencies]
develop = [
    "bump2version",
    "check-manifest",
    "pre-commit",
    "pytest >= 5.4.1",
    "coverage",
]
serval = [
    "serval-toolkit"
]
docs = [
    "markdown-include",
    "mkdocs",
    "mkdocs-jupyter",
    "mkdocs-gen-files",
    "mkdocs-material",
    "mkdocstrings[python]",
]
publishing = [
    "twine",
    "wheel",
    "build",
]

[project.scripts]
"instamatic" = "instamatic.main:main"
"instamatic.controller" = "instamatic.TEMController.TEMController:main_entry"
# experiments
"instamatic.serialed" = "instamatic.experiments.serialed.experiment:main"
"instamatic.camera" = "instamatic.camera.camera:main_entry"
# calibrate
"instamatic.calibrate_stage_lowmag" = "instamatic.calibrate.calibrate_stage_lowmag:main_entry"
"instamatic.calibrate_stage_mag1" = "instamatic.calibrate.calibrate_stage_mag1:main_entry"
"instamatic.calibrate_beamshift" = "instamatic.calibrate.calibrate_beamshift:main_entry"
"instamatic.calibrate_directbeam" = "instamatic.calibrate.calibrate_directbeam:main_entry"
"instamatic.calibrate_stagematrix" = "instamatic.calibrate.calibrate_stagematrix:main_entry"
"instamatic.flatfield" = "instamatic.processing.flatfield:main_entry"
"instamatic.stretch_correction" = "instamatic.processing.stretch_correction:main_entry"
# tools
"instamatic.browser" = "scripts.browser:main"
"instamatic.viewer" = "scripts.viewer:main"
"instamatic.defocus_helper" = "instamatic.gui.defocus_button:main"
"instamatic.find_crystals" = "instamatic.processing.find_crystals:main_entry"
"instamatic.find_crystals_ilastik" = "instamatic.processing.find_crystals_ilastik:main_entry"
"instamatic.learn" = "scripts.learn:main_entry"
# server
"instamatic.temserver" = "instamatic.server.tem_server:main"
"instamatic.camserver" = "instamatic.server.cam_server:main"
"instamatic.dialsserver" = "instamatic.server.dials_server:main"
"instamatic.VMserver" = "instamatic.server.vm_ubuntu_server:main"
"instamatic.xdsserver" = "instamatic.server.xds_server:main"
"instamatic.temserver_fei" = "instamatic.server.TEMServer_FEI:main"
"instamatic.goniotoolserver" = "instamatic.server.goniotool_server:main"
# setup
"instamatic.autoconfig" = "instamatic.config.autoconfig:main"

[tool.ruff]
# Enable Pyflakes `E` and `F` codes by default.
select = [
	'F',  # Pyflakes
	'E',  # pycodestyle (error)
	'W',    # pycodestyle (warning)
	# 'C90',  # mccabe
	'I',    # isort
	# 'N',    # pep8-naming
	# 'D',    # pydocstyle
	'UP',   # pyupgrade
	# 'YTT',  # flake8-2020
	# 'ANN',  # flake8-annotations
	# 'S',    # flake8-bandit
	'BLE',  # flake8-blind-except
	# 'FBT',  # flake8-boolean-trap
	# 'B',    # flake8-bugbear
	'A',    # flake8-builtins
	'COM',  # flake8-commas
	'C4',   # flake8-comprehensions
	# 'DTZ',  # flake8-datetimez
	# 'T10',  # flake8-debugger
	# 'EM',   # flake8-errmsg
	# 'EXE',  # flake8-executable
	# 'ISC',  # flake8-implicit-str-concat
	# 'ICN',  # flake8-import-conventions
	# 'G',    # flake8-logging-format
	# 'INP',  # flake8-no-pep420
	# 'PIE',  # flake8-pie
	# 'T20',  # flake8-print
	# 'PT',   # flake8-pytest-style
	# 'Q',    # flake8-quotes
	# 'RET',  # flake8-return
	# 'SIM',  # flake8-simplify
	'TID',  # flake8-tidy-imports
	# 'TCH',  # flake8-type-checking
	# 'ARG',  # flake8-unused-arguments
	# 'PTH',  # flake8-use-pathlib
	# 'ERA',  # eradicate
	# 'PD',   # pandas-vet
	# 'PGH',  # pygrep-hooks
	# 'PL',   # Pylint
	# 'PLC',  # Convention
	# 'PLE',  # Error
	# 'PLR',  # Refactor
	# 'PLW',  # Warning
	# 'TRY',  # tryceratops
]
ignore = [
    'F401',
    'F403',
    'F405',
    'F821',
    'F841',
    'E501',
    'A003',
]


# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ['A', 'B', 'C', 'D', 'E', 'F', 'I', 'UP', 'BLE', 'COM', 'C4', 'TID',]
unfixable = []

exclude = [
    '.bzr',
    '.direnv',
    '.eggs',
    '.git',
    '.hg',
    '.mypy_cache',
    '.nox',
    '.pants.d',
    '.ruff_cache',
    '.svn',
    '.tox',
    '.venv',
    '__pypackages__',
    '_build',
    'buck-out',
    'build',
    'dist',
    'node_modules',
    'venv',
    '.venv',
    'scripts',
]
per-file-ignores = {}

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = '^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$'

target-version = 'py37'
line-length = 96


[tool.ruff.isort]
known-first-party = ['instamatic']

[tool.isort]
profile = 'black'
# force-single-line = true
