Metadata-Version: 2.1
Name: marksplitz
Version: 0.1.dev10
Summary: Command-line utility to split a Markdown file into linked static web pages.
Author-email: Bill Melvin <bill@billmelvin.com>
License: MIT License
        
        Copyright (c) 2024-present William Melvin
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
        
Keywords: markdown,converter,html,slideshow
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE.txt
Requires-Dist: mistune

# marksplitz

Command-line utility to split a Markdown file into linked static web pages.

> Development work in progress.

## Directive Comments

The following HTML comments can be placed in the source Markdown document to alter the generated HTML.

`<!-- title: new-title -->` 

- Replace the default HTML **title** for the page.

`<!-- class: class-1 class-2 -->` 

- Add one or more classes to the `content` div.
- Use to apply styles to multiple pages via a `custom.css` file. 

`<!-- id: id-value -->` 

- Add `id="id-value"` to the `content` div.
- Use to apply styles to a specific page via a `custom.css` file. 

## Command-line Usage

```
usage: marksplitz [-h] [-o OUTPUT_DIR] [-n OUTPUT_NAME] [-i IMAGES_SUBDIR]
                     [-c CSS_FILE]
                     markdown_file

Split a Markdown file into linked HTML pages.

positional arguments:
  markdown_file         Path to the Markdown file to split.

options:
  -h, --help            show this help message and exit
  -o OUTPUT_DIR, --output-dir OUTPUT_DIR
                        Path to the output directory.
  -n OUTPUT_NAME, --output-name OUTPUT_NAME
                        Base name for the output HTML files.
  -i IMAGES_SUBDIR, --images-subdir IMAGES_SUBDIR
                        Subdirectory for images. Expected to be in the
                        directory containing the Markdown file. Contents are
                        copied to a subdirectory by the same name in the
                        output directory.
  -c CSS_FILE, --css-file CSS_FILE
                        Optional name of a CSS file to include in the same
                        location as the HTML output. If a CSS file is not
                        specified, a default style is embedded in the HTML
                        output. If a CSS file is specified, the default style
                        is not included.If the specified CSS file does not
                        exist, it is created with the default style.
```

## Reference

### CSS

Customizing the generated HTML output requires using CSS.

- MDN Guide: [Learn to style HTML using CSS](https://developer.mozilMDNla.org/en-US/docs/Learn/CSS)
- MDN Reference: [CSS: Cascading Style Sheets](https://developer.mozilla.org/en-US/docs/Web/CSS)
  - [Basic concepts of flexbox](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_flexible_box_layout/Basic_concepts_of_flexbox)
  - [Class selectors](https://developer.mozilla.org/en-US/docs/Web/CSS/Class_selectors)

### Packages Used

- [mistune](https://pypi.org/project/mistune/): Markdown parser 
    - [docs](https://mistune.lepture.com/en/latest/)

### Project Tools

- [uv](https://github.com/astral-sh/uv#readme) - Environment management (in place of `pip`)
- [Ruff](https://docs.astral.sh/ruff/) - Linter and code formatter
- [pytest](https://docs.pytest.org/en/stable/) - Testing framework
- [build](https://build.pypa.io/en/stable/index.html) - Python packaging build frontend
- [twine](https://twine.readthedocs.io/en/latest/) - Utility for publishing Python packages
- [Just](https://github.com/casey/just#readme) - Command runner
