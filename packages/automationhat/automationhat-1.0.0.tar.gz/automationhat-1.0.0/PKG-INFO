Metadata-Version: 2.3
Name: automationhat
Version: 1.0.0
Summary: Driver for the Pimoroni Automation HAT
Project-URL: GitHub, https://www.github.com/pimoroni/automationhat-python
Project-URL: Homepage, https://www.pimoroni.com
Author-email: Philip Howard <phil@pimoroni.com>
Maintainer-email: Philip Howard <phil@pimoroni.com>
License: MIT License
        
        Copyright (c) 2017 Pimoroni Ltd.
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Keywords: Pi,Raspberry,automation controller
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: System :: Hardware
Requires-Python: >=3.7
Requires-Dist: ads1015>=1.0.0
Requires-Dist: gpiod>=2.1.3
Requires-Dist: gpiodevice>=0.0.5
Requires-Dist: sn3218>=3.0.0
Requires-Dist: st7735>=1.0.0
Description-Content-Type: text/markdown

![Automation HAT](https://github.com/pimoroni/automation-hat/blob/main/autohat_360.png)

[![Build Status](https://img.shields.io/github/actions/workflow/status/pimoroni/automation-hat/test.yml?branch=main)](https://github.com/pimoroni/automation-hat/actions/workflows/test.yml)
[![Coverage Status](https://coveralls.io/repos/github/pimoroni/automation-hat/badge.svg?branch=main)](https://coveralls.io/github/pimoroni/automation-hat?branch=main)
[![PyPi Package](https://img.shields.io/pypi/v/automationhat.svg)](https://pypi.python.org/pypi/automationhat)
[![Python Versions](https://img.shields.io/pypi/pyversions/automationhat.svg)](https://pypi.python.org/pypi/automationhat)

Automation HAT is a home monitoring and automation controller featuring relays, analog channels, powered outputs, and buffered inputs (all 24V tolerant).  This library will also work with Automation HAT's smaller siblings - Automation pHAT and Automation HAT Mini.

### Where to buy

* Pimoroni Automation HAT: <https://shop.pimoroni.com/products/automation-hat>
* Pimoroni Automation HAT Mini: <https://shop.pimoroni.com/products/automation-hat-mini>
* [DISCONTINUED] Pimoroni Automation pHAT: <https://shop.pimoroni.com/products/automation-phat>

## Installing

### Full install (recommended):

We've created an easy installation script that will install all pre-requisites and get your Automation HAT
up and running with minimal efforts. To run it, fire up Terminal which you'll find in Menu -> Accessories -> Terminal
on your Raspberry Pi desktop, as illustrated below:

![Finding the terminal](http://get.pimoroni.com/resources/github-repo-terminal.png)

In the new terminal window type the command exactly as it appears below (check for typos) and follow the on-screen instructions:

```bash
git clone https://github.com/pimoroni/automation-hat
cd automation-hat
./install.sh
```

**Note** Libraries will be installed in the "pimoroni" virtual environment, you will need to activate it to run examples:

```
source ~/.virtualenvs/pimoroni/bin/activate
```

### Development:

If you want to contribute, or like living on the edge of your seat by having the latest code, you can install the development version like so:

```bash
git clone https://github.com/pimoroni/automation-hat
cd automation-hat
./install.sh --unstable
```

In all cases you will have to enable the I2C bus (and SPI for Automation HAT Mini):

```
sudo raspi-config nonint do_i2c 0
sudo raspi-config nonint do_spi 0
```

## Documentation & Support

* Guides and tutorials:
  * Automation HAT: <https://learn.pimoroni.com/automation-hat>
  * Automation pHAT: <https://learn.pimoroni.com/automation-phat>
  * Automation HAT Mini: <https://learn.pimoroni.com/automation-hat-mini>
* Function reference
<https://github.com/pimoroni/automation-hat/tree/master/documentation>
* GPIO Pinout:
  * Automation HAT: <https://pinout.xyz/pinout/automation_hat>
  * Automation pHAT: <https://pinout.xyz/pinout/automation_phat>
  * Automation HAT Mini: <https://pinout.xyz/pinout/automation_hat_mini>
* Get help
<http://forums.pimoroni.com/c/support>

### FAQ

#### What is the accuracy and resolution of the Automation HAT

The ADS1015 is a 12-bit ADC, but since the 12th bit is the sign-bit there are only 11-bits of resolution available for positive voltage readings. The input voltage for 24v channels is scaled from 0-25.85v (25.85 rather than 24 due to how the resistor divider is set up) to 0-3.3v.

Since the full-scale range of the ADC is set to 4.096v, this means that 0-3.3v gives only ~1649 possible usable values making the input measurement granularity somewhere around 0.015v (25.85 / 1649) for the 24v inputs and 0.002v for the 3.3v input.

More information on this topic can be found here: <https://forums.pimoroni.com/t/automation-hat-accuracy/7252/3>


1.0.0
-----

* Refactor to gpiod/gpiodevice.
* Repackage to hatch/pyproject.toml.

0.4.1
-----

* Update for SN3218 v2.0.0

0.4.0
-----

* Switch to ADS1X15 library

0.3.0
-----

* Switch to setup.cfg
* Switch to markdown based README
* Support for ADS1115 board variant

0.2.3
-----

* 0.2.2 + bump for newer examples

0.2.2
-----

* Had ST7789 on the brain, swapped for ST7735

0.2.1
-----

* Add dependency on ST7789 for AMH

0.2.0
-----

* Fix: Fix thread interleaving and race conditions leading to spurious ADC readings
* Fix: Switch to non-deprecated alias of thread.isAlive

0.1.0
-----

* Fix: Defer setup to avoid import side effects
* Fix: Slowed LED update rate
* Improvement: Switched to warnings to notify about unsupported features on pHAT

0.0.4
-----

* Fix for HAT/pHAT detection

0.0.3
-----

* Fix for Python 3 support

0.0.2
-----

* Added pHAT support
* Rounded ADC output to 2 decimal places
* Set initial state for outputs and fixed toggling
* Fixed light toggling

0.0.1
-----

* Initial Release

