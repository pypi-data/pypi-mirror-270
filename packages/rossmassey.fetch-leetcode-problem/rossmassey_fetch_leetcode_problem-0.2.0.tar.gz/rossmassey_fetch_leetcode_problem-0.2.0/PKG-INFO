Metadata-Version: 2.3
Name: rossmassey.fetch_leetcode_problem
Version: 0.2.0
Summary: A package for getting information about a leetcode problem
Project-URL: Homepage, https://github.com/rossmassey/fetch-leetcode-problem
Project-URL: Documentation, https://rossmassey.github.io/fetch-leetcode-problem/
Project-URL: Issues, https://github.com/rossmassey/fetch-leetcode-problem/issues
Author-email: Ross Massey <massey0ross@gmail.com>
License-File: LICENSE
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.8
Requires-Dist: requests
Description-Content-Type: text/markdown

## Fetch Problem

Python package to get a dictionary with information about a leetcode problem, formatted in `rst`

# Installing
1. Install package with `pip install rossmassey.fetch-leetcode-problem`
2. Use `import fetch_leetcode_problem` or `from fetch_leetcode_problem import ...`

## Documentation

1. `cd docs && make html`

[![Deploy Documentation](https://github.com/rossmassey/fetch-leetcode-problem/actions/workflows/gh-pages.yml/badge.svg)](https://github.com/rossmassey/fetch-leetcode-problem/actions/workflows/gh-pages.yml)

Sphinx documentation is generated from the docstrings

https://rossmassey.github.io/fetch-leetcode-problem/

## Building & Publishing to PyPI

[![Upload Python Package](https://github.com/rossmassey/fetch-leetcode-problem/actions/workflows/python-publish.yml/badge.svg)](https://github.com/rossmassey/fetch-leetcode-problem/actions/workflows/python-publish.yml)

This is done automatically on release tag by GitHub actions

### Manually
Assume `.pypirc` configured in user home directory wih PyPI credentials
```
rm -rf dist
python3 -m build
python3 -m twine upload --repository pypi dist/*
```
