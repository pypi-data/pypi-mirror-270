[tool]
[tool.poetry]
name = "requests_oauth2client"
version = "1.5.3"
homepage = "https://github.com/guillp/requests_oauth2client"
description = "An OAuth2.x client based on `requests`."
authors = ["Guillaume Pujol <guill.p.linux@gmail.com>"]
readme = "README.md"
license = "Apache-2.0"
classifiers = [
    'Development Status :: 4 - Beta',
    'Intended Audience :: Developers',
    'Topic :: Security',
    'License :: OSI Approved :: Apache Software License',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
]
packages = [
    { include = "requests_oauth2client" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.8"

requests = ">=2.19.0"
binapy = ">=0.8"
furl = ">=2.1.2"
jwskate = ">=0.11.1"
attrs = ">=23.2.0"


[tool.poetry.dev-dependencies]
coverage = ">=7.4"
flask = ">=2.0.1"
livereload = ">=2.6.3"
mypy = ">=1.8"
mkdocs = ">=1.3.1"
mkdocs-autorefs = ">=0.3.0"
mkdocs-include-markdown-plugin = ">=6"
mkdocs-material = ">=9.5.3"
mkdocs-material-extensions = ">=1.0.1"
mkdocstrings = { version = ">=0.18.0", extras = ["python"] }
pre-commit = ">=3.5.0"
pytest = ">=7.0.1"
pytest-cov = ">=3.0.0"
pytest-freezer = ">=0.4.8"
pytest-mypy = ">=0.9.1"
requests-mock = ">=1.9.3"
toml = ">=0.10.2"
tox = ">=4"
types-requests = ">=2.25.10"
types-cryptography = ">=3.3.15"
virtualenv = ">=20.2.2"


[tool.poetry.extras]
test = ["pytest", "pytest-cov"]
doc = ["mdformat", "mkdocs", "mkdocs-autorefs", "mkdocs-include-markdown-plugin", "mkdocs-material", "mkdocs-material-extensions", "mkdocstrings"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.docformatter]
black = true
recursive = true
wrap-summaries = 100
wrap-descriptions = 100
blank = true

[tool.ruff]
target-version = "py38"
line-length = 120
extend-exclude = [
    "tests"
]

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"

[tool.ruff.lint]
select = [
    "A",
    "B",
    "C",
    "C4",
    "D",
    "DTZ",
    "E",
    "EM",
    "ERA",
    "F",
    "FA",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PGH",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "PTH",
    "Q",
    "RUF",
    "S",
    "SIM",
    "T",
    "TID",
    "TRY",
    "UP",
    "W",
    "YTT",
]
ignore = [
    "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
    "N818", # Exception names should be named with an Error suffix
    "PLR0912", # Too many branches
    "D107", # Missing docstring in `__init__`
    "S105", # Possible hardcoded password
    "ISC001", # single-line-implicit-string-concatenation
]

[tool.ruff.lint.pylint]
max-args = 10

[tool.ruff.lint.pydocstyle]
convention = "google"
ignore-decorators = ['override']

[tool.mypy]
strict = true
implicit_reexport = true
show_error_context = true
show_column_numbers = true
show_error_codes = true
pretty = true
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true


[tool.pytest.ini_options]
requests_mock_case_sensitive = true
markers = [
    "slow: marks tests as slow"
]
filterwarnings = [
    "ignore::DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead."
]
