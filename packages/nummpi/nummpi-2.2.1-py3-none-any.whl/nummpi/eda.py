# -*- coding: utf-8 -*-
"""sma_7_EDA_visualization_prac_exam.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YVsFcDd6CbVXPpHjjcZcboXrzlnTfxyb
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from datetime import datetime

# Read dataset from CSV
df = pd.read_csv(f'/content/drive/MyDrive/SMA_datasets_prac_exam/supermarket_sales - Sheet1.csv')

# Convert the 'Date' column to datetime
df['Date'] = pd.to_datetime(df['Date'])

# Check the basic structure of the data
print("Dataframe info:")
print(df.info())
print("\nDataframe head:")
print(df.head())

# Group data by date and calculate the sum of 'Total' for each date
daily_sales = df.groupby('Date')['Total'].sum()

# Plot the daily sales over time to detect trends
plt.figure(figsize=(12, 6))
plt.plot(daily_sales.index, daily_sales.values, marker='o', linestyle='-', color='b')
plt.title("Daily Sales Trend")
plt.xlabel("Date")
plt.ylabel("Total Sales")
plt.grid(True)
plt.show()

# daily sales using a boxplot
plt.figure(figsize=(8, 6))
sns.boxplot(x=daily_sales.values)
plt.title("Boxplot of Daily Sales")
plt.xlabel("Daily Total Sales")
plt.show()

# Calculate summary statistics for total sales
summary_stats = daily_sales.describe()
print("\nSummary Statistics for Daily Sales:")
print(summary_stats)

# Check for missing values in 'Total' and 'Date'
missing_values = df[['Date', 'Total']].isnull().sum()
print("\nMissing Values:")
print(missing_values)

# Scatter plot to detect outliers
plt.figure(figsize=(12, 6))
plt.scatter(daily_sales.index, daily_sales.values, color='b', alpha=0.7)
plt.title("Scatter Plot of Daily Sales (Outliers Detection)")
plt.xlabel("Date")
plt.ylabel("Total Sales")
plt.show()


# Bar Graph: Daily Total Sales
plt.figure(figsize=(12, 6))
daily_sales.plot(kind='bar', color='teal')
plt.title("Bar Graph of Daily Total Sales")
plt.xlabel("Date")
plt.ylabel("Total Sales")
plt.show()

# Histogram: Distribution of Total Sales
plt.figure(figsize=(12, 6))
sns.histplot(df['Total'], bins=20, kde=True, color='orange')
plt.title("Histogram of Total Sales")
plt.xlabel("Total Sales")
plt.ylabel("Frequency")
plt.show()