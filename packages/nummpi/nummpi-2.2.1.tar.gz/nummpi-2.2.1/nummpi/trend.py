# -*- coding: utf-8 -*-
"""sma_3_trends_prac_exam.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13aVKYjywFe7WcP-CQ6fKHa6mYr9nDMEP
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv(f"supermarket_sales - Sheet1.csv")
df.head()

df['Date'] = pd.to_datetime(df['Date'])
df.head(2)

data = df.loc[df['City'] == 'Yangon']
r_col = ['Invoice ID', 'Branch', 'City', 'Customer type', 'Gender',
       'Product line', 'Unit price', 'Quantity', 'Tax 5%',
       'Time', 'Payment', 'cogs', 'gross margin percentage', 'gross income',
       'Rating',]


data.drop(r_col, axis =1 , inplace=True)
data.head()
data2 = data.copy()

data = data[["Date","Total"]]
data = data.sort_values('Date')
data.set_index('Date', inplace=True)
data.head()
# df1=data

data.plot(figsize=(15,6),legend=True)
plt.ylabel("Sales",fontsize=18)
plt.xlabel("Date",fontsize=18)
plt.title("Date Vs Sales",fontsize=20)
plt.show()

# print(data2.columns)
data = data2

# Extract year, month, day, hour, or any other relevant time component for analysis
data['year'] = data['Date'].dt.year
data['month'] = data['Date'].dt.month
data['day'] = data['Date'].dt.day
# data['hour'] = data['Date'].dt.hour

data1 = data.copy()

# Count the number of occurrences for each unique day
data1 = data1["day"].value_counts()

# Convert the count results to a DataFrame for plotting
data1_df = data1.reset_index()
data1_df.columns = ['day', 'count']
data1_df = data1_df.sort_values('day')
data1_df.set_index('day', inplace=True)

data1_df.plot(figsize=(15,6), legend=True)
plt.ylabel("Sales",fontsize=18)
plt.xlabel("Days",fontsize=18)
plt.title("Trend Analysis of Social Media Posts Over Days Vs Sales",fontsize=20)
plt.show()


# seaborn method

# Plotting trends over time

plt.figure(figsize=(12, 6))
sns.countplot(x='day', data=data, palette="viridis")
plt.xlabel('Day')
plt.ylabel('Number of Posts')
plt.title('Trend Analysis of Social Media Posts Over Days')
plt.show()