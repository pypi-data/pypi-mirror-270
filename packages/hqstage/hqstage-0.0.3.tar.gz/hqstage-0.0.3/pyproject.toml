[project]
name = "hqstage"
license = {file="LICENSE"}
authors = [
    {name="HQS Quantum Simulations GmbH", email="info@quantumsimulations.de"}
]
maintainers = [
    {name="Sebastian Lehmann", email="sebastian.lehmann@quantumsimulations.de"}
]
requires-python = ">=3.9"
dynamic = ["version"]
dependencies = []
description = "Dummy package for hqstage - For the real package please refer to https://docs.cloud.quantumsimulations.de/"
readme = "README_pypi_org.md"


[build-system]
# requires = ["setuptools", "setuptools-scm", "toml", "wheel", "nuitka"]
# build-backend = "nuitka.distutils.Build"
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
version_scheme = "python-simplified-semver"

[project.scripts]
hqstage = "hqstage.cli:main"

[tool.mypy]
ignore_missing_imports = true
pretty = true
follow_imports = "silent"

[tool.bandit]
skips = ["B404", "B603", "B606", "B113"]

[tool.black]
line-length = 99
target-version = ["py39", "py310", "py311", "py312"]

[tool.coverage.run]
branch = true
omit = ["tests/*", "*test*.py"]
source=["hqstage"]

[tool.coverage.paths]
source = ["src", "**/site-packages"]

[tool.ruff]
line-length = 99  # same as black
target-version = "py311"
show-fixes = true
output-format = "full"
# activate the following checks
[tool.ruff.lint]
select = [
    "A",  # builtins
    "ANN",  # annotations
    "ARG",  # unused arguments
    "B",  # bugbear
    "C",  # comprehensions
    "C90",  # mccabe complexity
    "D",  # pydocstyle
    "E",  # pycodestyle
    "ERA",  # remove commented out code
    "F",  # pyflakes
    "ISC",  # implicit string concatenation
    "NPY",  # numpy
    "PL",  # pylint
    "RUF",  # ruff
    "S",  # bandit
    "TCH",  # type checking
    "W",  # Warnings
]
# ignore specific violations
ignore = [
    "D202",  # No blank lines allowed after function docstring
    "D203",  # 1 blank line required before class docstring
    "ANN002",
    "ANN003",
    "ANN101",
    "ANN102",
    "ANN401",
    "PLR",
    "S301",
    # "S403",  # not implemented in ruff (yet?!)
    # "S404",  # not implemented in ruff (yet?!)
]
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = [
    "A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W",
    "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT",
    "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI",
    "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"
]
unfixable = []
# exclude the following patterns from linting
exclude = [
    ".git",
    "__pycache__",
    "__version__.py",
    "doc/conf.py",
    "old",
    "build",
    "dist",
    "test_*"
]

[tool.ruff.lint.mccabe]
max-complexity = 20  # 5 higher than sonarqube (... but sonarqube uses different measure anyways...)

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
