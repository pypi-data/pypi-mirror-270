[tool.poetry]
name = "lango-cli-beta"
version = "0.0.1rc2"
description = ""
authors = []
readme = "README.md"
license = "MIT"

[tool.poetry.scripts]
lango-cli = "lango_cli_beta.cli:app"

[tool.poetry.dependencies]
python = "<3.12,>=3.9.0"
langchain-core = "^0.1.43"
typer = ">=0.9.0,<0.10.0"
langchain = "^0.1.16"
langchain-openai = "^0.1.3"
pymongo = "^4.6.3"
langchain-text-splitters = "^0.0.1"
python-dotenv = "^1.0.1"
motor = "^3.4.0"
langchain-mongodb = "^0.1.3"
langchain-anthropic = "^0.1.9"
langchain-cohere = "^0.1.2"
langchain-mistralai = "^0.1.2"
langchain-google-vertexai = "^1.0.1"
langchain-fireworks = "^0.1.2"
langgraph = ">=0.0.38,<0.1"
langserve = { version = "^0.1.0", extras = ["all"] }
fastapi = ">=0.110.2,<1"
uvicorn = ">=0.23.2,<0.24.0"
pydantic = ">=1.10.13,<2"
rich = "^13.7.1"
langchain-community = ">=0.0.34"
unstructured = { extras = ["all-docs"], version = "^0.13.4" }

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.3.0"
freezegun = "^1.2.2"
pytest-mock = "^3.10.0"
syrupy = "^4.0.2"
pytest-watcher = "^0.3.4"
pytest-asyncio = "^0.21.1"

[tool.poetry.group.codespell]
optional = true

[tool.poetry.group.codespell.dependencies]
codespell = "^2.2.0"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
ruff = "^0.1.5"

[tool.poetry.group.typing.dependencies]
mypy = "^1"

[tool.poetry.group.test_integration]
optional = true

[tool.poetry.group.test_integration.dependencies]

[tool.ruff]
select = [
  "E", # pycodestyle
  "F", # pyflakes
  "I", # isort
]
ignore = ["E501"]

[tool.mypy]
disallow_untyped_defs = "True"

[tool.coverage.run]
omit = ["tests/*"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
# --strict-markers will raise errors on unknown marks.
# https://docs.pytest.org/en/7.1.x/how-to/mark.html#raising-errors-on-unknown-marks
#
# https://docs.pytest.org/en/7.1.x/reference/reference.html
# --strict-config       any warnings encountered while parsing the `pytest`
#                       section of the configuration file raise errors.
#
# https://github.com/tophat/syrupy
# --snapshot-warn-unused    Prints a warning on unused snapshots rather than fail the test suite.
addopts = "--snapshot-warn-unused --strict-markers --strict-config --durations=5"
# Registering custom markers.
# https://docs.pytest.org/en/7.1.x/example/markers.html#registering-markers
markers = [
  "requires: mark tests as requiring a specific library",
  "asyncio: mark tests as requiring asyncio",
  "compile: mark placeholder test used to compile integration tests without running them",
]
asyncio_mode = "auto"
