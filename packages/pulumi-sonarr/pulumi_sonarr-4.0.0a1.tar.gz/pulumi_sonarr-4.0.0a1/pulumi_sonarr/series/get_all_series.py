# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetAllSeriesResult',
    'AwaitableGetAllSeriesResult',
    'get_all_series',
    'get_all_series_output',
]

@pulumi.output_type
class GetAllSeriesResult:
    """
    A collection of values returned by getAllSeries.
    """
    def __init__(__self__, id=None, series=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if series and not isinstance(series, list):
            raise TypeError("Expected argument 'series' to be a list")
        pulumi.set(__self__, "series", series)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of this resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def series(self) -> Sequence['outputs.GetAllSeriesSeriesResult']:
        """
        Series list.
        """
        return pulumi.get(self, "series")


class AwaitableGetAllSeriesResult(GetAllSeriesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAllSeriesResult(
            id=self.id,
            series=self.series)


def get_all_series(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAllSeriesResult:
    """
    <!-- subcategory:Series -->
    List all available Series.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_sonarr as sonarr

    example = sonarr.Series.get_all_series()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('sonarr:Series/getAllSeries:getAllSeries', __args__, opts=opts, typ=GetAllSeriesResult).value

    return AwaitableGetAllSeriesResult(
        id=pulumi.get(__ret__, 'id'),
        series=pulumi.get(__ret__, 'series'))


@_utilities.lift_output_func(get_all_series)
def get_all_series_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAllSeriesResult]:
    """
    <!-- subcategory:Series -->
    List all available Series.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_sonarr as sonarr

    example = sonarr.Series.get_all_series()
    ```
    """
    ...
