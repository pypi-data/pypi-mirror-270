# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetLanguagesResult',
    'AwaitableGetLanguagesResult',
    'get_languages',
    'get_languages_output',
]

@pulumi.output_type
class GetLanguagesResult:
    """
    A collection of values returned by getLanguages.
    """
    def __init__(__self__, id=None, languages=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if languages and not isinstance(languages, list):
            raise TypeError("Expected argument 'languages' to be a list")
        pulumi.set(__self__, "languages", languages)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of this resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def languages(self) -> Sequence['outputs.GetLanguagesLanguageResult']:
        """
        Language list.
        """
        return pulumi.get(self, "languages")


class AwaitableGetLanguagesResult(GetLanguagesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetLanguagesResult(
            id=self.id,
            languages=self.languages)


def get_languages(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetLanguagesResult:
    """
    <!-- subcategory:Languages -->
    List all available Languages.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_sonarr as sonarr

    example = sonarr.Languages.get_languages()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('sonarr:Languages/getLanguages:getLanguages', __args__, opts=opts, typ=GetLanguagesResult).value

    return AwaitableGetLanguagesResult(
        id=pulumi.get(__ret__, 'id'),
        languages=pulumi.get(__ret__, 'languages'))


@_utilities.lift_output_func(get_languages)
def get_languages_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetLanguagesResult]:
    """
    <!-- subcategory:Languages -->
    List all available Languages.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_sonarr as sonarr

    example = sonarr.Languages.get_languages()
    ```
    """
    ...
