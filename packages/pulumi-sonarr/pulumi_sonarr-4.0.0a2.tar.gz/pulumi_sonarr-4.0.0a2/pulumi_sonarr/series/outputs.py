# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetAllSeriesSeriesResult',
]

@pulumi.output_type
class GetAllSeriesSeriesResult(dict):
    def __init__(__self__, *,
                 id: int,
                 monitored: bool,
                 path: str,
                 quality_profile_id: int,
                 root_folder_path: str,
                 season_folder: bool,
                 tags: Sequence[int],
                 title: str,
                 title_slug: str,
                 tvdb_id: int,
                 use_scene_numbering: bool):
        """
        :param int id: Series ID.
        :param bool monitored: Monitored flag.
        :param str path: Series Path.
        :param int quality_profile_id: Quality Profile ID.
        :param str root_folder_path: Series Root Folder.
        :param bool season_folder: Season Folder flag.
        :param Sequence[int] tags: List of associated tags.
        :param str title: Series Title.
        :param str title_slug: Series Title in kebab format.
        :param int tvdb_id: TVDB ID.
        :param bool use_scene_numbering: Scene numbering flag.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "monitored", monitored)
        pulumi.set(__self__, "path", path)
        pulumi.set(__self__, "quality_profile_id", quality_profile_id)
        pulumi.set(__self__, "root_folder_path", root_folder_path)
        pulumi.set(__self__, "season_folder", season_folder)
        pulumi.set(__self__, "tags", tags)
        pulumi.set(__self__, "title", title)
        pulumi.set(__self__, "title_slug", title_slug)
        pulumi.set(__self__, "tvdb_id", tvdb_id)
        pulumi.set(__self__, "use_scene_numbering", use_scene_numbering)

    @property
    @pulumi.getter
    def id(self) -> int:
        """
        Series ID.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def monitored(self) -> bool:
        """
        Monitored flag.
        """
        return pulumi.get(self, "monitored")

    @property
    @pulumi.getter
    def path(self) -> str:
        """
        Series Path.
        """
        return pulumi.get(self, "path")

    @property
    @pulumi.getter(name="qualityProfileId")
    def quality_profile_id(self) -> int:
        """
        Quality Profile ID.
        """
        return pulumi.get(self, "quality_profile_id")

    @property
    @pulumi.getter(name="rootFolderPath")
    def root_folder_path(self) -> str:
        """
        Series Root Folder.
        """
        return pulumi.get(self, "root_folder_path")

    @property
    @pulumi.getter(name="seasonFolder")
    def season_folder(self) -> bool:
        """
        Season Folder flag.
        """
        return pulumi.get(self, "season_folder")

    @property
    @pulumi.getter
    def tags(self) -> Sequence[int]:
        """
        List of associated tags.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter
    def title(self) -> str:
        """
        Series Title.
        """
        return pulumi.get(self, "title")

    @property
    @pulumi.getter(name="titleSlug")
    def title_slug(self) -> str:
        """
        Series Title in kebab format.
        """
        return pulumi.get(self, "title_slug")

    @property
    @pulumi.getter(name="tvdbId")
    def tvdb_id(self) -> int:
        """
        TVDB ID.
        """
        return pulumi.get(self, "tvdb_id")

    @property
    @pulumi.getter(name="useSceneNumbering")
    def use_scene_numbering(self) -> bool:
        """
        Scene numbering flag.
        """
        return pulumi.get(self, "use_scene_numbering")


