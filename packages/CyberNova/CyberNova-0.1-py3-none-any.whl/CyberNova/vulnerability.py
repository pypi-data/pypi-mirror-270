import subprocess
import argparse

def scan_ports(target_ip):
    # Run nmap -p- to scan all ports on the target IP
    try:
        result = subprocess.run(['nmap', '-p-', target_ip], capture_output=True, text=True, check=True)
        open_ports = parse_open_ports(result.stdout)
        return open_ports
    except subprocess.CalledProcessError as e:
        print("Error:", e)
        return []

def parse_open_ports(nmap_output):
    # Parse nmap output to extract open ports
    open_ports = []
    lines = nmap_output.split('\n')
    for line in lines:
        if '/tcp' in line and 'open' in line:
            port = line.split('/')[0]
            open_ports.append(port)
    return open_ports

def scan_vulnerabilities(target_ip, open_ports):
    # Run nmap -sV --script vulners on open ports to scan for vulnerabilities
    for port in open_ports:
        try:
            result = subprocess.run(['nmap', '-sV', '--script', 'vulners', '--script-args', 'min_cvss=7.0', '--scan-delay', '1s', '-p', port, target_ip], capture_output=True, text=True, check=True)
            print("Vulnerability scan result for port", port)
            print(result.stdout)
            save_scan_result(result.stdout, f"vulnerability_scan_{target_ip}_port_{port}.txt")
        except subprocess.CalledProcessError as e:
            print("Error:", e)

def save_scan_result(scan_result, filename):
    # Save the scan result to a file
    try:
        with open(filename, "w") as file:
            file.write(scan_result)
        print("Scan result saved to:", filename)
    except Exception as e:
        print("Error:", e)

def main():
    parser = argparse.ArgumentParser(description="Vulnerability Scan Tool")
    parser.add_argument("target_ip", help="Target IP address to scan")
    args = parser.parse_args()

    open_ports = scan_ports(args.target_ip)
    if open_ports:
        print("Open ports found:", open_ports)
        scan_vulnerabilities(args.target_ip, open_ports)
    else:
        print("No open ports found.")

if __name__ == "__main__":
    main()
