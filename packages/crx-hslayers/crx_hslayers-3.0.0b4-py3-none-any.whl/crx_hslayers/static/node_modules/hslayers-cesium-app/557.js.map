{"version":3,"file":"557.js","mappings":"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","names":["WAYPOINT","setWaypoint","feature","wp","set","getWaypoint","get","HsTripPlannerService","constructor","HsMapService","HsUtilsService","$http","HsShareUrlService","HsEventBusService","HsToastService","HsLanguageService","HsLayerUtilsService","HsLayoutService","hsConfig","this","waypoints","trip","movable_features","Collection","selectedLayerWrapper","modify","Modify","features","mapClicked","subscribe","coordinates","mainpanel","waypointLayer","createWaypointLayer","routeLayer","createRouteLayer","getMap","getInteractions","getArray","find","i","getActive","instOf","Draw","addWaypoint","x","mapProjCoordinate","y","lon","epsg4326Coordinate","lat","loaded","then","map","addInteraction","fillVectorLayers","_this","_asyncToGenerator","vectorLayers","layer","title","getLayersArray","filter","isLayerDrawable","getTitle","fillDefaultLayerWrapper","usage","w","waypointSource","VectorSource","VectorLayer","source","style","waypointRouteStyle","setTitle","getTranslation","undefined","addLayer","routeSource","selectLayer","_this2","getSource","route","clear","length","getFeatures","new_cords","transform","getGeometry","getCoordinates","getCurrentProj","getCode","name","hash","hashCode","JSON","stringify","Math","random","routes","from","to","featureId","getId","loading","push","waypointAdded","calculateRoutes","getTextOnFeature","tmp","formatDistance","Feature","geometry","Point","id","generateUuid","setId","addFeature","getFeatureById","on","e","removeRoutesForWaypoint","prev_index","indexOf","routeRemoved","timer","clearTimeout","setTimeout","removeFeature","ex","waypointRemoved","removeWaypoint","wpIndex","next_index","splice","clearAll","routeAdded","addFeatures","_this3","wpf","wpt","url","proxify","response","lastValueFrom","post","pipe","timeout","catchError","status","createToastPopupMessage","getTranslationIgnoreNonExisting","message","disableLocalization","serviceCalledFrom","of","GeoJSON","readFeatures","which","distance","toFixed","static","t","i0","i1","i2","i3","i4","i5","i6","i7","i8","i9","core","jDH","factory","ɵfac","providedIn","ctx_r0","selectedWrapper","_c1","layer_r3","_r2","$implicit","layersExpanded","HsTripPlannerLayerSelectorComponent","VBU","selectors","inputs","label","decls","vars","consts","template","rf","ctx","HsTripPlannerLayerSelectorComponent_div_5_Template","HsTripPlannerLayerSelectorComponent_a_8_Template","_c0","waypoint_r3","ctx_r3","toggleEdit","$event","editMode","HsTripPlannerComponent_div_0_div_8_Template","HsTripPlannerComponent_div_0_div_9_Template","_r1","panelWidthClass","totalDistance","HsTripPlannerComponent","HsPanelBaseComponent","HsCoreService","HsConfig","hsLanguageService","super","ngOnInit","_superprop_getNgOnInit","call","default_layers","forEach","waypoint","src","setHighlighted","HsTripPlannerComponent_div_0_Template","isVisible$","HsTripPlannerModule","$C","G2t","FormsModule","CommonModule","HsPanelHelpersModule","NgbDropdownModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["webpack:///./projects/hslayers/components/trip-planner/trip-planner.service.ts","webpack:///./projects/hslayers/components/trip-planner/layer-selector.component.html","webpack:///./projects/hslayers/components/trip-planner/layer-selector.component.ts","webpack:///./projects/hslayers/components/trip-planner/trip-planner.component.html","webpack:///./projects/hslayers/components/trip-planner/trip-planner.component.ts","webpack:///./projects/hslayers/components/trip-planner/trip-planner.module.ts"],"sourcesContent":["import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {catchError, lastValueFrom, of, timeout} from 'rxjs';\n\nimport {Collection, Feature} from 'ol';\nimport {Draw, Modify} from 'ol/interaction';\nimport {Fill, Icon, Stroke, Style, Text} from 'ol/style';\nimport {GeoJSON} from 'ol/format';\nimport {Geometry, Point} from 'ol/geom';\nimport {Layer, Vector as VectorLayer} from 'ol/layer';\nimport {Source, Vector as VectorSource} from 'ol/source';\nimport {transform} from 'ol/proj';\n\nimport {HsConfig} from 'hslayers-ng/config';\nimport {HsEventBusService} from 'hslayers-ng/services/event-bus';\nimport {HsLanguageService} from 'hslayers-ng/services/language';\nimport {HsLayerUtilsService} from 'hslayers-ng/services/utils';\nimport {HsLayoutService} from 'hslayers-ng/services/layout';\nimport {HsMapService} from 'hslayers-ng/services/map';\nimport {HsShareUrlService} from 'hslayers-ng/components/share';\nimport {HsToastService} from 'hslayers-ng/common/toast';\nimport {HsUtilsService} from 'hslayers-ng/services/utils';\nimport {getHighlighted} from 'hslayers-ng/common/extensions';\nimport {getTitle, setTitle} from 'hslayers-ng/common/extensions';\n\nexport type Waypoint = {\n  name: string;\n  lon: number;\n  lat: number;\n  hash: number;\n  routes: {from: Feature<Geometry>; to: Feature<Geometry>};\n  featureId;\n  editMode?: boolean;\n  loading: boolean;\n};\n\nconst WAYPOINT = 'wp';\n\nexport function setWaypoint(feature: Feature<Geometry>, wp: Waypoint): void {\n  feature.set(WAYPOINT, wp);\n}\n\nexport function getWaypoint(feature: Feature<Geometry>): Waypoint {\n  return feature.get(WAYPOINT);\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HsTripPlannerService {\n  waypointRouteStyle;\n  waypoints: Waypoint[] = [];\n  trip: any = {};\n  movable_features = new Collection<Feature<Geometry>>();\n  modify: Modify;\n  waypointSource: VectorSource<Feature<Point>>;\n  waypointLayer: VectorLayer<VectorSource<Feature<Point>>>;\n  routeSource: VectorSource;\n  routeLayer: VectorLayer<VectorSource>;\n  timer: any;\n  vectorLayers: {layer: VectorLayer<VectorSource>; title: string}[];\n  selectedLayerWrapper: {\n    route?: {layer: VectorLayer<VectorSource>; title: string};\n    waypoints?: {layer: VectorLayer<VectorSource>; title: string};\n  } = {};\n\n  constructor(\n    public HsMapService: HsMapService,\n    public HsUtilsService: HsUtilsService,\n    private $http: HttpClient,\n    public HsShareUrlService: HsShareUrlService,\n    public HsEventBusService: HsEventBusService,\n    private HsToastService: HsToastService,\n    public HsLanguageService: HsLanguageService,\n    private HsLayerUtilsService: HsLayerUtilsService,\n    private HsLayoutService: HsLayoutService,\n    private hsConfig: HsConfig,\n  ) {\n    this.modify = new Modify({\n      features: this.movable_features,\n    });\n\n    this.HsEventBusService.mapClicked.subscribe((coordinates) => {\n      if (this.HsLayoutService.mainpanel != 'tripPlanner') {\n        return;\n      }\n      if (!this.waypointLayer) {\n        this.createWaypointLayer();\n      }\n      if (!this.routeLayer) {\n        this.createRouteLayer();\n      }\n      //Don't add waypoints when drawing and measuring\n      if (\n        this.HsMapService.getMap()\n          .getInteractions()\n          .getArray()\n          .find((i) => i.getActive() && this.HsUtilsService.instOf(i, Draw))\n      ) {\n        return;\n      }\n      this.addWaypoint({\n        x: coordinates.mapProjCoordinate[0],\n        y: coordinates.mapProjCoordinate[1],\n        lon: coordinates.epsg4326Coordinate[0],\n        lat: coordinates.epsg4326Coordinate[1],\n      });\n    });\n\n    this.HsMapService.loaded().then((map) => {\n      (feature, resolution) => {\n        return [\n          new Style({\n            fill: new Fill({\n              color: 'rgba(255, 255, 255, 0.6)',\n            }),\n            stroke: new Stroke({\n              color: '#337AB7',\n              width: 3,\n            }),\n            image: new Icon({\n              src:\n                this.hsConfig.assetsPath + getHighlighted(feature)\n                  ? 'img/pin_white_red32.png'\n                  : 'img/pin_white_blue32.png',\n              crossOrigin: 'anonymous',\n              anchor: [0.5, 1],\n            }),\n            text: new Text({\n              font: '12px Calibri,sans-serif',\n              overflow: true,\n              fill: new Fill({\n                color: '#000',\n              }),\n              stroke: new Stroke({\n                color: '#fff',\n                width: 3,\n              }),\n              offsetY: -40,\n              text: this.getTextOnFeature(feature),\n            }),\n          }),\n        ];\n      };\n      map.addInteraction(this.modify);\n      this.fillVectorLayers();\n    });\n  }\n\n  async fillVectorLayers(): Promise<void> {\n    this.HsMapService.loaded().then((map) => {\n      this.vectorLayers = [\n        {\n          layer: null,\n          title: 'newLayer',\n        },\n        ...this.HsMapService.getLayersArray()\n          .filter((layer: Layer<Source>) =>\n            this.HsLayerUtilsService.isLayerDrawable(layer),\n          )\n          .map((layer: VectorLayer<VectorSource>) => {\n            return {layer, title: getTitle(layer)};\n          }),\n      ];\n      this.fillDefaultLayerWrapper('route');\n      this.fillDefaultLayerWrapper('waypoints');\n    });\n  }\n\n  private fillDefaultLayerWrapper(usage: 'route' | 'waypoints') {\n    if (this.selectedLayerWrapper[usage]) {\n      this.selectedLayerWrapper[usage] = this.vectorLayers.find(\n        (w) => w.layer == this.selectedLayerWrapper[usage].layer,\n      );\n    } else {\n      this.selectedLayerWrapper[usage] = this.vectorLayers[0];\n    }\n  }\n\n  createWaypointLayer(): void {\n    this.waypointSource = new VectorSource();\n    this.waypointLayer = new VectorLayer({\n      source: this.waypointSource,\n      style: this.waypointRouteStyle,\n    });\n    setTitle(\n      this.waypointLayer,\n      this.HsLanguageService.getTranslation(\n        'TRIP_PLANNER.waypoints',\n        undefined,\n      ),\n    );\n    this.HsMapService.getMap().addLayer(this.waypointLayer);\n  }\n\n  createRouteLayer(): void {\n    this.routeSource = new VectorSource();\n    this.routeLayer = new VectorLayer({\n      source: this.routeSource,\n      style: this.waypointRouteStyle,\n    });\n    setTitle(\n      this.routeLayer,\n      this.HsLanguageService.getTranslation(\n        'TRIP_PLANNER.travelRoute',\n        undefined,\n      ),\n    );\n    this.HsMapService.getMap().addLayer(this.routeLayer);\n  }\n\n  /**\n   * Select layer for storing route or waypoint features\n   * @param layer - Wrapper object which contains OL layer and its title\n   * @param usage - route or waypoints\n   */\n  async selectLayer(\n    layer: {layer: VectorLayer<VectorSource>; title: string},\n    usage: 'route' | 'waypoints',\n  ): Promise<void> {\n    if (usage == 'route') {\n      this.routeLayer = layer.layer;\n      if (this.routeLayer) {\n        this.routeSource = this.routeLayer.getSource();\n      }\n      this.selectedLayerWrapper.route = layer;\n    }\n    if (usage == 'waypoints') {\n      this.waypointLayer = layer.layer as VectorLayer<\n        VectorSource<Feature<Point>>\n      >;\n      if (this.waypointLayer) {\n        this.waypointSource = this.waypointLayer.getSource();\n      }\n      this.routeSource.clear();\n      this.waypoints.length = 0;\n      this.selectedLayerWrapper.waypoints = layer;\n      for (const feature of this.waypointSource.getFeatures()) {\n        const new_cords = transform(\n          feature.getGeometry().getCoordinates(),\n          this.HsMapService.getCurrentProj().getCode(),\n          'EPSG:4326',\n        );\n        const wp: Waypoint = {\n          lon: new_cords[0],\n          lat: new_cords[1],\n          name: 'Waypoint ' + (this.waypoints.length + 1),\n          hash: this.HsUtilsService.hashCode(\n            JSON.stringify('Waypoint ' + this.waypoints.length + Math.random()),\n          ),\n          routes: {from: null, to: null},\n          featureId: feature.getId(),\n          loading: false,\n        };\n        this.waypoints.push(wp);\n        if (this.waypointAdded !== undefined) {\n          this.waypointAdded(wp);\n        }\n        await this.calculateRoutes();\n      }\n    }\n  }\n\n  getTextOnFeature(feature: Feature<Geometry>): string {\n    let tmp = '';\n    const wp: Waypoint = getWaypoint(feature);\n    if (wp) {\n      tmp = wp.name;\n      if (wp?.routes?.to) {\n        tmp += ` (${this.formatDistance(wp, 'to')})`;\n      }\n    }\n    return tmp;\n  }\n\n  /**\n   * Add waypoint to waypoint list and recalculate route\n   * @param lon - Longitude number (part of Ol.coordinate Array)\n   * @param lat - Latitude number (part of Ol.coordinate Array)\n   */\n  addWaypoint({\n    x,\n    y,\n    lon,\n    lat,\n  }: {\n    x: number;\n    y: number;\n    lon: number;\n    lat: number;\n  }) {\n    const wp: Waypoint = {\n      lon,\n      lat,\n      name: 'Waypoint ' + (this.waypoints.length + 1),\n      hash: this.HsUtilsService.hashCode(\n        JSON.stringify('Waypoint ' + this.waypoints.length + Math.random()),\n      ),\n      routes: {from: null, to: null},\n      featureId: null,\n      loading: false,\n    };\n    const feature = new Feature({\n      'wp': wp,\n      geometry: new Point([x, y]),\n      id: this.HsUtilsService.generateUuid(),\n    }) as Feature<Point>;\n    feature.setId(feature.get('id'));\n    wp.featureId = feature.getId();\n    this.waypointSource.addFeature(feature);\n    this.waypoints.push(wp);\n    if (this.waypointAdded !== undefined) {\n      this.waypointAdded(wp);\n    }\n    this.calculateRoutes();\n  }\n\n  /**\n   * Handler of adding waypoint in connected service\n   * @param wp - Waypoint object, with lat, lon and routes array\n   */\n  waypointAdded(wp: Waypoint): void {\n    const feature = this.waypointSource.getFeatureById(wp.featureId);\n    this.movable_features.push(feature);\n    feature.getGeometry().on('change', (e) => {\n      this.removeRoutesForWaypoint(wp);\n      const new_cords = transform(\n        feature.getGeometry().getCoordinates(),\n        this.HsMapService.getCurrentProj().getCode(),\n        'EPSG:4326',\n      );\n      wp.lon = new_cords[0];\n      wp.lat = new_cords[1];\n      const prev_index = this.waypoints.indexOf(wp) - 1;\n      if (prev_index > -1) {\n        this.waypoints[prev_index].routes.from = null;\n        this.routeRemoved(this.waypoints[prev_index].routes.from);\n      }\n      if (this.timer !== null) {\n        clearTimeout(this.timer);\n      }\n      this.timer = setTimeout(() => {\n        this.calculateRoutes();\n      }, 500);\n    });\n  }\n\n  /**\n   * Remove selected route from source\n   * @param feature - Route feature to remove\n   */\n  routeRemoved(feature: Feature<Geometry>): void {\n    try {\n      if (feature) {\n        this.routeSource.removeFeature(feature);\n      }\n    } catch (ex) {\n      throw ex;\n    }\n  }\n\n  /**\n   * (PRIVATE) Remove routes from selected waypoint\n   * @param wp - Waypoint to remove routes\n   */\n  removeRoutesForWaypoint(wp: Waypoint): void {\n    this.routeRemoved(wp.routes.from);\n    this.routeRemoved(wp.routes.to);\n    wp.routes = {from: null, to: null};\n  }\n\n  /**\n   * Remove selected waypoint from source\n   * @param wp - Waypoint feature to remove\n   */\n  waypointRemoved(wp: Waypoint): void {\n    try {\n      this.waypointSource.removeFeature(\n        this.waypointSource.getFeatureById(wp.featureId),\n      );\n    } catch (ex) {\n      throw ex;\n    }\n  }\n\n  /**\n   * Remove selected waypoint from trip\n   * @param wp - Waypoint object to remove\n   */\n  removeWaypoint(wp) {\n    const wpIndex = this.waypoints.indexOf(wp);\n    const prev_index = wpIndex - 1;\n    if (prev_index > -1) {\n      this.waypoints[prev_index].routes.from = null;\n    }\n    this.routeRemoved(wp.routes.from);\n    this.routeRemoved(wp.routes.to);\n    const next_index = wpIndex + 1;\n    if (next_index < this.waypoints.length) {\n      this.waypoints[next_index].routes.to = null;\n    }\n    this.waypointRemoved(wp);\n    this.waypoints.splice(this.waypoints.indexOf(wp), 1);\n    this.calculateRoutes();\n  }\n\n  /**\n   * Clear all waypoints from service and layer\n   */\n  clearAll(): void {\n    this.waypoints = [];\n    this.waypointSource.clear();\n    this.routeSource.clear();\n  }\n\n  /**\n   * Handler of adding computed route to layer\n   * @param feature - Route to add\n   */\n  routeAdded(features: Feature<Geometry>[]): void {\n    this.routeSource.addFeatures(features);\n  }\n\n  /**\n   * Calculate routes between stored waypoints\n   */\n  async calculateRoutes(): Promise<void> {\n    for (let i = 0; i < this.waypoints.length - 1; i++) {\n      const wpf = this.waypoints[i];\n      if (wpf.routes.from === null) {\n        const wpt = this.waypoints[i + 1];\n        wpt.loading = true;\n        const url = this.HsUtilsService.proxify(\n          'https://api.openrouteservice.org/v2/directions/driving-car/geojson',\n        );\n        const response = await lastValueFrom(\n          this.$http\n            .post(url, {\n              'coordinates': [\n                [wpf.lon, wpf.lat],\n                [wpt.lon, wpt.lat],\n              ],\n            })\n            .pipe(\n              timeout(10000),\n              catchError((e) => {\n                let title = this.HsLanguageService.getTranslation(\n                  'TRIP_PLANNER.serviceDown',\n                  undefined,\n                );\n                if (e.status == 404) {\n                  title = this.HsLanguageService.getTranslation(\n                    'TRIP_PLANNER.missingAuth',\n                    undefined,\n                  );\n                }\n                this.HsToastService.createToastPopupMessage(\n                  title,\n                  this.HsLanguageService.getTranslationIgnoreNonExisting(\n                    'ERRORMESSAGES',\n                    e.message,\n                    {url},\n                  ),\n                  {\n                    disableLocalization: true,\n                    serviceCalledFrom: 'HsTripPlannerService',\n                  },\n                );\n                return of(null);\n              }),\n            ),\n        );\n        if (!response) {\n          return;\n        }\n        wpt.loading = false;\n        const format = new GeoJSON();\n        const features = format.readFeatures(response);\n        features[0]\n          .getGeometry()\n          .transform('EPSG:4326', this.HsMapService.getCurrentProj());\n        wpf.routes.from = features[0];\n        wpt.routes.to = features[0];\n        if (this.routeAdded !== undefined) {\n          this.routeAdded(features);\n        }\n      }\n    }\n  }\n\n  /**\n   * Format waypoint route distance in a human friendly way\n   * @returns Distance\n   */\n  formatDistance(wp: Waypoint, which?: string): string {\n    which = which !== undefined ? which : 'from';\n    if (wp.routes[which]) {\n      const route = wp.routes[which];\n      const distance = route?.get('summary').distance / 1000.0;\n      if (distance == undefined) {\n        return '';\n      } else {\n        return distance.toFixed(2) + 'km';\n      }\n    }\n  }\n}\n","<div class=\"flex-row w-100 m-auto justify-content-center align-items-center\" style=\"display: flex\">\n  <p class=\"m-0 p-0 flex-fill text-primary\">{{label}}:</p>\n  <div ngbDropdown placement=\"bottom\" style=\"max-width: 50%\">\n    <button type=\"button\" ngbDropdownToggle class=\"\n        btn btn-sm\n        rounded-0\n        hs-toolbar-button\n        d-flex\n        align-items-center\n        mw-100\n      \" aria-haspopup=\"true\" (click)=\"layersExpanded = !layersExpanded; HsTripPlannerService.fillVectorLayers() \"\n      [attr.aria-expanded]=\"layersExpanded\">\n      <div class=\"text-truncate\" *ngIf=\"selectedWrapper !== undefined\">\n        {{selectedWrapper.title | translateHs : {module: 'LAYERS'} }}\n      </div>\n    </button>\n    <div ngbDropdownMenu [ngClass]=\"{'show': layersExpanded}\" style=\"transform: translateX(25%); width: 15em\">\n      <div class=\"d-flex align-items-center w-100 flex-column\">\n        <a class=\"dropdown-item text-truncate\" *ngFor=\"let layer of HsTripPlannerService.vectorLayers\"\n          data-toggle=\"tooltip\" [title]=\"layer.title | translateHs : {module: 'LAYERS'}\"\n          (click)=\"HsTripPlannerService.selectLayer(layer, usage); layersExpanded = false\">{{layer.title |\n          translateHs : {module: 'LAYERS'} }}</a>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, Input} from '@angular/core';\n\nimport {Vector as VectorLayer} from 'ol/layer';\nimport {Vector as VectorSource} from 'ol/source';\n\nimport {HsLayerUtilsService} from 'hslayers-ng/services/utils';\nimport {HsTripPlannerService} from './trip-planner.service';\n\n@Component({\n  selector: 'hs-trip-planner-layer-selector',\n  templateUrl: './layer-selector.component.html',\n})\nexport class HsTripPlannerLayerSelectorComponent {\n  @Input() label: string;\n  @Input() usage: 'route' | 'waypoints';\n  @Input() selectedWrapper: {\n    layer: VectorLayer<VectorSource>;\n    title: string;\n  };\n\n  layersExpanded: boolean;\n\n  constructor(\n    public HsTripPlannerService: HsTripPlannerService,\n    public HsLayerUtilsService: HsLayerUtilsService,\n  ) {}\n}\n","<div class=\"card hs-main-panel\" *ngIf=\"isVisible$ | async\" [ngClass]=\"panelWidthClass\">\n  <hs-panel-header name=\"tripPlanner\" [title]=\"'PANEL_HEADER.TRIP_PLANNER' | translateHs\">\n  </hs-panel-header>\n  <div class=\"card-body\">\n    <hs-trip-planner-layer-selector usage=\"route\" [label]=\"'TRIP_PLANNER.routerLayer' | translateHs\"\n      [selectedWrapper]=\"HsTripPlannerService.selectedLayerWrapper.route\">\n    </hs-trip-planner-layer-selector>\n    <hs-trip-planner-layer-selector usage=\"waypoints\" [label]=\"'TRIP_PLANNER.waypointLayer' | translateHs\"\n      [selectedWrapper]=\"HsTripPlannerService.selectedLayerWrapper.waypoints\">\n    </hs-trip-planner-layer-selector>\n\n    <div *ngFor=\"let waypoint of HsTripPlannerService.waypoints\" class=\"d-flex flex-row\">\n      <div class=\"p-1 flex-grow-1\">\n        <a (click)=\"toggleEdit(waypoint)\" [hidden]=\"!!waypoint.editMode\">{{waypoint.name}}</a>\n        <input [(ngModel)]=\"waypoint.name\" class=\"form-control hs-waypoint-name\" [ngModelOptions]=\"{standalone: true}\"\n          [hidden]=\"!waypoint.editMode\" (blur)=\"toggleEdit(waypoint)\" />\n      </div>\n      <div class=\"p-1\">\n        <span [hidden]=\"!waypoint.loading\" class=\"hs-loader hs-loader-dark\"></span>\n      </div>\n      <div class=\"p-1\" style=\"height: 1.7em\">\n        <div style=\"margin-top: 1em\">{{ formatDistance(waypoint) }}\n          <!-- TODO: Remove function call from template -->\n        </div>\n      </div>\n      <div class=\"p-1\">\n        <a class=\"p-1\" (click)=\"HsTripPlannerService.removeWaypoint(waypoint)\" data-toggle=\"tooltip\"\n          [title]=\"'TRIP_PLANNER.removeWaypoint' | translateHs\">\n          <i class=\"icon-remove-circle\" style=\"color: rgb(228, 99, 99)\"></i>\n        </a>\n      </div>\n    </div>\n    <div class=\"alert alert-primary\" role=\"alert\" *ngIf=\"HsTripPlannerService.waypoints.length===0\">\n      {{'TRIP_PLANNER.waypointDrawingHint' | translateHs}}\n    </div>\n    <br />\n    <a (click)=\"HsTripPlannerService.clearAll()\">{{'TRIP_PLANNER.clearWaypoints' | translateHs }}</a>\n    <br />\n    <div class=\"d-flex flex-row\">\n      <div class=\"p-1 flex-grow-1\">\n        <strong>{{'TRIP_PLANNER.totalDistance' | translateHs}}:</strong>\n      </div>\n      <div class=\"p-1\">{{totalDistance()}}</div>\n    </div>\n  </div>\n</div>","import {Component, OnInit} from '@angular/core';\n\nimport {Feature} from 'ol';\n\nimport {HsConfig} from 'hslayers-ng/config';\nimport {HsCoreService} from 'hslayers-ng/services/core';\nimport {HsLanguageService} from 'hslayers-ng/services/language';\nimport {HsLayerUtilsService} from 'hslayers-ng/services/utils';\nimport {HsMapService} from 'hslayers-ng/services/map';\nimport {HsPanelBaseComponent} from 'hslayers-ng/common/panels';\nimport {HsTripPlannerService, Waypoint} from './trip-planner.service';\nimport {HsUtilsService} from 'hslayers-ng/services/utils';\nimport {setHighlighted} from 'hslayers-ng/common/extensions';\n\n@Component({\n  selector: 'hs-trip-planner',\n  templateUrl: './trip-planner.component.html',\n})\nexport class HsTripPlannerComponent\n  extends HsPanelBaseComponent\n  implements OnInit\n{\n  timer: any;\n  name = 'tripPlanner';\n\n  constructor(\n    public HsMapService: HsMapService,\n    public HsCoreService: HsCoreService,\n    public HsTripPlannerService: HsTripPlannerService,\n    public HsConfig: HsConfig,\n    public HsUtilsService: HsUtilsService,\n    public HsLayerUtilsService: HsLayerUtilsService,\n    public hsLanguageService: HsLanguageService,\n  ) {\n    super();\n  }\n  async ngOnInit(): Promise<void> {\n    super.ngOnInit();\n    if (this.HsConfig.default_layers === undefined) {\n      this.HsConfig.default_layers = [];\n    } else {\n      this.HsConfig.default_layers.push(this.HsTripPlannerService.routeLayer);\n    }\n  }\n\n  /**\n   * Format waypoint route distance in a human friendly way\n   * @param wp - Waypoint\n   * @returns Distance\n   */\n  formatDistance(wp: Waypoint): string {\n    return this.HsTripPlannerService.formatDistance(wp);\n  }\n\n  /**\n   * Get the total distance for all waypoint routes\n   * @returns Distance\n   */\n  totalDistance(): string {\n    let tmp = 0;\n    this.HsTripPlannerService.waypoints.forEach((wp: Waypoint) => {\n      if (wp.routes.from) {\n        tmp += wp.routes.from.get('summary').distance / 1000.0;\n      }\n    });\n    return tmp.toFixed(2) + 'km';\n  }\n\n  /**\n   * Remove selected waypoint from source\n   */\n  toggleEdit(waypoint: Waypoint): void {\n    waypoint.editMode = !waypoint.editMode;\n    const src = this.HsTripPlannerService.waypointLayer.getSource();\n    setHighlighted(src.getFeatureById(waypoint.featureId), waypoint.editMode);\n  }\n}\n","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {NgbDropdownModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport {HsPanelHelpersModule} from 'hslayers-ng/common/panels';\nimport {HsTripPlannerComponent} from './trip-planner.component';\nimport {HsTripPlannerLayerSelectorComponent} from './layer-selector.component';\nimport {TranslateCustomPipe} from 'hslayers-ng/services/language';\n\n@NgModule({\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  declarations: [HsTripPlannerComponent, HsTripPlannerLayerSelectorComponent],\n  imports: [\n    FormsModule,\n    CommonModule,\n    TranslateCustomPipe,\n    HsPanelHelpersModule,\n    NgbDropdownModule,\n  ],\n  exports: [HsTripPlannerComponent, HsTripPlannerLayerSelectorComponent],\n})\nexport class HsTripPlannerModule {}\n"],"x_google_ignoreList":[]}