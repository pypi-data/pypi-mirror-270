"use strict";(self.webpackChunk_datalayer_jupyter_kernels=self.webpackChunk_datalayer_jupyter_kernels||[]).push([[6388],{86388:(e,n,t)=>{t.r(n),t.d(n,{default:()=>U});var o=t(44041),r=t(27990),s=t(2245),l=t(99190),a=t(22290),c=t(71204),i=t(35884),d=t(68337),u=t(58280),p=t(11097),m=t(72331),C=t(29246),g=t(47415),v=t(43043),h=t(97491),f=t(39138),b=t(18168),y=t(56276),k=t(75753),_=t(46931),x=t(47963),w=t(16781),E=t(68002),j=t(41835);const S={id:"@jupyterlab/console-extension:foreign",description:"Add foreign handler of IOPub messages to the console.",requires:[p.E,f.O,b.gv],optional:[s.WW],activate:function(e,n,t,o,r){const s=o.load("jupyterlab"),{shell:l}=e;n.widgetAdded.connect(((e,n)=>{const o=n.console,r=new E.U({sessionContext:o.sessionContext,parent:o});M.foreignHandlerProperty.set(o,r),t.get("@jupyterlab/console-extension:tracker","showAllKernelActivity").then((({composite:e})=>{const n=e;r.enabled=n})),o.disposed.connect((()=>{r.dispose()}))}));const{commands:a}=e,c=s.__("Console"),i="console:toggle-show-all-kernel-activity";a.addCommand(i,{label:e=>s.__("Show All Kernel Activity"),execute:e=>{const t=function(e){const t=n.currentWidget;return!1!==e.activate&&t&&l.activateById(t.id),t}(e);if(!t)return;const o=M.foreignHandlerProperty.get(t.console);o&&(o.enabled=!o.enabled)},isToggled:()=>{var e;return null!==n.currentWidget&&!!(null===(e=M.foreignHandlerProperty.get(n.currentWidget.console))||void 0===e?void 0:e.enabled)},isEnabled:()=>null!==n.currentWidget&&n.currentWidget===l.currentWidget}),r&&r.addItem({command:i,category:c,args:{isPalette:!0}})},autoStart:!0},P=S;var M,K;!function(e){e.foreignHandlerProperty=new j.AttachedProperty({name:"foreignHandler",create:()=>{}})}(M||(M={})),function(e){e.autoClosingBrackets="console:toggle-autoclosing-brackets",e.create="console:create",e.clear="console:clear",e.runUnforced="console:run-unforced",e.runForced="console:run-forced",e.linebreak="console:linebreak",e.interrupt="console:interrupt-kernel",e.restart="console:restart-kernel",e.closeAndShutdown="console:close-and-shutdown",e.open="console:open",e.inject="console:inject",e.changeKernel="console:change-kernel",e.getKernel="console:get-kernel",e.enterToExecute="console:enter-to-execute",e.shiftEnterToExecute="console:shift-enter-to-execute",e.interactionMode="console:interaction-mode",e.replaceSelection="console:replace-selection",e.shutdown="console:shutdown",e.invokeCompleter="completer:invoke-console",e.selectCompleter="completer:select-console"}(K||(K={}));const A={id:"@jupyterlab/console-extension:tracker",description:"Provides the console widget tracker.",provides:p.E,requires:[m.j.IContentFactory,d.D3,h.ZD,f.O],optional:[o.L,C.iH,v.O,s.WW,g.B,r.yo,s.oj,y.C,b.gv],activate:async function(e,n,t,o,r,s,i,d,u,p,C,g,v,h){const f=null!=h?h:b.Sr,y=f.load("jupyterlab"),E=e.serviceManager,{commands:j,shell:S}=e,P=y.__("Console"),M=null!=g?g:new l.H({translator:f}),A=new a.u({namespace:"console"});async function W(e){var s,l;await E.ready;const a=new m.j({manager:E,contentFactory:n,mimeTypeService:t.mimeTypeService,rendermime:o,sessionDialogs:M,translator:f,setBusy:null!==(s=C&&(()=>C.setBusy()))&&void 0!==s?s:void 0,...e}),c=(await r.get("@jupyterlab/console-extension:tracker","interactionMode")).composite;return a.console.node.dataset.jpInteractionMode=c,await A.add(a),a.sessionContext.propertyChanged.connect((()=>{A.save(a)})),S.add(a,"main",{ref:e.ref,mode:e.insertMode,activate:!1!==e.activate,type:null!==(l=e.type)&&void 0!==l?l:"Console"}),a}s&&s.restore(A,{command:K.create,args:e=>{const{path:n,name:t,kernelPreference:o}=e.console.sessionContext;return{path:n,name:t,kernelPreference:{...o}}},name:e=>{var n;return null!==(n=e.console.sessionContext.path)&&void 0!==n?n:x.UUID.uuid4()},when:E.ready}),p&&E.ready.then((()=>{let e=null;const n=()=>{e&&(e.dispose(),e=null);const n=E.kernelspecs.specs;if(n){e=new w.DisposableSet;for(const t in n.kernelspecs){const o=t===n.default?0:1/0,r=n.kernelspecs[t],s=r.resources["logo-svg"]||r.resources["logo-64x64"];e.add(p.add({command:K.create,args:{isLauncher:!0,kernelPreference:{name:t}},category:y.__("Console"),rank:o,kernelIconUrl:s,metadata:{kernel:x.JSONExt.deepCopy(r.metadata||{})}}))}}};n(),E.kernelspecs.specsChanged.connect(n)}));const B="@jupyterlab/console-extension:tracker";let I,U={};async function D(e){I=(await r.get(B,"interactionMode")).composite,U=(await r.get(B,"promptCellConfig")).composite;const n=e=>{var n,t;e.console.node.dataset.jpInteractionMode=I,e.console.editorConfig=U,null===(t=null===(n=e.console.promptCell)||void 0===n?void 0:n.editor)||void 0===t||t.setOptions(U)};e?n(e):A.forEach(n)}if(r.pluginChanged.connect(((e,n)=>{n===B&&D()})),await D(),v){const e=v.getRenderer("@jupyterlab/codemirror-extension:plugin.defaultConfig");e&&v.addRenderer("@jupyterlab/console-extension:tracker.promptCellConfig",e)}function F(){return null!==A.currentWidget&&A.currentWidget===S.currentWidget}A.widgetAdded.connect(((e,n)=>{D(n)})),j.addCommand(K.autoClosingBrackets,{execute:async e=>{var n;U.autoClosingBrackets=!!(null!==(n=e.force)&&void 0!==n?n:!U.autoClosingBrackets),await r.set(B,"promptCellConfig",U)},label:y.__("Auto Close Brackets for Code Console Prompt"),isToggled:()=>U.autoClosingBrackets});let q=K.open;function O(e){const n=A.currentWidget;return!1!==e.activate&&n&&S.activateById(n.id),null!=n?n:null}j.addCommand(q,{label:y.__("Open a console for the provided `path`."),execute:e=>{const n=e.path,t=A.find((e=>{var t;return(null===(t=e.console.sessionContext.session)||void 0===t?void 0:t.path)===n}));return t?(!1!==e.activate&&S.activateById(t.id),t):E.ready.then((()=>(0,_.sE)(E.sessions.running(),(e=>e.path===n))?W(e):Promise.reject(`No running kernel session for path: ${n}`)))}}),q=K.create,j.addCommand(q,{label:e=>{var n,t,o,r;if(e.isPalette)return y.__("New Console");if(e.isLauncher&&e.kernelPreference){const s=e.kernelPreference;return null!==(r=null===(o=null===(t=null===(n=E.kernelspecs)||void 0===n?void 0:n.specs)||void 0===t?void 0:t.kernelspecs[s.name||""])||void 0===o?void 0:o.display_name)&&void 0!==r?r:""}return y.__("Console")},icon:e=>e.isPalette?void 0:k.fO,execute:e=>{var n;return W({basePath:null!==(n=e.basePath||e.cwd||(null==i?void 0:i.model.path))&&void 0!==n?n:"",...e})}}),j.addCommand(K.clear,{label:y.__("Clear Console Cells"),execute:e=>{const n=O(e);n&&n.console.clear()},isEnabled:F}),j.addCommand(K.runUnforced,{label:y.__("Run Cell (unforced)"),execute:e=>{const n=O(e);if(n)return n.console.execute()},isEnabled:F}),j.addCommand(K.runForced,{label:y.__("Run Cell (forced)"),execute:e=>{const n=O(e);if(n)return n.console.execute(!0)},isEnabled:F}),j.addCommand(K.linebreak,{label:y.__("Insert Line Break"),execute:e=>{const n=O(e);n&&n.console.insertLinebreak()},isEnabled:F}),j.addCommand(K.replaceSelection,{label:y.__("Replace Selection in Console"),execute:e=>{const n=O(e);if(!n)return;const t=e.text||"";n.console.replaceSelection(t)},isEnabled:F}),j.addCommand(K.interrupt,{label:y.__("Interrupt Kernel"),execute:e=>{var n;const t=O(e);if(!t)return;const o=null===(n=t.console.sessionContext.session)||void 0===n?void 0:n.kernel;return o?o.interrupt():void 0},isEnabled:F}),j.addCommand(K.restart,{label:y.__("Restart Kernel…"),execute:e=>{const n=O(e);if(n)return M.restart(n.console.sessionContext)},isEnabled:F}),j.addCommand(K.shutdown,{label:y.__("Shut Down"),execute:e=>{const n=O(e);if(n)return n.console.sessionContext.shutdown()}}),j.addCommand(K.closeAndShutdown,{label:y.__("Close and Shut Down…"),execute:e=>{const n=O(e);if(n)return(0,c.vC)({title:y.__("Shut down the console?"),body:y.__('Are you sure you want to close "%1"?',n.title.label),buttons:[c.Vq.cancelButton({ariaLabel:y.__("Cancel console Shut Down")}),c.Vq.warnButton({ariaLabel:y.__("Confirm console Shut Down")})]}).then((e=>!!e.button.accept&&j.execute(K.shutdown,{activate:!1}).then((()=>(n.dispose(),!0)))))},isEnabled:F}),j.addCommand(K.inject,{label:y.__("Inject some code in a console."),execute:e=>{const n=e.path;A.find((t=>{var o;return(null===(o=t.console.sessionContext.session)||void 0===o?void 0:o.path)===n&&(!1!==e.activate&&S.activateById(t.id),t.console.inject(e.code,e.metadata),!0)}))},isEnabled:F}),j.addCommand(K.changeKernel,{label:y.__("Change Kernel…"),execute:e=>{const n=O(e);if(n)return M.selectKernel(n.console.sessionContext)},isEnabled:F}),j.addCommand(K.getKernel,{label:y.__("Get Kernel"),execute:e=>{var n;const t=O({activate:!1,...e});if(t)return null===(n=t.sessionContext.session)||void 0===n?void 0:n.kernel},isEnabled:F}),u&&[K.create,K.linebreak,K.clear,K.runUnforced,K.runForced,K.restart,K.interrupt,K.changeKernel,K.closeAndShutdown].forEach((e=>{u.addItem({command:e,category:P,args:{isPalette:!0}})})),d&&(d.fileMenu.closeAndCleaners.add({id:K.closeAndShutdown,isEnabled:F}),d.kernelMenu.kernelUsers.changeKernel.add({id:K.changeKernel,isEnabled:F}),d.kernelMenu.kernelUsers.clearWidget.add({id:K.clear,isEnabled:F}),d.kernelMenu.kernelUsers.interruptKernel.add({id:K.interrupt,isEnabled:F}),d.kernelMenu.kernelUsers.restartKernel.add({id:K.restart,isEnabled:F}),d.kernelMenu.kernelUsers.shutdownKernel.add({id:K.shutdown,isEnabled:F}),d.runMenu.codeRunners.run.add({id:K.runForced,isEnabled:F}),d.editMenu.clearers.clearCurrent.add({id:K.clear,isEnabled:F}),d.helpMenu.getKernel.add({id:K.getKernel,isEnabled:F}));const T={notebook:y.__("Execute with Shift+Enter"),terminal:y.__("Execute with Enter")};return j.addCommand(K.interactionMode,{label:e=>{var n;return null!==(n=T[e.interactionMode])&&void 0!==n?n:"Set the console interaction mode."},execute:async e=>{try{await r.set(B,"interactionMode",e.interactionMode)}catch(e){console.error(`Failed to set ${B}:keyMap - ${e.message}`)}},isToggled:e=>e.interactionMode===I}),A},autoStart:!0},W={id:"@jupyterlab/console-extension:factory",description:"Provides the console widget content factory.",provides:m.j.IContentFactory,requires:[d.D3],autoStart:!0,activate:(e,n)=>{const t=n.factoryService.newInlineEditor;return new m.j.ContentFactory({editorFactory:t})}},B={id:"@jupyterlab/console-extension:kernel-status",description:"Adds the console to the kernel status indicator model.",autoStart:!0,requires:[p.E,s.hz],activate:(e,n,t)=>{t.addSessionProvider((e=>e&&n.has(e)?e.sessionContext:null))}},I={id:"@jupyterlab/console-extension:cursor-position",description:"Adds the console to the code editor cursor position model.",autoStart:!0,requires:[p.E,d.fY],activate:(e,n,t)=>{let o=null;t.addEditorProvider((async e=>{let r=null;if(e!==o){if(null==o||o.console.promptCellCreated.disconnect(t.update),o=null,e&&n.has(e)){e.console.promptCellCreated.connect(t.update);const n=e.console.promptCell;r=null,n&&(await n.ready,r=n.editor),o=e}}else if(e){const n=e.console.promptCell;r=null,n&&(await n.ready,r=n.editor)}return r}))}},U=[W,A,P,B,I,{id:"@jupyterlab/console-extension:completer",description:"Adds completion to the console.",autoStart:!0,requires:[p.E],optional:[u.pl,b.gv,s.hd],activate:function(e,n,t,o,r){if(!t)return;const s=(null!=o?o:b.Sr).load("jupyterlab"),l=null!=r?r:new i.T;e.commands.addCommand(K.invokeCompleter,{label:s.__("Display the completion helper."),execute:()=>{const e=n.currentWidget&&n.currentWidget.id;if(e)return t.invoke(e)}}),e.commands.addCommand(K.selectCompleter,{label:s.__("Select the completion suggestion."),execute:()=>{const e=n.currentWidget&&n.currentWidget.id;if(e)return t.select(e)}}),e.commands.addKeyBinding({command:K.selectCompleter,keys:["Enter"],selector:".jp-ConsolePanel .jp-mod-completer-active"});const a=async(e,n)=>{var o,r;const s={editor:null!==(r=null===(o=n.console.promptCell)||void 0===o?void 0:o.editor)&&void 0!==r?r:null,session:n.console.sessionContext.session,widget:n};await t.updateCompleter(s),n.console.promptCellCreated.connect(((e,o)=>{const r={editor:o.editor,session:e.sessionContext.session,widget:n,sanitzer:l};t.updateCompleter(r).catch(console.error)})),n.console.sessionContext.sessionChanged.connect((()=>{var e,o;const r={editor:null!==(o=null===(e=n.console.promptCell)||void 0===e?void 0:e.editor)&&void 0!==o?o:null,session:n.console.sessionContext.session,widget:n,sanitizer:l};t.updateCompleter(r).catch(console.error)}))};n.widgetAdded.connect(a),t.activeProvidersChanged.connect((()=>{n.forEach((e=>{a(0,e).catch((e=>console.error(e)))}))}))}}]}}]);