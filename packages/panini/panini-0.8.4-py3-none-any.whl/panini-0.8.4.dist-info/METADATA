Metadata-Version: 2.1
Name: panini
Version: 0.8.4
Summary: A python messaging framework for microservices based on NATS
Home-page: https://github.com/lwinterface/panini
Author: Op Return SA, developers: Andrii Volotskov, Danylo Tiutiushkin
Author-email: example@example.com
License: MIT
Project-URL: Bug Reports, https://github.com/lwinterface/panini/issues
Project-URL: Source, https://github.com/lwinterface/panini/
Keywords: nats,microservice,stream,processing,asyncio,distributed,queue
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Topic :: System :: Networking
Classifier: Topic :: System :: Distributed Computing
Requires-Python: >=3.8.3
Description-Content-Type: text/x-rst
License-File: LICENSE.md
Requires-Dist: async-timeout ==4.0.0
Requires-Dist: nats-py ==2.6.0
Requires-Dist: websocket-client >=1.2.3
Requires-Dist: requests >=2.31.0
Requires-Dist: six >=1.15.0
Requires-Dist: yarl >=1.6.1
Requires-Dist: python-json-logger >=2.0.1
Requires-Dist: nest-asyncio ==1.5.1
Requires-Dist: prometheus-client ==0.9.0
Requires-Dist: nats-python >=0.8.0
Requires-Dist: ujson ==5.4.0
Provides-Extra: tracing
Requires-Dist: opentelemetry-api ==1.19.0 ; extra == 'tracing'
Requires-Dist: opentelemetry-sdk ==1.19.0 ; extra == 'tracing'
Requires-Dist: opentelemetry-exporter-otlp-proto-grpc ==1.19.0 ; extra == 'tracing'
Requires-Dist: opentelemetry-exporter-prometheus ==1.12.0rc1 ; extra == 'tracing'


Panini is a modern framework for quick development of streaming microservices.
Our goal is to create fastapi/aiohttp/flask-like solution but for NATS streaming.
The framework allows you to work with NATS features and some additional logic using a simple interface:

- publish messages to subject
- subscribe to subject
- request-response
- request-response to another subject
- tasks
- periodic tasks
- middlewares
- HTTP server

