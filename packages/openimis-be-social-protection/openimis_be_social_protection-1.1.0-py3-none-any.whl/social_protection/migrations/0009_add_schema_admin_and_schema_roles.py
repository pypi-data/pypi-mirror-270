# Generated by Django 3.2.20 on 2023-08-01 14:45

from django.db import migrations

from core.models import Role, RoleRight
from core.utils import insert_role_right_for_system

SCHEMA_ADMIN_ID = 4194304
IMIS_ADMIN = 64
ROLE_NAME = "Schema Admin"
SCHEMA_ADMIN_ROLE_RIGHTS = ["171001", "171002", "171003", "171004"]


def _get_role(role_id):
    return Role.objects.filter(is_system=role_id).first()


def _add_rights_to_role(role):
    for right in SCHEMA_ADMIN_ROLE_RIGHTS:
        insert_role_right_for_system(role, right)


def _remove_rights_from_role(role):
    RoleRight.objects.filter(
        role__is_system=role,
        right_id__in=SCHEMA_ADMIN_ROLE_RIGHTS,
        validity_to__isnull=True
    ).delete()


def _create_task_triage_role():
    role = _get_role(SCHEMA_ADMIN_ID)
    if not role:
        task_triage = Role(is_system=SCHEMA_ADMIN_ID, name=ROLE_NAME, is_blocked=False)
        task_triage.save()


def _delete_task_triage_role():
    role = _get_role(SCHEMA_ADMIN_ID)
    if role:
        role.delete()


def on_migration(apps, schema_editor):
    _create_task_triage_role()
    _add_rights_to_role(IMIS_ADMIN)
    _add_rights_to_role(SCHEMA_ADMIN_ID)


def on_migration_reverse(apps, schema_editor):
    _remove_rights_from_role(IMIS_ADMIN)
    _remove_rights_from_role(SCHEMA_ADMIN_ID)
    _delete_task_triage_role()


class Migration(migrations.Migration):
    dependencies = [
        ('social_protection', '0008_benefitplandatauploadrecords_historicalbenefitplandatauploadrecords'),
    ]

    operations = [
        migrations.RunPython(on_migration, on_migration_reverse)
    ]
