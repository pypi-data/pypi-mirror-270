"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.discovery.v0.conditions_pb2
import ansys.api.discovery.v0.discoverymodels_pb2
import grpc

class ConditionsStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    CreateHeat: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.conditions_pb2.HeatCreationRequest,
        ansys.api.discovery.v0.discoverymodels_pb2.Heat] = ...
    """Heat methods"""

    ChangeHeatLocation: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.conditions_pb2.HeatChangeLocationRequest,
        ansys.api.discovery.v0.conditions_pb2.ConditionChangedResponse] = ...

    ChangeTotalHeat: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.conditions_pb2.ChangeQuantityRequest,
        ansys.api.discovery.v0.conditions_pb2.ConditionChangedResponse] = ...

    ChangeHeatPerUnitVolume: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.conditions_pb2.ChangeQuantityRequest,
        ansys.api.discovery.v0.conditions_pb2.ConditionChangedResponse] = ...

    ChangeHeatPerUnitArea: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.conditions_pb2.ChangeQuantityRequest,
        ansys.api.discovery.v0.conditions_pb2.ConditionChangedResponse] = ...

    ChangeHeatSpecification: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.conditions_pb2.HeatSpecificationRequest,
        ansys.api.discovery.v0.conditions_pb2.ConditionChangedResponse] = ...


class ConditionsServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def CreateHeat(self,
        request: ansys.api.discovery.v0.conditions_pb2.HeatCreationRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.discoverymodels_pb2.Heat:
        """Heat methods"""
        pass

    @abc.abstractmethod
    def ChangeHeatLocation(self,
        request: ansys.api.discovery.v0.conditions_pb2.HeatChangeLocationRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.conditions_pb2.ConditionChangedResponse: ...

    @abc.abstractmethod
    def ChangeTotalHeat(self,
        request: ansys.api.discovery.v0.conditions_pb2.ChangeQuantityRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.conditions_pb2.ConditionChangedResponse: ...

    @abc.abstractmethod
    def ChangeHeatPerUnitVolume(self,
        request: ansys.api.discovery.v0.conditions_pb2.ChangeQuantityRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.conditions_pb2.ConditionChangedResponse: ...

    @abc.abstractmethod
    def ChangeHeatPerUnitArea(self,
        request: ansys.api.discovery.v0.conditions_pb2.ChangeQuantityRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.conditions_pb2.ConditionChangedResponse: ...

    @abc.abstractmethod
    def ChangeHeatSpecification(self,
        request: ansys.api.discovery.v0.conditions_pb2.HeatSpecificationRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.conditions_pb2.ConditionChangedResponse: ...


def add_ConditionsServicer_to_server(servicer: ConditionsServicer, server: grpc.Server) -> None: ...
