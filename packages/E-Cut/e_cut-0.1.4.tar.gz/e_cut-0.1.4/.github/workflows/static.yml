name: documentation

# build the documentation whenever there are new commits on main
on:
  push:
    # Alternative: only build for tags.
    branches: ["main"]
  workflow_dispatch:

# security: restrict permissions for CI jobs.
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build the documentation and upload the static HTML files as an artifact.
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version-file: .github/python-version.txt

      # ADJUST THIS: install all dependencies (including pdoc)
      - run: pip install -e .
        env:
          GH_OPTION: true
      - run: pip install pdoc
      # ADJUST THIS: build your documentation into docs/.
      # We use a custom build script for pdoc itself, ideally you just run `pdoc -o docs/ ...` here.
#      - run: git clone https://github.com/oddlama/pdoc-bulma-theme
      - run: pdoc ecut -o docs/ --logo "https://github.com/SEU-ALLEN-codebase/Ensemble-Cut/blob/main/assets/logo.png?raw=true"

      - uses: actions/upload-pages-artifact@v1
        with:
          path: docs/

  # Deploy the artifact to GitHub pages.
  # This is a separate job so that only actions/deploy-pages has the necessary permissions.
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v1
