{"sample_ix": 0, "code": "x", "complexity": 2, "range": [0, 100], "values": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]}
{"sample_ix": 1, "code": "7", "complexity": 2, "range": [0, 100], "values": [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]}
{"sample_ix": 2, "code": "-x", "complexity": 3, "range": [0, 100], "values": [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -85, -86, -87, -88, -89, -90, -91, -92, -93, -94, -95, -96, -97, -98, -99, -100]}
{"sample_ix": 3, "code": "x * 2", "complexity": 4, "range": [0, 100], "values": [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200]}
{"sample_ix": 4, "code": "x * 27", "complexity": 4, "range": [0, 100], "values": [0, 27, 54, 81, 108, 135, 162, 189, 216, 243, 270, 297, 324, 351, 378, 405, 432, 459, 486, 513, 540, 567, 594, 621, 648, 675, 702, 729, 756, 783, 810, 837, 864, 891, 918, 945, 972, 999, 1026, 1053, 1080, 1107, 1134, 1161, 1188, 1215, 1242, 1269, 1296, 1323, 1350, 1377, 1404, 1431, 1458, 1485, 1512, 1539, 1566, 1593, 1620, 1647, 1674, 1701, 1728, 1755, 1782, 1809, 1836, 1863, 1890, 1917, 1944, 1971, 1998, 2025, 2052, 2079, 2106, 2133, 2160, 2187, 2214, 2241, 2268, 2295, 2322, 2349, 2376, 2403, 2430, 2457, 2484, 2511, 2538, 2565, 2592, 2619, 2646, 2673, 2700]}
{"sample_ix": 5, "code": "x * -2", "complexity": 4, "range": [0, 100], "values": [0, -2, -4, -6, -8, -10, -12, -14, -16, -18, -20, -22, -24, -26, -28, -30, -32, -34, -36, -38, -40, -42, -44, -46, -48, -50, -52, -54, -56, -58, -60, -62, -64, -66, -68, -70, -72, -74, -76, -78, -80, -82, -84, -86, -88, -90, -92, -94, -96, -98, -100, -102, -104, -106, -108, -110, -112, -114, -116, -118, -120, -122, -124, -126, -128, -130, -132, -134, -136, -138, -140, -142, -144, -146, -148, -150, -152, -154, -156, -158, -160, -162, -164, -166, -168, -170, -172, -174, -176, -178, -180, -182, -184, -186, -188, -190, -192, -194, -196, -198, -200]}
{"sample_ix": 6, "code": "x * -19", "complexity": 4, "range": [0, 100], "values": [0, -19, -38, -57, -76, -95, -114, -133, -152, -171, -190, -209, -228, -247, -266, -285, -304, -323, -342, -361, -380, -399, -418, -437, -456, -475, -494, -513, -532, -551, -570, -589, -608, -627, -646, -665, -684, -703, -722, -741, -760, -779, -798, -817, -836, -855, -874, -893, -912, -931, -950, -969, -988, -1007, -1026, -1045, -1064, -1083, -1102, -1121, -1140, -1159, -1178, -1197, -1216, -1235, -1254, -1273, -1292, -1311, -1330, -1349, -1368, -1387, -1406, -1425, -1444, -1463, -1482, -1501, -1520, -1539, -1558, -1577, -1596, -1615, -1634, -1653, -1672, -1691, -1710, -1729, -1748, -1767, -1786, -1805, -1824, -1843, -1862, -1881, -1900]}
{"sample_ix": 7, "code": "x + 1", "complexity": 4, "range": [0, 100], "values": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101]}
{"sample_ix": 8, "code": "x + 17", "complexity": 4, "range": [0, 100], "values": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117]}
{"sample_ix": 9, "code": "x - 1", "complexity": 4, "range": [0, 100], "values": [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]}
{"sample_ix": 10, "code": "x - 29", "complexity": 4, "range": [0, 100], "values": [-29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71]}
{"sample_ix": 11, "code": "7 - x", "complexity": 4, "range": [0, 100], "values": [7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -85, -86, -87, -88, -89, -90, -91, -92, -93]}
{"sample_ix": 12, "code": "x ** 2", "complexity": 4, "range": [0, 100], "values": [0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 256, 289, 324, 361, 400, 441, 484, 529, 576, 625, 676, 729, 784, 841, 900, 961, 1024, 1089, 1156, 1225, 1296, 1369, 1444, 1521, 1600, 1681, 1764, 1849, 1936, 2025, 2116, 2209, 2304, 2401, 2500, 2601, 2704, 2809, 2916, 3025, 3136, 3249, 3364, 3481, 3600, 3721, 3844, 3969, 4096, 4225, 4356, 4489, 4624, 4761, 4900, 5041, 5184, 5329, 5476, 5625, 5776, 5929, 6084, 6241, 6400, 6561, 6724, 6889, 7056, 7225, 7396, 7569, 7744, 7921, 8100, 8281, 8464, 8649, 8836, 9025, 9216, 9409, 9604, 9801, 10000]}
{"sample_ix": 13, "code": "x ** 3", "complexity": 4, "range": [0, 100], "values": [0, 1, 8, 27, 64, 125, 216, 343, 512, 729, 1000, 1331, 1728, 2197, 2744, 3375, 4096, 4913, 5832, 6859, 8000, 9261, 10648, 12167, 13824, 15625, 17576, 19683, 21952, 24389, 27000, 29791, 32768, 35937, 39304, 42875, 46656, 50653, 54872, 59319, 64000, 68921, 74088, 79507, 85184, 91125, 97336, 103823, 110592, 117649, 125000, 132651, 140608, 148877, 157464, 166375, 175616, 185193, 195112, 205379, 216000, 226981, 238328, 250047, 262144, 274625, 287496, 300763, 314432, 328509, 343000, 357911, 373248, 389017, 405224, 421875, 438976, 456533, 474552, 493039, 512000, 531441, 551368, 571787, 592704, 614125, 636056, 658503, 681472, 704969, 729000, 753571, 778688, 804357, 830584, 857375, 884736, 912673, 941192, 970299, 1000000]}
{"sample_ix": 14, "code": "x % 3", "complexity": 4, "range": [0, 100], "values": [0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1]}
{"sample_ix": 15, "code": "x % 7", "complexity": 4, "range": [0, 100], "values": [0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2]}
{"sample_ix": 16, "code": "x % 10", "complexity": 4, "range": [0, 100], "values": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0]}
{"sample_ix": 17, "code": "x | 1", "complexity": 4, "range": [0, 100], "values": [1, 1, 3, 3, 5, 5, 7, 7, 9, 9, 11, 11, 13, 13, 15, 15, 17, 17, 19, 19, 21, 21, 23, 23, 25, 25, 27, 27, 29, 29, 31, 31, 33, 33, 35, 35, 37, 37, 39, 39, 41, 41, 43, 43, 45, 45, 47, 47, 49, 49, 51, 51, 53, 53, 55, 55, 57, 57, 59, 59, 61, 61, 63, 63, 65, 65, 67, 67, 69, 69, 71, 71, 73, 73, 75, 75, 77, 77, 79, 79, 81, 81, 83, 83, 85, 85, 87, 87, 89, 89, 91, 91, 93, 93, 95, 95, 97, 97, 99, 99, 101]}
{"sample_ix": 18, "code": "min(x, 30)", "complexity": 5, "range": [0, 100], "values": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30]}
{"sample_ix": 19, "code": "max(x, 30)", "complexity": 5, "range": [0, 100], "values": [30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]}
{"sample_ix": 20, "code": "round(x / 10)", "complexity": 6, "range": [0, 100], "values": [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10]}
{"sample_ix": 21, "code": "int(x < 32)", "complexity": 6, "range": [0, 100], "values": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}
{"sample_ix": 22, "code": "x ** 2 - 10", "complexity": 6, "range": [0, 100], "values": [-10, -9, -6, -1, 6, 15, 26, 39, 54, 71, 90, 111, 134, 159, 186, 215, 246, 279, 314, 351, 390, 431, 474, 519, 566, 615, 666, 719, 774, 831, 890, 951, 1014, 1079, 1146, 1215, 1286, 1359, 1434, 1511, 1590, 1671, 1754, 1839, 1926, 2015, 2106, 2199, 2294, 2391, 2490, 2591, 2694, 2799, 2906, 3015, 3126, 3239, 3354, 3471, 3590, 3711, 3834, 3959, 4086, 4215, 4346, 4479, 4614, 4751, 4890, 5031, 5174, 5319, 5466, 5615, 5766, 5919, 6074, 6231, 6390, 6551, 6714, 6879, 7046, 7215, 7386, 7559, 7734, 7911, 8090, 8271, 8454, 8639, 8826, 9015, 9206, 9399, 9594, 9791, 9990]}
{"sample_ix": 23, "code": "x ** 2 * 2", "complexity": 6, "range": [0, 100], "values": [0, 2, 8, 18, 32, 50, 72, 98, 128, 162, 200, 242, 288, 338, 392, 450, 512, 578, 648, 722, 800, 882, 968, 1058, 1152, 1250, 1352, 1458, 1568, 1682, 1800, 1922, 2048, 2178, 2312, 2450, 2592, 2738, 2888, 3042, 3200, 3362, 3528, 3698, 3872, 4050, 4232, 4418, 4608, 4802, 5000, 5202, 5408, 5618, 5832, 6050, 6272, 6498, 6728, 6962, 7200, 7442, 7688, 7938, 8192, 8450, 8712, 8978, 9248, 9522, 9800, 10082, 10368, 10658, 10952, 11250, 11552, 11858, 12168, 12482, 12800, 13122, 13448, 13778, 14112, 14450, 14792, 15138, 15488, 15842, 16200, 16562, 16928, 17298, 17672, 18050, 18432, 18818, 19208, 19602, 20000]}
{"sample_ix": 24, "code": "x * (x - 1)", "complexity": 6, "range": [0, 100], "values": [0, 0, 2, 6, 12, 20, 30, 42, 56, 72, 90, 110, 132, 156, 182, 210, 240, 272, 306, 342, 380, 420, 462, 506, 552, 600, 650, 702, 756, 812, 870, 930, 992, 1056, 1122, 1190, 1260, 1332, 1406, 1482, 1560, 1640, 1722, 1806, 1892, 1980, 2070, 2162, 2256, 2352, 2450, 2550, 2652, 2756, 2862, 2970, 3080, 3192, 3306, 3422, 3540, 3660, 3782, 3906, 4032, 4160, 4290, 4422, 4556, 4692, 4830, 4970, 5112, 5256, 5402, 5550, 5700, 5852, 6006, 6162, 6320, 6480, 6642, 6806, 6972, 7140, 7310, 7482, 7656, 7832, 8010, 8190, 8372, 8556, 8742, 8930, 9120, 9312, 9506, 9702, 9900]}
{"sample_ix": 25, "code": "5 - (x % 5)", "complexity": 6, "range": [0, 100], "values": [5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5]}
{"sample_ix": 26, "code": "10 - (x % 10)", "complexity": 6, "range": [0, 100], "values": [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 10]}
{"sample_ix": 27, "code": "16 - (x % 16)", "complexity": 6, "range": [0, 100], "values": [16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 16, 15, 14, 13, 12]}
{"sample_ix": 28, "code": "x - x % 6", "complexity": 6, "range": [0, 100], "values": [0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 12, 12, 12, 12, 12, 12, 18, 18, 18, 18, 18, 18, 24, 24, 24, 24, 24, 24, 30, 30, 30, 30, 30, 30, 36, 36, 36, 36, 36, 36, 42, 42, 42, 42, 42, 42, 48, 48, 48, 48, 48, 48, 54, 54, 54, 54, 54, 54, 60, 60, 60, 60, 60, 60, 66, 66, 66, 66, 66, 66, 72, 72, 72, 72, 72, 72, 78, 78, 78, 78, 78, 78, 84, 84, 84, 84, 84, 84, 90, 90, 90, 90, 90, 90, 96, 96, 96, 96, 96]}
{"sample_ix": 29, "code": "x - x % 15", "complexity": 6, "range": [0, 100], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90]}
{"sample_ix": 30, "code": "x - x % 10", "complexity": 6, "range": [0, 100], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 100]}
{"sample_ix": 31, "code": "x + x % 10", "complexity": 6, "range": [0, 100], "values": [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 100]}
{"sample_ix": 32, "code": "x + x % 4", "complexity": 6, "range": [0, 100], "values": [0, 2, 4, 6, 4, 6, 8, 10, 8, 10, 12, 14, 12, 14, 16, 18, 16, 18, 20, 22, 20, 22, 24, 26, 24, 26, 28, 30, 28, 30, 32, 34, 32, 34, 36, 38, 36, 38, 40, 42, 40, 42, 44, 46, 44, 46, 48, 50, 48, 50, 52, 54, 52, 54, 56, 58, 56, 58, 60, 62, 60, 62, 64, 66, 64, 66, 68, 70, 68, 70, 72, 74, 72, 74, 76, 78, 76, 78, 80, 82, 80, 82, 84, 86, 84, 86, 88, 90, 88, 90, 92, 94, 92, 94, 96, 98, 96, 98, 100, 102, 100]}
{"sample_ix": 33, "code": "x + x // 10", "complexity": 6, "range": [0, 100], "values": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110]}
{"sample_ix": 34, "code": "x + x // 8", "complexity": 6, "range": [0, 100], "values": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112]}
{"sample_ix": 35, "code": "(x + 5) * 3", "complexity": 6, "range": [0, 100], "values": [15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 102, 105, 108, 111, 114, 117, 120, 123, 126, 129, 132, 135, 138, 141, 144, 147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 177, 180, 183, 186, 189, 192, 195, 198, 201, 204, 207, 210, 213, 216, 219, 222, 225, 228, 231, 234, 237, 240, 243, 246, 249, 252, 255, 258, 261, 264, 267, 270, 273, 276, 279, 282, 285, 288, 291, 294, 297, 300, 303, 306, 309, 312, 315]}
{"sample_ix": 36, "code": "(x + 2) * 7", "complexity": 6, "range": [0, 100], "values": [14, 21, 28, 35, 42, 49, 56, 63, 70, 77, 84, 91, 98, 105, 112, 119, 126, 133, 140, 147, 154, 161, 168, 175, 182, 189, 196, 203, 210, 217, 224, 231, 238, 245, 252, 259, 266, 273, 280, 287, 294, 301, 308, 315, 322, 329, 336, 343, 350, 357, 364, 371, 378, 385, 392, 399, 406, 413, 420, 427, 434, 441, 448, 455, 462, 469, 476, 483, 490, 497, 504, 511, 518, 525, 532, 539, 546, 553, 560, 567, 574, 581, 588, 595, 602, 609, 616, 623, 630, 637, 644, 651, 658, 665, 672, 679, 686, 693, 700, 707, 714]}
{"sample_ix": 37, "code": "(2 * x) ** 2", "complexity": 6, "range": [0, 100], "values": [0, 4, 16, 36, 64, 100, 144, 196, 256, 324, 400, 484, 576, 676, 784, 900, 1024, 1156, 1296, 1444, 1600, 1764, 1936, 2116, 2304, 2500, 2704, 2916, 3136, 3364, 3600, 3844, 4096, 4356, 4624, 4900, 5184, 5476, 5776, 6084, 6400, 6724, 7056, 7396, 7744, 8100, 8464, 8836, 9216, 9604, 10000, 10404, 10816, 11236, 11664, 12100, 12544, 12996, 13456, 13924, 14400, 14884, 15376, 15876, 16384, 16900, 17424, 17956, 18496, 19044, 19600, 20164, 20736, 21316, 21904, 22500, 23104, 23716, 24336, 24964, 25600, 26244, 26896, 27556, 28224, 28900, 29584, 30276, 30976, 31684, 32400, 33124, 33856, 34596, 35344, 36100, 36864, 37636, 38416, 39204, 40000]}
{"sample_ix": 38, "code": "math.floor(x * 1.5)", "complexity": 7, "range": [0, 100], "values": [0, 1, 3, 4, 6, 7, 9, 10, 12, 13, 15, 16, 18, 19, 21, 22, 24, 25, 27, 28, 30, 31, 33, 34, 36, 37, 39, 40, 42, 43, 45, 46, 48, 49, 51, 52, 54, 55, 57, 58, 60, 61, 63, 64, 66, 67, 69, 70, 72, 73, 75, 76, 78, 79, 81, 82, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 99, 100, 102, 103, 105, 106, 108, 109, 111, 112, 114, 115, 117, 118, 120, 121, 123, 124, 126, 127, 129, 130, 132, 133, 135, 136, 138, 139, 141, 142, 144, 145, 147, 148, 150]}
{"sample_ix": 39, "code": "math.floor(x * 8.5)", "complexity": 7, "range": [0, 100], "values": [0, 8, 17, 25, 34, 42, 51, 59, 68, 76, 85, 93, 102, 110, 119, 127, 136, 144, 153, 161, 170, 178, 187, 195, 204, 212, 221, 229, 238, 246, 255, 263, 272, 280, 289, 297, 306, 314, 323, 331, 340, 348, 357, 365, 374, 382, 391, 399, 408, 416, 425, 433, 442, 450, 459, 467, 476, 484, 493, 501, 510, 518, 527, 535, 544, 552, 561, 569, 578, 586, 595, 603, 612, 620, 629, 637, 646, 654, 663, 671, 680, 688, 697, 705, 714, 722, 731, 739, 748, 756, 765, 773, 782, 790, 799, 807, 816, 824, 833, 841, 850]}
{"sample_ix": 40, "code": "math.floor(x / 2)", "complexity": 7, "range": [0, 100], "values": [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 30, 30, 31, 31, 32, 32, 33, 33, 34, 34, 35, 35, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 41, 42, 42, 43, 43, 44, 44, 45, 45, 46, 46, 47, 47, 48, 48, 49, 49, 50]}
{"sample_ix": 41, "code": "math.floor(x / 10)", "complexity": 7, "range": [0, 100], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10]}
{"sample_ix": 42, "code": "math.ceil(x / 2)", "complexity": 7, "range": [0, 100], "values": [0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 30, 30, 31, 31, 32, 32, 33, 33, 34, 34, 35, 35, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 41, 42, 42, 43, 43, 44, 44, 45, 45, 46, 46, 47, 47, 48, 48, 49, 49, 50, 50]}
{"sample_ix": 43, "code": "math.ceil(x / 10)", "complexity": 7, "range": [0, 100], "values": [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]}
{"sample_ix": 44, "code": "min(x * 2, 70)", "complexity": 7, "range": [0, 100], "values": [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70]}
{"sample_ix": 45, "code": "max(x * 2, 70)", "complexity": 7, "range": [0, 100], "values": [70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200]}
{"sample_ix": 46, "code": "min(1000000, 2 ** x)", "complexity": 7, "range": [0, 100], "values": [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072, 262144, 524288, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000]}
{"sample_ix": 47, "code": "round(math.sin(x))", "complexity": 7, "range": [0, 100], "values": [0, 1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, 1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, 1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, -1]}
{"sample_ix": 48, "code": "round(math.cos(x))", "complexity": 7, "range": [0, 100], "values": [1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, 1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, 1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1]}
{"sample_ix": 49, "code": "bin(x).count(\"1\")", "complexity": 7, "range": [0, 100], "values": [0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4, 1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5, 1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5, 2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6, 1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5, 2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6, 2, 3, 3, 4, 3]}
{"sample_ix": 50, "code": "7 if x % 2 else 17", "complexity": 8, "range": [0, 100], "values": [17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17, 7, 17]}
{"sample_ix": 51, "code": "int(x % 3 == 1)", "complexity": 8, "range": [0, 100], "values": [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]}
{"sample_ix": 52, "code": "int(x % 3 == 2)", "complexity": 8, "range": [0, 100], "values": [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0]}
{"sample_ix": 53, "code": "int(x % 8 < 4)", "complexity": 8, "range": [0, 100], "values": [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0]}
{"sample_ix": 54, "code": "math.floor(math.sqrt(x))", "complexity": 8, "range": [0, 100], "values": [0, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10]}
{"sample_ix": 55, "code": "x ** 3 - x ** 2", "complexity": 8, "range": [0, 100], "values": [0, 0, 4, 18, 48, 100, 180, 294, 448, 648, 900, 1210, 1584, 2028, 2548, 3150, 3840, 4624, 5508, 6498, 7600, 8820, 10164, 11638, 13248, 15000, 16900, 18954, 21168, 23548, 26100, 28830, 31744, 34848, 38148, 41650, 45360, 49284, 53428, 57798, 62400, 67240, 72324, 77658, 83248, 89100, 95220, 101614, 108288, 115248, 122500, 130050, 137904, 146068, 154548, 163350, 172480, 181944, 191748, 201898, 212400, 223260, 234484, 246078, 258048, 270400, 283140, 296274, 309808, 323748, 338100, 352870, 368064, 383688, 399748, 416250, 433200, 450604, 468468, 486798, 505600, 524880, 544644, 564898, 585648, 606900, 628660, 650934, 673728, 697048, 720900, 745290, 770224, 795708, 821748, 848350, 875520, 903264, 931588, 960498, 990000]}
{"sample_ix": 56, "code": "x * (x + 1) / 2", "complexity": 8, "range": [0, 100], "values": [0, 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66, 78, 91, 105, 120, 136, 153, 171, 190, 210, 231, 253, 276, 300, 325, 351, 378, 406, 435, 465, 496, 528, 561, 595, 630, 666, 703, 741, 780, 820, 861, 903, 946, 990, 1035, 1081, 1128, 1176, 1225, 1275, 1326, 1378, 1431, 1485, 1540, 1596, 1653, 1711, 1770, 1830, 1891, 1953, 2016, 2080, 2145, 2211, 2278, 2346, 2415, 2485, 2556, 2628, 2701, 2775, 2850, 2926, 3003, 3081, 3160, 3240, 3321, 3403, 3486, 3570, 3655, 3741, 3828, 3916, 4005, 4095, 4186, 4278, 4371, 4465, 4560, 4656, 4753, 4851, 4950, 5050]}
{"sample_ix": 57, "code": "x // 10 + x % 2", "complexity": 8, "range": [0, 100], "values": [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 6, 7, 6, 7, 6, 7, 6, 7, 6, 7, 7, 8, 7, 8, 7, 8, 7, 8, 7, 8, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 9, 10, 9, 10, 9, 10, 9, 10, 9, 10, 10]}
{"sample_ix": 58, "code": "int(x % 3 == 1) * 7", "complexity": 10, "range": [0, 100], "values": [0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7, 0, 0, 7]}
{"sample_ix": 59, "code": "int(x % 3 == 2) * 18", "complexity": 10, "range": [0, 100], "values": [0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0, 18, 0, 0]}
{"sample_ix": 60, "code": "x * 2 if x < 50 else x", "complexity": 10, "range": [0, 100], "values": [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]}
{"sample_ix": 61, "code": "math.floor(x + math.sqrt(x))", "complexity": 10, "range": [0, 100], "values": [0, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110]}
{"sample_ix": 62, "code": "math.floor(math.sqrt(x)) - 1", "complexity": 10, "range": [0, 100], "values": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9]}
{"sample_ix": 63, "code": "math.floor(math.sqrt(x)) * 2", "complexity": 10, "range": [0, 100], "values": [0, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 6, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 20]}
{"sample_ix": 64, "code": "math.floor(math.sqrt(x) * 2)", "complexity": 10, "range": [0, 100], "values": [0, 2, 2, 3, 4, 4, 4, 5, 5, 6, 6, 6, 6, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20]}
{"sample_ix": 65, "code": "math.floor(round(x ** (1/3), 8))", "complexity": 10, "range": [0, 100], "values": [0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]}
{"sample_ix": 66, "code": "x / 3 if not x % 3 else x", "complexity": 10, "range": [0, 100], "values": [0, 1, 2, 1, 4, 5, 2, 7, 8, 3, 10, 11, 4, 13, 14, 5, 16, 17, 6, 19, 20, 7, 22, 23, 8, 25, 26, 9, 28, 29, 10, 31, 32, 11, 34, 35, 12, 37, 38, 13, 40, 41, 14, 43, 44, 15, 46, 47, 16, 49, 50, 17, 52, 53, 18, 55, 56, 19, 58, 59, 20, 61, 62, 21, 64, 65, 22, 67, 68, 23, 70, 71, 24, 73, 74, 25, 76, 77, 26, 79, 80, 27, 82, 83, 28, 85, 86, 29, 88, 89, 30, 91, 92, 31, 94, 95, 32, 97, 98, 33, 100]}
{"sample_ix": 67, "code": "x * (x - 1) * (x - 2)", "complexity": 10, "range": [0, 100], "values": [0, 0, 0, 6, 24, 60, 120, 210, 336, 504, 720, 990, 1320, 1716, 2184, 2730, 3360, 4080, 4896, 5814, 6840, 7980, 9240, 10626, 12144, 13800, 15600, 17550, 19656, 21924, 24360, 26970, 29760, 32736, 35904, 39270, 42840, 46620, 50616, 54834, 59280, 63960, 68880, 74046, 79464, 85140, 91080, 97290, 103776, 110544, 117600, 124950, 132600, 140556, 148824, 157410, 166320, 175560, 185136, 195054, 205320, 215940, 226920, 238266, 249984, 262080, 274560, 287430, 300696, 314364, 328440, 342930, 357840, 373176, 388944, 405150, 421800, 438900, 456456, 474474, 492960, 511920, 531360, 551286, 571704, 592620, 614040, 635970, 658416, 681384, 704880, 728910, 753480, 778596, 804264, 830490, 857280, 884640, 912576, 941094, 970200]}
{"sample_ix": 68, "code": "x * int(str(x)[-1])", "complexity": 10, "range": [0, 100], "values": [0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 0, 11, 24, 39, 56, 75, 96, 119, 144, 171, 0, 21, 44, 69, 96, 125, 156, 189, 224, 261, 0, 31, 64, 99, 136, 175, 216, 259, 304, 351, 0, 41, 84, 129, 176, 225, 276, 329, 384, 441, 0, 51, 104, 159, 216, 275, 336, 399, 464, 531, 0, 61, 124, 189, 256, 325, 396, 469, 544, 621, 0, 71, 144, 219, 296, 375, 456, 539, 624, 711, 0, 81, 164, 249, 336, 425, 516, 609, 704, 801, 0, 91, 184, 279, 376, 475, 576, 679, 784, 891, 0]}
{"sample_ix": 69, "code": "int(str(x)[::-1])", "complexity": 11, "range": [0, 100], "values": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 11, 21, 31, 41, 51, 61, 71, 81, 91, 2, 12, 22, 32, 42, 52, 62, 72, 82, 92, 3, 13, 23, 33, 43, 53, 63, 73, 83, 93, 4, 14, 24, 34, 44, 54, 64, 74, 84, 94, 5, 15, 25, 35, 45, 55, 65, 75, 85, 95, 6, 16, 26, 36, 46, 56, 66, 76, 86, 96, 7, 17, 27, 37, 47, 57, 67, 77, 87, 97, 8, 18, 28, 38, 48, 58, 68, 78, 88, 98, 9, 19, 29, 39, 49, 59, 69, 79, 89, 99, 1]}
{"sample_ix": 70, "code": "sum(int(d) for d in str(x))", "complexity": 11, "range": [0, 100], "values": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1]}
{"sample_ix": 71, "code": "sum(1 for d in str(x) if int(d) % 2)", "complexity": 11, "range": [0, 100], "values": [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1]}
{"sample_ix": 72, "code": "sum(1 for d in str(x) if not int(d) % 2)", "complexity": 11, "range": [0, 100], "values": [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 2]}
{"sample_ix": 73, "code": "x + 7 if x < 50 else x - 7", "complexity": 12, "range": [0, 100], "values": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93]}
{"sample_ix": 74, "code": "x + 50 if x < 50 else 100 - x", "complexity": 12, "range": [0, 100], "values": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]}
{"sample_ix": 75, "code": "x * 2 if x > 40 else x * 3", "complexity": 12, "range": [0, 100], "values": [0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 102, 105, 108, 111, 114, 117, 120, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200]}
{"sample_ix": 76, "code": "x / 2 if not x % 2 else x * 3", "complexity": 12, "range": [0, 100], "values": [0, 3, 1, 9, 2, 15, 3, 21, 4, 27, 5, 33, 6, 39, 7, 45, 8, 51, 9, 57, 10, 63, 11, 69, 12, 75, 13, 81, 14, 87, 15, 93, 16, 99, 17, 105, 18, 111, 19, 117, 20, 123, 21, 129, 22, 135, 23, 141, 24, 147, 25, 153, 26, 159, 27, 165, 28, 171, 29, 177, 30, 183, 31, 189, 32, 195, 33, 201, 34, 207, 35, 213, 36, 219, 37, 225, 38, 231, 39, 237, 40, 243, 41, 249, 42, 255, 43, 261, 44, 267, 45, 273, 46, 279, 47, 285, 48, 291, 49, 297, 50]}
{"sample_ix": 77, "code": "x ** 2 if x % 2 else x ** 3", "complexity": 12, "range": [0, 100], "values": [0, 1, 8, 9, 64, 25, 216, 49, 512, 81, 1000, 121, 1728, 169, 2744, 225, 4096, 289, 5832, 361, 8000, 441, 10648, 529, 13824, 625, 17576, 729, 21952, 841, 27000, 961, 32768, 1089, 39304, 1225, 46656, 1369, 54872, 1521, 64000, 1681, 74088, 1849, 85184, 2025, 97336, 2209, 110592, 2401, 125000, 2601, 140608, 2809, 157464, 3025, 175616, 3249, 195112, 3481, 216000, 3721, 238328, 3969, 262144, 4225, 287496, 4489, 314432, 4761, 343000, 5041, 373248, 5329, 405224, 5625, 438976, 5929, 474552, 6241, 512000, 6561, 551368, 6889, 592704, 7225, 636056, 7569, 681472, 7921, 729000, 8281, 778688, 8649, 830584, 9025, 884736, 9409, 941192, 9801, 1000000]}
{"sample_ix": 78, "code": "x / 3 if not x % 3 else x * 2", "complexity": 12, "range": [0, 100], "values": [0, 2, 4, 1, 8, 10, 2, 14, 16, 3, 20, 22, 4, 26, 28, 5, 32, 34, 6, 38, 40, 7, 44, 46, 8, 50, 52, 9, 56, 58, 10, 62, 64, 11, 68, 70, 12, 74, 76, 13, 80, 82, 14, 86, 88, 15, 92, 94, 16, 98, 100, 17, 104, 106, 18, 110, 112, 19, 116, 118, 20, 122, 124, 21, 128, 130, 22, 134, 136, 23, 140, 142, 24, 146, 148, 25, 152, 154, 26, 158, 160, 27, 164, 166, 28, 170, 172, 29, 176, 178, 30, 182, 184, 31, 188, 190, 32, 194, 196, 33, 200]}
{"sample_ix": 79, "code": "round(math.sin(x * 0.5 * math.pi))", "complexity": 12, "range": [0, 100], "values": [0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0]}
{"sample_ix": 80, "code": "round(math.cos(x * 0.5 * math.pi))", "complexity": 12, "range": [0, 100], "values": [1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1]}
{"sample_ix": 81, "code": "int(int(x**0.5)**2 == x)", "complexity": 12, "range": [0, 100], "values": [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]}
{"sample_ix": 82, "code": "x + int(str(x)[::-1])", "complexity": 13, "range": [0, 100], "values": [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 11, 22, 33, 44, 55, 66, 77, 88, 99, 110, 22, 33, 44, 55, 66, 77, 88, 99, 110, 121, 33, 44, 55, 66, 77, 88, 99, 110, 121, 132, 44, 55, 66, 77, 88, 99, 110, 121, 132, 143, 55, 66, 77, 88, 99, 110, 121, 132, 143, 154, 66, 77, 88, 99, 110, 121, 132, 143, 154, 165, 77, 88, 99, 110, 121, 132, 143, 154, 165, 176, 88, 99, 110, 121, 132, 143, 154, 165, 176, 187, 99, 110, 121, 132, 143, 154, 165, 176, 187, 198, 101]}
{"sample_ix": 83, "code": "x + sum(int(d) for d in str(x))", "complexity": 13, "range": [0, 100], "values": [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 101]}
{"sample_ix": 84, "code": "x / 2 if not x % 2 else x * 3 + 1", "complexity": 14, "range": [0, 100], "values": [0, 4, 1, 10, 2, 16, 3, 22, 4, 28, 5, 34, 6, 40, 7, 46, 8, 52, 9, 58, 10, 64, 11, 70, 12, 76, 13, 82, 14, 88, 15, 94, 16, 100, 17, 106, 18, 112, 19, 118, 20, 124, 21, 130, 22, 136, 23, 142, 24, 148, 25, 154, 26, 160, 27, 166, 28, 172, 29, 178, 30, 184, 31, 190, 32, 196, 33, 202, 34, 208, 35, 214, 36, 220, 37, 226, 38, 232, 39, 238, 40, 244, 41, 250, 42, 256, 43, 262, 44, 268, 45, 274, 46, 280, 47, 286, 48, 292, 49, 298, 50]}
{"sample_ix": 85, "code": "(x + 1) / 3 if x % 3 == 2 else x", "complexity": 14, "range": [0, 100], "values": [0, 1, 1, 3, 4, 2, 6, 7, 3, 9, 10, 4, 12, 13, 5, 15, 16, 6, 18, 19, 7, 21, 22, 8, 24, 25, 9, 27, 28, 10, 30, 31, 11, 33, 34, 12, 36, 37, 13, 39, 40, 14, 42, 43, 15, 45, 46, 16, 48, 49, 17, 51, 52, 18, 54, 55, 19, 57, 58, 20, 60, 61, 21, 63, 64, 22, 66, 67, 23, 69, 70, 24, 72, 73, 25, 75, 76, 26, 78, 79, 27, 81, 82, 28, 84, 85, 29, 87, 88, 30, 90, 91, 31, 93, 94, 32, 96, 97, 33, 99, 100]}
{"sample_ix": 86, "code": "round(math.sin(x * 0.25 * math.pi) * 10)", "complexity": 14, "range": [0, 100], "values": [0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0]}
{"sample_ix": 87, "code": "round(math.sin(x * 0.1 * math.pi) * 10)", "complexity": 14, "range": [0, 100], "values": [0, 3, 6, 8, 10, 10, 10, 8, 6, 3, 0, -3, -6, -8, -10, -10, -10, -8, -6, -3, 0, 3, 6, 8, 10, 10, 10, 8, 6, 3, 0, -3, -6, -8, -10, -10, -10, -8, -6, -3, 0, 3, 6, 8, 10, 10, 10, 8, 6, 3, 0, -3, -6, -8, -10, -10, -10, -8, -6, -3, 0, 3, 6, 8, 10, 10, 10, 8, 6, 3, 0, -3, -6, -8, -10, -10, -10, -8, -6, -3, 0, 3, 6, 8, 10, 10, 10, 8, 6, 3, 0, -3, -6, -8, -10, -10, -10, -8, -6, -3, 0]}
{"sample_ix": 88, "code": "round(math.cos(x * 0.25 * math.pi) * 10)", "complexity": 14, "range": [0, 100], "values": [10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10, -7, 0, 7, 10, 7, 0, -7, -10]}
{"sample_ix": 89, "code": "round(math.cos(x * 0.1 * math.pi) * 10)", "complexity": 14, "range": [0, 100], "values": [10, 10, 8, 6, 3, 0, -3, -6, -8, -10, -10, -10, -8, -6, -3, 0, 3, 6, 8, 10, 10, 10, 8, 6, 3, 0, -3, -6, -8, -10, -10, -10, -8, -6, -3, 0, 3, 6, 8, 10, 10, 10, 8, 6, 3, 0, -3, -6, -8, -10, -10, -10, -8, -6, -3, 0, 3, 6, 8, 10, 10, 10, 8, 6, 3, 0, -3, -6, -8, -10, -10, -10, -8, -6, -3, 0, 3, 6, 8, 10, 10, 10, 8, 6, 3, 0, -3, -6, -8, -10, -10, -10, -8, -6, -3, 0, 3, 6, 8, 10, 10]}
{"sample_ix": 90, "code": "0 if x < 10 else (x % 10) * (x // 10)", "complexity": 14, "range": [0, 100], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 0, 6, 12, 18, 24, 30, 36, 42, 48, 54, 0, 7, 14, 21, 28, 35, 42, 49, 56, 63, 0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 0, 9, 18, 27, 36, 45, 54, 63, 72, 81, 0]}
{"sample_ix": 91, "code": "abs(x - int(str(x)[::-1]))", "complexity": 15, "range": [0, 100], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 9, 18, 27, 36, 45, 54, 63, 72, 18, 9, 0, 9, 18, 27, 36, 45, 54, 63, 27, 18, 9, 0, 9, 18, 27, 36, 45, 54, 36, 27, 18, 9, 0, 9, 18, 27, 36, 45, 45, 36, 27, 18, 9, 0, 9, 18, 27, 36, 54, 45, 36, 27, 18, 9, 0, 9, 18, 27, 63, 54, 45, 36, 27, 18, 9, 0, 9, 18, 72, 63, 54, 45, 36, 27, 18, 9, 0, 9, 81, 72, 63, 54, 45, 36, 27, 18, 9, 0, 99]}
{"sample_ix": 92, "code": "int(sum(int(d) for d in str(x)) % 10)", "complexity": 15, "range": [0, 100], "values": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 1]}
{"sample_ix": 93, "code": "int(str(x) == str(x)[::-1])", "complexity": 15, "range": [0, 100], "values": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]}
{"sample_ix": 94, "code": "3 if 30 < x < 70 else 4", "complexity": 16, "range": [0, 100], "values": [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]}
{"sample_ix": 95, "code": "sum(1 for i in range(1, x + 1) if not x % i)", "complexity": 16, "range": [0, 100], "values": [0, 1, 2, 2, 3, 2, 4, 2, 4, 3, 4, 2, 6, 2, 4, 4, 5, 2, 6, 2, 6, 4, 4, 2, 8, 3, 4, 4, 6, 2, 8, 2, 6, 4, 4, 4, 9, 2, 4, 4, 8, 2, 8, 2, 6, 6, 4, 2, 10, 3, 6, 4, 6, 2, 8, 4, 8, 4, 4, 2, 12, 2, 4, 6, 7, 4, 8, 2, 6, 4, 8, 2, 12, 2, 4, 6, 6, 4, 8, 2, 10, 5, 4, 2, 12, 4, 4, 4, 8, 2, 12, 4, 6, 4, 4, 4, 12, 2, 6, 6, 9]}
{"sample_ix": 96, "code": "sum(i for i in range(1, x + 1) if not x % i)", "complexity": 16, "range": [0, 100], "values": [0, 1, 3, 4, 7, 6, 12, 8, 15, 13, 18, 12, 28, 14, 24, 24, 31, 18, 39, 20, 42, 32, 36, 24, 60, 31, 42, 40, 56, 30, 72, 32, 63, 48, 54, 48, 91, 38, 60, 56, 90, 42, 96, 44, 84, 78, 72, 48, 124, 57, 93, 72, 98, 54, 120, 72, 120, 80, 90, 60, 168, 62, 96, 104, 127, 84, 144, 68, 126, 96, 144, 72, 195, 74, 114, 124, 140, 96, 168, 80, 186, 121, 126, 84, 224, 108, 132, 120, 180, 90, 234, 112, 168, 128, 144, 120, 252, 98, 171, 156, 217]}
{"sample_ix": 97, "code": "int(x > 1 and all(x % i for i in range(2, x)))", "complexity": 20, "range": [0, 100], "values": [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]}
{"sample_ix": 98, "code": "x if x > 1 and all(x % i for i in range(2, x)) else x + 1", "complexity": 24, "range": [0, 100], "values": [1, 2, 2, 3, 5, 5, 7, 7, 9, 10, 11, 11, 13, 13, 15, 16, 17, 17, 19, 19, 21, 22, 23, 23, 25, 26, 27, 28, 29, 29, 31, 31, 33, 34, 35, 36, 37, 37, 39, 40, 41, 41, 43, 43, 45, 46, 47, 47, 49, 50, 51, 52, 53, 53, 55, 56, 57, 58, 59, 59, 61, 61, 63, 64, 65, 66, 67, 67, 69, 70, 71, 71, 73, 73, 75, 76, 77, 78, 79, 79, 81, 82, 83, 83, 85, 86, 87, 88, 89, 89, 91, 92, 93, 94, 95, 96, 97, 97, 99, 100, 101]}
{"sample_ix": 99, "code": "0 if x < 10 else max(int(d) for d in str(x)) - min(int(d) for d in str(x))", "complexity": 28, "range": [0, 100], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1]}
