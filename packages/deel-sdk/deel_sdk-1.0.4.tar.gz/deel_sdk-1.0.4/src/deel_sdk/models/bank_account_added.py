# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .bank_account_status import BankAccountStatus


@JsonMap({"id_": "id"})
class BankAccountAdded(BaseModel):
    """BankAccountAdded

    :param id_: ID of Bank Account., defaults to None
    :type id_: str, optional
    :param status: Bank Account status, defaults to None
    :type status: BankAccountStatus, optional
    :param created_at: Long date-time format following ISO-8601, defaults to None
    :type created_at: str, optional
    :param updated_at: Long date-time format following ISO-8601, defaults to None
    :type updated_at: str, optional
    """

    def __init__(
        self,
        id_: str = None,
        status: BankAccountStatus = None,
        created_at: str = None,
        updated_at: str = None,
    ):
        if id_ is not None:
            self.id_ = id_
        if status is not None:
            self.status = self._enum_matching(
                status, BankAccountStatus.list(), "status"
            )
        if created_at is not None:
            self.created_at = created_at
        if updated_at is not None:
            self.updated_at = updated_at
