# This file was generated by liblab | https://liblab.com/

from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap({"permission_sets": "permissionSets"})
class RoleToUpdateContainerData(BaseModel):
    """RoleToUpdateContainerData

    :param name: name, defaults to None
    :type name: str, optional
    :param description: description, defaults to None
    :type description: str, optional
    :param permission_sets: permission_sets, defaults to None
    :type permission_sets: List[str], optional
    """

    def __init__(
        self,
        name: str = None,
        description: str = None,
        permission_sets: List[str] = None,
    ):
        if name is not None:
            self.name = name
        if description is not None:
            self.description = description
        if permission_sets is not None:
            self.permission_sets = permission_sets


@JsonMap({})
class RoleToUpdateContainer(BaseModel):
    """RoleToUpdateContainer

    :param data: data, defaults to None
    :type data: RoleToUpdateContainerData, optional
    """

    def __init__(self, data: RoleToUpdateContainerData = None):
        if data is not None:
            self.data = self._define_object(data, RoleToUpdateContainerData)
