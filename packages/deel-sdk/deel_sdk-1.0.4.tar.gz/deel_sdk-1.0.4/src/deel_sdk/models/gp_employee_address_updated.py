# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap({})
class GpEmployeeAddressUpdated(BaseModel):
    """GpEmployeeAddressUpdated

    :param country: Country code., defaults to None
    :type country: str, optional
    :param state: State name., defaults to None
    :type state: str, optional
    :param city: City name., defaults to None
    :type city: str, optional
    :param street: Street name., defaults to None
    :type street: str, optional
    :param zip: Zip code., defaults to None
    :type zip: str, optional
    :param updated_at: Long date-time format following ISO-8601, defaults to None
    :type updated_at: str, optional
    """

    def __init__(
        self,
        country: str = None,
        state: str = None,
        city: str = None,
        street: str = None,
        zip: str = None,
        updated_at: str = None,
    ):
        if country is not None:
            self.country = self._pattern_matching(country, "^[A-Z]{2}$", "country")
        if state is not None:
            self.state = state
        if city is not None:
            self.city = city
        if street is not None:
            self.street = street
        if zip is not None:
            self.zip = zip
        if updated_at is not None:
            self.updated_at = updated_at
