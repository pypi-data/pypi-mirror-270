# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap({"id_": "id"})
class GenericResultCreatedWithIdData(BaseModel):
    """GenericResultCreatedWithIdData

    :param id_: Unique identifier of this resource., defaults to None
    :type id_: str, optional
    :param created: created
    :type created: bool
    """

    def __init__(self, created: bool, id_: str = None):
        if id_ is not None:
            self.id_ = id_
        self.created = created


@JsonMap({})
class GenericResultCreatedWithId(BaseModel):
    """GenericResultCreatedWithId

    :param data: data
    :type data: GenericResultCreatedWithIdData
    """

    def __init__(self, data: GenericResultCreatedWithIdData):
        self.data = self._define_object(data, GenericResultCreatedWithIdData)
