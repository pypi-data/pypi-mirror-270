# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class TimesheetReviewToCreateStatus(Enum):
    """An enumeration representing different categories.

    :cvar APPROVED: "approved"
    :vartype APPROVED: str
    :cvar DECLINED: "declined"
    :vartype DECLINED: str
    """

    APPROVED = "approved"
    DECLINED = "declined"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, TimesheetReviewToCreateStatus._member_map_.values())
        )


@JsonMap({})
class TimesheetReviewToCreate(BaseModel):
    """TimesheetReviewToCreate

    :param status: status
    :type status: TimesheetReviewToCreateStatus
    :param reason: reason, defaults to None
    :type reason: str, optional
    """

    def __init__(self, status: TimesheetReviewToCreateStatus, reason: str = None):
        self.status = self._enum_matching(
            status, TimesheetReviewToCreateStatus.list(), "status"
        )
        if reason is not None:
            self.reason = reason
