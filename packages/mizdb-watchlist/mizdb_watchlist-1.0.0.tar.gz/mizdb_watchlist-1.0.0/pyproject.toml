[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "mizdb-watchlist"
version = "1.0.0"
description = "A watchlist for Django model objects."
authors = [
  "Philip Becker <yummytea1@gmail.com>" ,
]
readme = "README.md"
packages = [{include = "mizdb_watchlist", from = "src"}]
classifiers = [
    "Framework :: Django",
    "Programming Language :: Python :: 3",
]
license = "MIT"
repository = "https://github.com/Actionb/mizdb-watchlist"

[tool.poetry.dependencies]
python = "^3.9"
django = ">4"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.2"
black = "^24.2.0"
ruff = "^0.2.2"
build = "^1.0.3"
twine = "^5.0.0"
tox = "^4.13.0"
coverage = "^7.4.3"
pytest-django = "^4.8.0"
pytest-xdist = "^3.5.0"
pytest-cov = "^4.1.0"
factory-boy = "^3.3.0"
playwright = "^1.42.0"
pytest-playwright = "^0.4.4"

[tool.coverage.run]
branch = true
source = ["mizdb_watchlist"]

[tool.coverage.paths]
source = ["src", ".tox/*/site-packages"]

[tool.black]
line-length = 120
target_version = ["py39", "py310", "py311"]

[tool.ruff]
src = ["src"]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
select = [
    "D",        # pydocstyle
    "E", "W",   # pycodestyle
    "F",        # flake8
    "I",        # isort
]
ignore = [
    "D1",    # D1: Missing docstring error codes (because not every function and class has a docstring)
    "D203",  # D203: 1 blank line required before class docstring (conflicts with D211 and should be disabled, see https://github.com/PyCQA/pydocstyle/pull/91)
    "D205",  # D205: 1 blank line required between summary line and description
    "D212",  # D212: Multi-line docstring summary should start at the first line
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pycodestyle]
max-doc-length = 88