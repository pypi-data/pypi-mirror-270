# coding: utf-8

"""
    Claro API

    API for data ingestion

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from claroai.models.conversation_schema import ConversationSchema

class TestConversationSchema(unittest.TestCase):
    """ConversationSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConversationSchema:
        """Test ConversationSchema
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConversationSchema`
        """
        model = ConversationSchema()
        if include_optional:
            return ConversationSchema(
                conversation_id = '',
                conversation_created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                messages = [
                    claroai.models.message_schema.MessageSchema(
                        id = '', 
                        role = 'user', 
                        body = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                metadata = {
                    'key' : ''
                    },
                user_id = ''
            )
        else:
            return ConversationSchema(
                conversation_id = '',
                messages = [
                    claroai.models.message_schema.MessageSchema(
                        id = '', 
                        role = 'user', 
                        body = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
        )
        """

    def testConversationSchema(self):
        """Test ConversationSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
