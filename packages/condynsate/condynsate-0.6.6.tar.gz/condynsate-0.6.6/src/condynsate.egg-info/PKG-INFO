Metadata-Version: 2.1
Name: condynsate
Version: 0.6.6
Summary: Simulates and visualizes articulated systems in real time
Author-email: Grayson Schaer <gschaer2@illinois.edu>
License: MIT License
        
        Copyright (c) 2023 Grayson Schaer
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/GrayKS3248/condynsate
Keywords: dynamic,system,control,visualization,simulation,articulated,education,pybullet,meshcat,matplotlib
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Development Status :: 4 - Beta
Classifier: Natural Language :: English
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: MacOS
Classifier: Operating System :: POSIX :: Linux
Classifier: Topic :: Education :: Computer Aided Instruction (CAI)
Classifier: Topic :: Scientific/Engineering :: Visualization
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: control
Requires-Dist: matplotlib
Requires-Dist: meshcat
Requires-Dist: notebook
Requires-Dist: numpy
Requires-Dist: pybullet
Requires-Dist: pynput
Requires-Dist: pyside6
Requires-Dist: sympy

# condynsate

 [condynsate](https://github.com/GrayKS3248/condynsate) is a dynamic system simulation and visualization tool built with [PyBullet](https://pybullet.org/wordpress/) and [MeshCat](https://github.com/meshcat-dev/meshcat-python). It automatically simulates multiple objects and their interactions as described by [.urdf](http://wiki.ros.org/urdf), [.stl](https://en.wikipedia.org/wiki/STL_(file_format)), and [.obj](https://en.wikipedia.org/wiki/Wavefront_.obj_file) files and can render real time visualizations in a web browser.

# Installation

## From Source

condynsate requires python => 3.8

```bash
pip install condynsate
```

## Miniconda

* **Install Miniconda**
  
  * [Install Miniconda.](https://docs.conda.io/projects/miniconda/en/latest/)
  
  * To verify that Miniconda is installed properly, open **Anaconda Prompt (Miniconda3)** and run the command:
    
    ```bash
    conda --version
    ```

* **Create a new virtual environment**
  
  * To create a new environment, open **Anaconda Prompt (Miniconda3)** and run the command:
    
    ```bash
    conda create -n ENVNAME
    ```
  
  * Next, activate the newly made environment: 
    
    ```bash
    conda activate ENVNAME
    ```
  
  * You can confirm the virtual environment is activated when environment name on the left side of the command line changes from ``(base)`` to``(ENVNAME)``

* **Install dependencies from Conda-Forge:**
  
  * Configure the environment channels by running the commands:
    
    ```bash
    conda config --env --add channels conda-forge
    conda config --env --set channel_priority strict
    conda clean -a -i
    ```
  
  * Install dependencies available from Conda-Forge by running the command:
    
    ```bash
    conda install -y python=3 numpy pynput matplotlib pybullet control sympy notebook
    ```

* **Install condynsate using pip**
  
  * To install condynsate run the commands:
    
    ```bash
    pip cache purge
    pip install condynsate
    ```
  
  * You can ensure condynsate installed correctly by starting a python bash, importing condynsate, and checking the version number:
    
    ```python
    python
    import condynsate
    condynsate.__version__ 
    ```

# Usage

For examples of usage, see [examples](https://github.com/GrayKS3248/condynsate/tree/main/examples).
