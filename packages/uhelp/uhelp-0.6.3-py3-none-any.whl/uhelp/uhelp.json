{"_default": {}, "basictable": {"1": {"command": "uhelp", "usage": "this aplication has 3 mode.\nyour own command dictionary and Notes for a good night's sleep and tldr viewer mode\n\n[codez]uh \\[command][/codez] to show dictionary.\nWhen you register an item in the database,\nit will be shown over the internal official database and it will be displayed\nDepending on your settings, you can also view tldr dictionary together.\n\t[codez]uh -e \\[strings][/codez] edit your dictionay item(usertable)\n        [codez]uh -r \\[strings][/codez] remove your dictionay item(usertable)\n\n\n[codez]uh -s \\[strings][/codez]\nMake a note of the passed string (up to 10)\nand if select No in the option to view the notes\n\n\n[codez]uh -t \\[strings][/codez]\nview tldr search result. \nIt is a single TLDR markdown viewer mode\n\nOther options\n\n[codez]uh -v \\[strings][/codez] change style. \\[strings]->default/retro/retro2/simple/fruits\n[codez]uh -b backup[/codez] usertable backup\n[codez]uh -b restore[/codez] restore user table. has 2 ways. See command display for details"}, "2": {"command": "mv", "usage": "file move. usefull usage rename file\n\n[codez]mv \\[filepath] \\[filepath][/]\n\nmove \n[codez]mv screenshoot.jpg ~/myscreenshoot/[/]\n-i If you need an overwrite confirmation prompt\n\nif changed destination file name then simply it work rename file\n[codez]mv toddey.jpg today.jpg[/]\n\n-v show process detail -f force overwrite -n no overwrite"}, "3": {"command": "ls", "usage": "show current or orderd directory. -a option is show all include hidden dot files\n\n[codez] ls -lrt [/codez] list and reversesort and timestamp.\nso bottom of terminal is most new 'timestamp'file\n\n[codez] ls -a path/to/directory [/codez]\nthen show another location directory"}, "4": {"command": "clear", "usage": "clear terminal\n\n[codez]clear[/]"}, "5": {"command": "apt-get", "usage": "install and uninstall apt package"}, "6": {"command": "vi", "usage": "It's often an alias of VIM\n:wq write & quit :q! forgot and quit \nPlease see the Vim item at UHelp"}, "7": {"command": "lz4", "usage": "it lz method archiver: speed>compress"}, "8": {"command": "zstd", "usage": "speed archiver"}, "9": {"command": "which", "usage": "show command file fullpath. environment using\nwhich \\[command] to work\n-a option show all match aveilables -i option ignore alias"}, "10": {"command": "md5sum", "usage": "show file md5sum value\nsimple\n[codez]md5sum \\[file][/]\nlist check\n[info]example audit listed file format. filenamed `check`[/]\n[codez]\na.txt xxxxxxxxxxxx\nb.txt yyyyyyyyyyyy\nc.txt zzzzzzzzzzzz\n[/]\n\nxyz is md5value\n[codez]md5sum -c check[/codez]"}, "11": {"command": "pip", "usage": "get list of package latest than installed old package\n[codez]pip list -o[/]\n\nupdate package\n[codez]pip install -U \\[package][/]"}, "12": {"command": "tar", "usage": "\narchive single or multiple files (tar-ball)\nalso use combination gzip bzip2 function like .zip file\nthen extention name tar.gz tgz tar.bz2\n\n[codez]tar zcvf archivename.tar.gz \\[file1] \\[file2][/codez]\n\nz option can role gzip. so compless tarfile just oneline!\n\nz = compless c = create v = vorbos info output f = fileout with name \n\nextract\n[codez]tar xvf archivename.tar.gz[/codez]\n\nview contain\n[codez]tar tvf archivename.tar.gz[/codez]"}, "13": {"command": "mkdir", "usage": "make directory\n\nmake a directory\n[codez]mkdir \\[directryname][/]\nmultiple\n[codez]mkdir \\[directryname1] \\[directryname2][/]\n\n-p option can make tree struct\n[codez]mkdir -p backup/2024/txt/[/codez]\nWhile confirming the existence, if there is nothing, create it\n\n-v option You can check the contents of the execution so you can check it\n[codez]mkdir -pv backup/2029/txt/[/codez]"}, "14": {"command": "date", "usage": "show date and time\n\nformat staert +\n[codez]date \"+%Y/%m/%d %H:%M:%S\"[/]\n\nhas many other format character and option. just few example here \n\n%-H 1 %_H 1\n-meaning no padding _meaning space padding when 1 digit\n01:39 -> [codez]1:39[/] 01:39 -> [codez] 1:39[/]\n2024/03/28 -> [codez]2024/3/28[/] [codez]2024/ 3/28[/]\n\n%B January %b Jan\n%A Monday %a Mon\n\nwith using pipe(|) function  ascii art generater figlet\n[codez]date \"+%H : %M\" | figlet[/]\n\n[codez] _ _____       _  _  ____\n/ |___  |  _  | || ||___ \\\n| |  / /  (_) | || |_ __) |\n| | / /    _  |__   _/ __/\n|_|/_/    (_)    |_||_____|[/]"}, "15": {"command": "cal", "usage": "show calender\n\nshow current month with highlight today\n[codez]cal[/]\n\nshow september in year2024\n[codez]call 9 2024[/]\n\nshow range 3 month\n[codez]call -3[/]"}, "16": {"command": "history", "usage": "show your command history\n\nshow history with numbering\n[codez]history[/]\n\nIf you specify a number like this, you can call that command immediately after the history command\n[codez]!\\[number][/]\nexample\n>599 ls\n>600 cal 1 2024\n\n>!600\ncal 1 2024 is set to your input line"}, "17": {"command": "jpegoptim", "usage": "optimize jpeg reduce filesize\n\n-d option original backup to .bak. overwrited if no this option :/\n[codez]jpegoptim -d filename.jpg[/]\n\n--strip-all option EXIF data delete\n\tEXIF is gps-info camera-info phonecamera etc various info\n\tincluded your little privacy sonetime\n--totals option show result detail info\n\n-m option can Compression by quality percentage\n[codez]jpegoptim -m 75 filename.jpg[/]\n\n-s option can Compression by specifying the target file size\n[codez]jpegoptim -s 100k filename.jpg[/]"}, "18": {"command": "optipng", "usage": "optimize png file. reduce filesize usefull when web/forum upload\n\n-o\\[num]  1-7 level optimize low value is high compress\n-v output process detail\n-out option order output filename\n\tYou can specify the output file name\n\tso it keep the original file without the --backup option\n[codez] optipng -o1 -v -out \\[outputfilename] \\[sourceimage][/]"}, "19": {"command": "gzip", "usage": "GNU zip - gzip file and directory compress or extract\n\ncompress and source file delete\n[codez]gzip filename[/]\n\n-k option keep source file\n[codez]gzip -k filename[/]\n\n-1 to -9 complession level. 9 is high compress\n[codez]gzip -k -9 filename[/]\n\ndecompress -d option\n[codez]gzip -d filename[/]\n\n\nIf you make it one file with tar and compress it with gzip, you're done with *.tar.gz\nIt can be created in one shot from the tar command"}, "20": {"command": "traceroute", "usage": "trace the network route\n\n[codez]traceroute www.debian.org[/]\n\nshow your network connect route info\nhop count and resolved hostname and Results of 3 times response millisecond etc"}, "21": {"command": "find", "usage": "find file\n\n[codez]find \\[serchrootdir] -name \\[filenane][/]\n\nfind / (os root directory) \n[codez]find / -name \"yesterday.txt\"[/]\n\nfind ~/ (home directory) \n[codez]find ~/ -name \"yesterday.txt\"[/]\n"}, "22": {"command": "tail", "usage": "show file tail useful for long logfile\n\nview file tail 20 column\n[codez]tail -n 20 foo.log[/]\n-n option value column. default 10(no option)\n\notherwise realtime and interval second option available"}, "23": {"command": "head", "usage": "show file head\n\nshow 20 line\n[codez]head -n 20 \\[filename][/]\n\n-c option to order Byte. example 128 Byte\n[codez]head -c 128 \\[filename][/]\n\n-q quiet -v detail"}, "24": {"command": "diff", "usage": "show fileA fileB difference, directoryA directoryB work too\n\ndefault usage\n[codez]diff fileA fileB[/]\nstyle side by side option is -y\nif -y with --suppress-common-lines option  show diffarent line only\n\noutputformat style `unified format` it can [bold]github like[/bold]\n[codez]diff -u fileA fileB[/]\n\nif you want colored output. there is a way to pass it to the editor. vim can be colored\n[codez]diff -u fileA fileB > filename.diff[/]\nopen this text with vim\n\nor use colorized diff utility, like colordiff or vimdiff or git diff"}, "25": {"command": "sed", "usage": "Stream EDitor sed ,it edit text stream and file \nsubstitute, insert, delete, regularexpression and more\n\nit not overwrite file. just show substitute aaa to AAA\n[codez]sed s/aaa/AAA/g test.txt[/]\ncan confirm change\nIt may be useful when using with pipe (|)\nstream pipe example\n[codez]echo \"apple microsotf\" | sed s/tf/ft/g[/]\n\nfile over write is set -i option. substitute all of aaa to AAA\n[codez]sed -i s/aaa/AAA/g test.txt[/]"}, "26": {"command": "grep", "usage": "grep can be used for display and processing by searching for strings from text using regular expressions\nShow all rows of relevant search results\n\nFind and display the line containing the johnsmith in the file\n[codez]grep \"JohnSmith\" namelist.txt[/]\n\nregular expression The part that starts with John\n[codez]grep ^John namelist.txt[/]\n\nextend regular expression John or Smith\n[codez]grep -E \"John|Smith\" namelist.txt[/]\n\nPipes from the installed package list by apt to show only lines without \"lib\"\n[codez]apt list --installed | grep -v \"lib\"[/]\n\nexample. display TODO comment lines\n-n line number -A a\\[num] show with 5 additional lines\n[codez]grep -n -A 5 --color=always --group-separator=\"____________________next hit____\" \"TODO:\" myprogram.py[/]\n"}, "27": {"command": "cp", "usage": "copy file and directory\n\nwith -p option Keep and copy some attributes , simple copy\n[codez]cp -p \\[filepath] \\[destinationpath][/]\n\nWith overwrite confirmation\n[codez]cp -i \\[filepath] \\[destinationpath][/]\n\n-r directory copy -f Force overwrite. confirm nothing\n-n no overwrite -v vorbos\n-d Keep symbolic links as symlinks"}}, "usertable": {"1": {"command": "uhelp", "usage": "this aplication has 3 mode.\nyour own command dictionary and Notes for a good night's sleep and tldr viewer mode\n\n[codez]uh \\[command][/codez] to show dictionary.\nWhen you register an item in the database,\nit will be shown over the internal official database and it will be displayed\nDepending on your settings, you can also view tldr dictionary together.\n\t[codez]uh -e \\[strings][/codez] edit your dictionay item(usertable)\n        [codez]uh -r \\[strings][/codez] remove your dictionay item(usertable)\n\n\n[codez]uh -s \\[strings][/codez]\nMake a note of the passed string (up to 10)\nand if select No in the option to view the notes\n\n\n[codez]uh -t \\[strings][/codez]\nview tldr search result. \nIt is a single TLDR markdown viewer mode\n\nOther options\n\n[codez]uh -v \\[strings][/codez] change style. \\[strings]->default/retro/retro2/simple/fruits\n[codez]uh -b backup[/codez] usertable backup\n[codez]uh -b restore[/codez] restore user table. has 2 ways. See command display for details"}, "2": {"command": "editexample", "usage": "this software using [blue on yellow]textual/rich[/] solution. so you can decolate console output text\nrich original style and built-in theme style and if available your style\nif you wrote like below. dictionaly show (if theme allowed) bold text like next line\n\n[cyan]please look this infomation default theme[/] [codez]uhelp -v default[/]\n\n\\[bold]this is edit dictionaly example\\[/bold]\n\n[bold]this is edit dictionaly example[/bold]\nhello world\n\nfrom theme styling below. close tag \n\n\\[title]uhelp\\[/]\n[title]uhelp[/]\n\n\\[info]infomation\\[/] \\[italic]uhelp is usefull\\[/]\\[strong]!!\\[/]\n[info]infomation[/] [italic]uhelp is usefull[/][strong]!![/]"}}}
