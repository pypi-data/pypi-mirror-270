Metadata-Version: 2.1
Name: star_dresden_gs_lib
Version: 0.2.0
Summary: A framework for creating a groundstation with grpc and PyQt6
Home-page: https://www.star-dresden.de
Author: STAR Dresden e.V.
Author-email: Lars Reiche <sners03coding@gmail.com>
Project-URL: Homepage, https://github.com/pypa/sampleproject
Project-URL: Issues, https://github.com/pypa/sampleproject/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.10, <4
Description-Content-Type: text/markdown
License-File: LICENSE.txt

# STAR Dresden Rover Groundstation Lib

## Description
A Library for creating a Groundstation using PyQt6.
It contains multiple Components, which can be used as Framework for creating A Groundstation.



## Installation
`pip install star-dresden-gs-lib`

## Usage

Note that the Widgets are using CamelCase instead of snake_case because of PyQts Guidelines.

### Components
#### Getter
`from components.getter import GetterWidget`
``` python
# widget with required args name and a callable to execute
self.getter_widget = GetterWidget("rand", self.rand_num)
# add the widget to your layout (preferable grid)
self.layout.addWidget(self.getter_widget, 0, 0)

# the callable function used in this case
def rand_num(self):
    return random.randint(0, 200)
```
Parameters:
- `name`: the name of the Widget that will be displayed on the button
- `endpoint`: a Callable function used as endpoint by the button presses execute function
- `button`: (optional) a custom button for this Component
- `text`: (optional) a custom Label for this Component 
- `execute_func`: (optional) a custom function for the button press, note that the endpoint operator is obsolete and the label won't change when using this. Consider just using a Button instead

Accessible Fields:
- `button`: the button for this Component
- `text`: the Label for this Component
- `layout`: the current layout of this widget

## Authors and acknowledgment
Members of STAR Dresden:
- Lars Lukas Reiche
