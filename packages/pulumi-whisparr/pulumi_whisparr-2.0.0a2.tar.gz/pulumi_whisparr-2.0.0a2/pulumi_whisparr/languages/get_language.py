# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetLanguageResult',
    'AwaitableGetLanguageResult',
    'get_language',
    'get_language_output',
]

@pulumi.output_type
class GetLanguageResult:
    """
    A collection of values returned by getLanguage.
    """
    def __init__(__self__, id=None, name=None, name_lower=None):
        if id and not isinstance(id, int):
            raise TypeError("Expected argument 'id' to be a int")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if name_lower and not isinstance(name_lower, str):
            raise TypeError("Expected argument 'name_lower' to be a str")
        pulumi.set(__self__, "name_lower", name_lower)

    @property
    @pulumi.getter
    def id(self) -> int:
        """
        Language ID.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Language.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="nameLower")
    def name_lower(self) -> str:
        """
        Language in lowercase.
        """
        return pulumi.get(self, "name_lower")


class AwaitableGetLanguageResult(GetLanguageResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetLanguageResult(
            id=self.id,
            name=self.name,
            name_lower=self.name_lower)


def get_language(name: Optional[str] = None,
                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetLanguageResult:
    """
    <!-- subcategory:Profiles -->Single available Language.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_whisparr as whisparr

    example = whisparr.Languages.get_language(name="English")
    ```


    :param str name: Language.
    """
    __args__ = dict()
    __args__['name'] = name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('whisparr:Languages/getLanguage:getLanguage', __args__, opts=opts, typ=GetLanguageResult).value

    return AwaitableGetLanguageResult(
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        name_lower=pulumi.get(__ret__, 'name_lower'))


@_utilities.lift_output_func(get_language)
def get_language_output(name: Optional[pulumi.Input[str]] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetLanguageResult]:
    """
    <!-- subcategory:Profiles -->Single available Language.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_whisparr as whisparr

    example = whisparr.Languages.get_language(name="English")
    ```


    :param str name: Language.
    """
    ...
