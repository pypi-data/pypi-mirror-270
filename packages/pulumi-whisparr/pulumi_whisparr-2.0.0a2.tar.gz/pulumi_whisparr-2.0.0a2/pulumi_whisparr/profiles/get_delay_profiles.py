# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetDelayProfilesResult',
    'AwaitableGetDelayProfilesResult',
    'get_delay_profiles',
    'get_delay_profiles_output',
]

@pulumi.output_type
class GetDelayProfilesResult:
    """
    A collection of values returned by getDelayProfiles.
    """
    def __init__(__self__, delay_profiles=None, id=None):
        if delay_profiles and not isinstance(delay_profiles, list):
            raise TypeError("Expected argument 'delay_profiles' to be a list")
        pulumi.set(__self__, "delay_profiles", delay_profiles)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter(name="delayProfiles")
    def delay_profiles(self) -> Sequence['outputs.GetDelayProfilesDelayProfileResult']:
        """
        Delay Profile list.
        """
        return pulumi.get(self, "delay_profiles")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of this resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetDelayProfilesResult(GetDelayProfilesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDelayProfilesResult(
            delay_profiles=self.delay_profiles,
            id=self.id)


def get_delay_profiles(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDelayProfilesResult:
    """
    <!-- subcategory:Profiles -->List all available Delay Profiles.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_whisparr as whisparr

    example = whisparr.Profiles.get_delay_profiles()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('whisparr:Profiles/getDelayProfiles:getDelayProfiles', __args__, opts=opts, typ=GetDelayProfilesResult).value

    return AwaitableGetDelayProfilesResult(
        delay_profiles=pulumi.get(__ret__, 'delay_profiles'),
        id=pulumi.get(__ret__, 'id'))


@_utilities.lift_output_func(get_delay_profiles)
def get_delay_profiles_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetDelayProfilesResult]:
    """
    <!-- subcategory:Profiles -->List all available Delay Profiles.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_whisparr as whisparr

    example = whisparr.Profiles.get_delay_profiles()
    ```
    """
    ...
