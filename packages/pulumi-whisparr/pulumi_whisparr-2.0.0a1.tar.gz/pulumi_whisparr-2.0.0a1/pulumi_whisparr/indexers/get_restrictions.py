# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetRestrictionsResult',
    'AwaitableGetRestrictionsResult',
    'get_restrictions',
    'get_restrictions_output',
]

@pulumi.output_type
class GetRestrictionsResult:
    """
    A collection of values returned by getRestrictions.
    """
    def __init__(__self__, id=None, restrictions=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if restrictions and not isinstance(restrictions, list):
            raise TypeError("Expected argument 'restrictions' to be a list")
        pulumi.set(__self__, "restrictions", restrictions)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of this resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def restrictions(self) -> Sequence['outputs.GetRestrictionsRestrictionResult']:
        """
        Restriction list.
        """
        return pulumi.get(self, "restrictions")


class AwaitableGetRestrictionsResult(GetRestrictionsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetRestrictionsResult(
            id=self.id,
            restrictions=self.restrictions)


def get_restrictions(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetRestrictionsResult:
    """
    <!-- subcategory:Indexers -->List all available Restrictions.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_whisparr as whisparr

    example = whisparr.Indexers.get_restrictions()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('whisparr:Indexers/getRestrictions:getRestrictions', __args__, opts=opts, typ=GetRestrictionsResult).value

    return AwaitableGetRestrictionsResult(
        id=pulumi.get(__ret__, 'id'),
        restrictions=pulumi.get(__ret__, 'restrictions'))


@_utilities.lift_output_func(get_restrictions)
def get_restrictions_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetRestrictionsResult]:
    """
    <!-- subcategory:Indexers -->List all available Restrictions.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_whisparr as whisparr

    example = whisparr.Indexers.get_restrictions()
    ```
    """
    ...
