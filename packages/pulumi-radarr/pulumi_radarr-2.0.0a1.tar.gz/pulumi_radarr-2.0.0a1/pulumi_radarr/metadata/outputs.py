# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetConsumersMetadataConsumerResult',
]

@pulumi.output_type
class GetConsumersMetadataConsumerResult(dict):
    def __init__(__self__, *,
                 add_collection_name: bool,
                 config_contract: str,
                 enable: bool,
                 id: int,
                 implementation: str,
                 movie_images: bool,
                 movie_metadata: bool,
                 movie_metadata_language: int,
                 movie_metadata_url: bool,
                 name: str,
                 tags: Sequence[int],
                 use_movie_nfo: bool):
        """
        :param bool add_collection_name: Add collection name flag.
        :param str config_contract: Metadata configuration template.
        :param bool enable: Enable flag.
        :param int id: Metadata ID.
        :param str implementation: Metadata implementation name.
        :param bool movie_images: Movie images flag.
        :param bool movie_metadata: Movie metadata flag.
        :param int movie_metadata_language: Movie metadata language.
        :param bool movie_metadata_url: Movie metadata URL flag.
        :param str name: Metadata name.
        :param Sequence[int] tags: List of associated tags.
        :param bool use_movie_nfo: Use movie nfo flag.
        """
        pulumi.set(__self__, "add_collection_name", add_collection_name)
        pulumi.set(__self__, "config_contract", config_contract)
        pulumi.set(__self__, "enable", enable)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "implementation", implementation)
        pulumi.set(__self__, "movie_images", movie_images)
        pulumi.set(__self__, "movie_metadata", movie_metadata)
        pulumi.set(__self__, "movie_metadata_language", movie_metadata_language)
        pulumi.set(__self__, "movie_metadata_url", movie_metadata_url)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "tags", tags)
        pulumi.set(__self__, "use_movie_nfo", use_movie_nfo)

    @property
    @pulumi.getter(name="addCollectionName")
    def add_collection_name(self) -> bool:
        """
        Add collection name flag.
        """
        return pulumi.get(self, "add_collection_name")

    @property
    @pulumi.getter(name="configContract")
    def config_contract(self) -> str:
        """
        Metadata configuration template.
        """
        return pulumi.get(self, "config_contract")

    @property
    @pulumi.getter
    def enable(self) -> bool:
        """
        Enable flag.
        """
        return pulumi.get(self, "enable")

    @property
    @pulumi.getter
    def id(self) -> int:
        """
        Metadata ID.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def implementation(self) -> str:
        """
        Metadata implementation name.
        """
        return pulumi.get(self, "implementation")

    @property
    @pulumi.getter(name="movieImages")
    def movie_images(self) -> bool:
        """
        Movie images flag.
        """
        return pulumi.get(self, "movie_images")

    @property
    @pulumi.getter(name="movieMetadata")
    def movie_metadata(self) -> bool:
        """
        Movie metadata flag.
        """
        return pulumi.get(self, "movie_metadata")

    @property
    @pulumi.getter(name="movieMetadataLanguage")
    def movie_metadata_language(self) -> int:
        """
        Movie metadata language.
        """
        return pulumi.get(self, "movie_metadata_language")

    @property
    @pulumi.getter(name="movieMetadataUrl")
    def movie_metadata_url(self) -> bool:
        """
        Movie metadata URL flag.
        """
        return pulumi.get(self, "movie_metadata_url")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Metadata name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def tags(self) -> Sequence[int]:
        """
        List of associated tags.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="useMovieNfo")
    def use_movie_nfo(self) -> bool:
        """
        Use movie nfo flag.
        """
        return pulumi.get(self, "use_movie_nfo")


