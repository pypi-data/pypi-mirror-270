# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetConfigResult',
    'AwaitableGetConfigResult',
    'get_config',
    'get_config_output',
]

@pulumi.output_type
class GetConfigResult:
    """
    A collection of values returned by getConfig.
    """
    def __init__(__self__, auto_redownload_failed=None, check_for_finished_download_interval=None, download_client_working_folders=None, enable_completed_download_handling=None, id=None):
        if auto_redownload_failed and not isinstance(auto_redownload_failed, bool):
            raise TypeError("Expected argument 'auto_redownload_failed' to be a bool")
        pulumi.set(__self__, "auto_redownload_failed", auto_redownload_failed)
        if check_for_finished_download_interval and not isinstance(check_for_finished_download_interval, int):
            raise TypeError("Expected argument 'check_for_finished_download_interval' to be a int")
        pulumi.set(__self__, "check_for_finished_download_interval", check_for_finished_download_interval)
        if download_client_working_folders and not isinstance(download_client_working_folders, str):
            raise TypeError("Expected argument 'download_client_working_folders' to be a str")
        pulumi.set(__self__, "download_client_working_folders", download_client_working_folders)
        if enable_completed_download_handling and not isinstance(enable_completed_download_handling, bool):
            raise TypeError("Expected argument 'enable_completed_download_handling' to be a bool")
        pulumi.set(__self__, "enable_completed_download_handling", enable_completed_download_handling)
        if id and not isinstance(id, int):
            raise TypeError("Expected argument 'id' to be a int")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter(name="autoRedownloadFailed")
    def auto_redownload_failed(self) -> bool:
        """
        Auto Redownload Failed flag.
        """
        return pulumi.get(self, "auto_redownload_failed")

    @property
    @pulumi.getter(name="checkForFinishedDownloadInterval")
    def check_for_finished_download_interval(self) -> int:
        """
        Check for finished download interval.
        """
        return pulumi.get(self, "check_for_finished_download_interval")

    @property
    @pulumi.getter(name="downloadClientWorkingFolders")
    def download_client_working_folders(self) -> str:
        """
        Download Client Working Folders.
        """
        return pulumi.get(self, "download_client_working_folders")

    @property
    @pulumi.getter(name="enableCompletedDownloadHandling")
    def enable_completed_download_handling(self) -> bool:
        """
        Enable Completed Download Handling flag.
        """
        return pulumi.get(self, "enable_completed_download_handling")

    @property
    @pulumi.getter
    def id(self) -> int:
        """
        Download Client Config ID.
        """
        return pulumi.get(self, "id")


class AwaitableGetConfigResult(GetConfigResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetConfigResult(
            auto_redownload_failed=self.auto_redownload_failed,
            check_for_finished_download_interval=self.check_for_finished_download_interval,
            download_client_working_folders=self.download_client_working_folders,
            enable_completed_download_handling=self.enable_completed_download_handling,
            id=self.id)


def get_config(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetConfigResult:
    """
    <!-- subcategory:Download Clients -->
    Download Client Config.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_radarr as radarr

    example = radarr.DownloadClients.get_config()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('radarr:DownloadClients/getConfig:getConfig', __args__, opts=opts, typ=GetConfigResult).value

    return AwaitableGetConfigResult(
        auto_redownload_failed=pulumi.get(__ret__, 'auto_redownload_failed'),
        check_for_finished_download_interval=pulumi.get(__ret__, 'check_for_finished_download_interval'),
        download_client_working_folders=pulumi.get(__ret__, 'download_client_working_folders'),
        enable_completed_download_handling=pulumi.get(__ret__, 'enable_completed_download_handling'),
        id=pulumi.get(__ret__, 'id'))


@_utilities.lift_output_func(get_config)
def get_config_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetConfigResult]:
    """
    <!-- subcategory:Download Clients -->
    Download Client Config.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_radarr as radarr

    example = radarr.DownloadClients.get_config()
    ```
    """
    ...
