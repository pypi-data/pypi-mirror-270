# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetMoviesResult',
    'AwaitableGetMoviesResult',
    'get_movies',
    'get_movies_output',
]

@pulumi.output_type
class GetMoviesResult:
    """
    A collection of values returned by getMovies.
    """
    def __init__(__self__, id=None, movies=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if movies and not isinstance(movies, list):
            raise TypeError("Expected argument 'movies' to be a list")
        pulumi.set(__self__, "movies", movies)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of this resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def movies(self) -> Sequence['outputs.GetMoviesMovieResult']:
        """
        Movie list.
        """
        return pulumi.get(self, "movies")


class AwaitableGetMoviesResult(GetMoviesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetMoviesResult(
            id=self.id,
            movies=self.movies)


def get_movies(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetMoviesResult:
    """
    <!-- subcategory:Movies -->
    List all available Movies.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_radarr as radarr

    example = radarr.Movies.get_movies()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('radarr:Movies/getMovies:getMovies', __args__, opts=opts, typ=GetMoviesResult).value

    return AwaitableGetMoviesResult(
        id=pulumi.get(__ret__, 'id'),
        movies=pulumi.get(__ret__, 'movies'))


@_utilities.lift_output_func(get_movies)
def get_movies_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetMoviesResult]:
    """
    <!-- subcategory:Movies -->
    List all available Movies.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_radarr as radarr

    example = radarr.Movies.get_movies()
    ```
    """
    ...
