{"version":3,"file":"lib_index_js.a5145521343950b351b7.js","mappings":"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","sources":["webpack://jupyterlab-courselevels/./src/index.ts"],"sourcesContent":["/*\n * for attaching keybindings later on, see\n * https://towardsdatascience.com/how-to-customize-jupyterlab-keyboard-shortcuts-72321f73753d\n */\n\n/* eslint-disable prettier/prettier */\n\nimport { JupyterFrontEnd, JupyterFrontEndPlugin } from '@jupyterlab/application'\nimport { ICommandPalette } from '@jupyterlab/apputils'\nimport {\n  INotebookTracker,\n  NotebookPanel,\n  INotebookModel\n} from '@jupyterlab/notebook'\nimport { Cell } from '@jupyterlab/cells'\nimport { ISettingRegistry } from '@jupyterlab/settingregistry'\n\nimport { IDisposable, DisposableDelegate } from '@lumino/disposable'\nimport { DocumentRegistry } from '@jupyterlab/docregistry'\nimport { ToolbarButton } from '@jupyterlab/apputils'\n\nimport {\n  md_toggle,\n  md_toggle_multi,\n} from 'jupyterlab-celltagsclasses'\nimport { Scope, apply_on_cells } from 'jupyterlab-celltagsclasses'\n\nconst PLUGIN_ID = 'jupyterlab-courselevels:plugin'\n\nconst ALL_LEVELS = ['basic', 'intermediate', 'advanced']\n\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: PLUGIN_ID,\n  autoStart: true,\n  requires: [ICommandPalette, INotebookTracker, ISettingRegistry],\n  activate: (\n    app: JupyterFrontEnd,\n    palette: ICommandPalette,\n    notebookTracker: INotebookTracker,\n    settingRegistry: ISettingRegistry\n  ) => {\n    console.log('extension jupyterlab-courselevels is activating')\n    // https://lumino.readthedocs.io/en/1.x/api/commands/interfaces/commandregistry.ikeybindingoptions.html\n    // The supported modifiers are: Accel, Alt, Cmd, Ctrl, and Shift. The Accel\n    // modifier is translated to Cmd on Mac and Ctrl on all other platforms. The\n    // Cmd modifier is ignored on non-Mac platforms.\n    // Alt is option on mac\n\n    let [show_level_buttons] = [false]\n\n    const ALL_FULL_LEVELS = ALL_LEVELS.map(level => `level_${level}`)\n\n    const cell_toggle_level = (cell: Cell, level: string): void => {\n      const full_level = `level_${level}`\n      return md_toggle_multi(cell, 'tags', full_level, ALL_FULL_LEVELS)\n    }\n\n    const toggle_level = (level: string) => {\n      apply_on_cells(notebookTracker, Scope.Active, (cell: Cell) => {\n        cell_toggle_level(cell, level)\n      })\n    }\n\n    let command\n\n    for (const [level, key] of [\n      ['basic', 'Ctrl X'],\n      ['intermediate', 'Ctrl Y'],\n      ['advanced', 'Ctrl Z']\n    ]) {\n      command = `courselevels:toggle-level-${level}`\n      app.commands.addCommand(command, {\n        label: `toggle ${level} level`,\n        execute: () => toggle_level(level)\n      })\n      palette.addItem({ command, category: 'courselevels' })\n      app.commands.addKeyBinding({\n        command,\n        keys: ['Ctrl \\\\', key],\n        selector: '.jp-Notebook'\n      })\n    }\n\n    const toggle_frame = () => {\n      apply_on_cells(notebookTracker, Scope.Active, (cell: Cell) => {\n        md_toggle(cell, 'tags', 'framed_cell')\n      })\n    }\n\n    command = 'courselevels:toggle-frame'\n    app.commands.addCommand(command, {\n      label: 'toggle frame',\n      execute: () => toggle_frame()\n    })\n    palette.addItem({ command, category: 'courselevels' })\n    app.commands.addKeyBinding({\n      command,\n      keys: ['Ctrl \\\\', 'Ctrl M'],\n      selector: '.jp-Notebook'\n    })\n\n    const toggle_licence = () => {\n      apply_on_cells(notebookTracker, Scope.Active, (cell: Cell) => {\n        md_toggle(cell, 'tags', 'licence')\n      })\n    }\n\n    command = 'courselevels:toggle-licence'\n    app.commands.addCommand(command, {\n      label: 'toggle licence',\n      execute: () => toggle_licence()\n    })\n    palette.addItem({ command, category: 'courselevels' })\n    app.commands.addKeyBinding({\n      command,\n      keys: ['Ctrl \\\\', 'Ctrl L'],\n      selector: '.jp-Notebook'\n    })\n\n    // the buttons in the toolbar\n    const create_level_buttons = () => {\n      const find_spacer = (panel: NotebookPanel): number => {\n        let index = 0\n        for (const child of panel.toolbar.children()) {\n          if (child.node.classList.contains('jp-Toolbar-spacer')) {\n            return index\n          } else {\n            index += 1\n          }\n        }\n        return 0\n      }\n\n      class BasicButton\n        implements\n          DocumentRegistry.IWidgetExtension<NotebookPanel, INotebookModel>\n      {\n        createNew(\n          panel: NotebookPanel,\n          context: DocumentRegistry.IContext<INotebookModel>\n        ): IDisposable {\n          const button = new ToolbarButton({\n            className: 'courselevels-button',\n            iconClass: 'far fa-hand-pointer',\n            onClick: () => toggle_level('basic'),\n            tooltip: 'Toggle basic level'\n          })\n          // compute where to insert it\n          const index = find_spacer(panel)\n          panel.toolbar.insertItem(index, 'basicLevel', button)\n          return new DisposableDelegate(() => {\n            button.dispose()\n          })\n        }\n      }\n      app.docRegistry.addWidgetExtension('Notebook', new BasicButton())\n\n      class IntermediateButton\n        implements\n          DocumentRegistry.IWidgetExtension<NotebookPanel, INotebookModel>\n      {\n        createNew(\n          panel: NotebookPanel,\n          context: DocumentRegistry.IContext<INotebookModel>\n        ): IDisposable {\n          const button = new ToolbarButton({\n            className: 'courselevels-button',\n            iconClass: 'far fa-hand-peace',\n            onClick: () => toggle_level('intermediate'),\n            tooltip: 'Toggle intermediate level'\n          })\n          // compute where to insert it\n          const index = find_spacer(panel)\n          panel.toolbar.insertItem(index, 'intermediateLevel', button)\n          return new DisposableDelegate(() => {\n            button.dispose()\n          })\n        }\n      }\n      app.docRegistry.addWidgetExtension('Notebook', new IntermediateButton())\n\n      class AdvancedButton\n        implements\n          DocumentRegistry.IWidgetExtension<NotebookPanel, INotebookModel>\n      {\n        createNew(\n          panel: NotebookPanel,\n          context: DocumentRegistry.IContext<INotebookModel>\n        ): IDisposable {\n          const button = new ToolbarButton({\n            className: 'courselevels-button',\n            iconClass: 'far fa-hand-spock',\n            onClick: () => toggle_level('advanced'),\n            tooltip: 'Toggle advanced level'\n          })\n          // compute where to insert it\n          const index = find_spacer(panel)\n          panel.toolbar.insertItem(index, 'advancedLevel', button)\n          return new DisposableDelegate(() => {\n            button.dispose()\n          })\n        }\n      }\n      app.docRegistry.addWidgetExtension('Notebook', new AdvancedButton())\n\n      class FrameButton\n        implements\n          DocumentRegistry.IWidgetExtension<NotebookPanel, INotebookModel>\n      {\n        createNew(\n          panel: NotebookPanel,\n          context: DocumentRegistry.IContext<INotebookModel>\n        ): IDisposable {\n          const button = new ToolbarButton({\n            className: 'courselevels-button',\n            iconClass: 'fas fa-crop-alt',\n            onClick: () => toggle_frame(),\n            tooltip: 'Toggle frame around cell'\n          })\n          // compute where to insert it\n          const index = find_spacer(panel)\n          panel.toolbar.insertItem(index, 'frameLevel', button)\n          return new DisposableDelegate(() => {\n            button.dispose()\n          })\n        }\n      }\n      app.docRegistry.addWidgetExtension('Notebook', new FrameButton())\n    }\n\n    // load settings and create buttons if requested\n    function loadSetting(setting: ISettingRegistry.ISettings): void {\n      // Read the settings and convert to the correct type\n      show_level_buttons = setting.get('show_level_buttons')\n        .composite as boolean\n\n      console.log(\n        `jupyterlab-courselevels extension: show_level_buttons is set to ${show_level_buttons}`\n      )\n      if (show_level_buttons) {\n        create_level_buttons()\n      }\n    }\n\n    // but do it only after the app has started\n    Promise.all([app.restored, settingRegistry.load(PLUGIN_ID)]).then(\n      ([_, setting]) => {\n        loadSetting(setting)\n        setting.changed.connect(loadSetting)\n      }\n    )\n  }\n}\n\nexport default plugin\n"],"names":[],"sourceRoot":""}