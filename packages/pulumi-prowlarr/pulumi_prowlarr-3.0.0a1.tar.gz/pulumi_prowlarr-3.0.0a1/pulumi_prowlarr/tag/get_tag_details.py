# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetTagDetailsResult',
    'AwaitableGetTagDetailsResult',
    'get_tag_details',
    'get_tag_details_output',
]

@pulumi.output_type
class GetTagDetailsResult:
    """
    A collection of values returned by getTagDetails.
    """
    def __init__(__self__, application_ids=None, id=None, indexer_ids=None, indexer_proxy_ids=None, label=None, notification_ids=None):
        if application_ids and not isinstance(application_ids, list):
            raise TypeError("Expected argument 'application_ids' to be a list")
        pulumi.set(__self__, "application_ids", application_ids)
        if id and not isinstance(id, int):
            raise TypeError("Expected argument 'id' to be a int")
        pulumi.set(__self__, "id", id)
        if indexer_ids and not isinstance(indexer_ids, list):
            raise TypeError("Expected argument 'indexer_ids' to be a list")
        pulumi.set(__self__, "indexer_ids", indexer_ids)
        if indexer_proxy_ids and not isinstance(indexer_proxy_ids, list):
            raise TypeError("Expected argument 'indexer_proxy_ids' to be a list")
        pulumi.set(__self__, "indexer_proxy_ids", indexer_proxy_ids)
        if label and not isinstance(label, str):
            raise TypeError("Expected argument 'label' to be a str")
        pulumi.set(__self__, "label", label)
        if notification_ids and not isinstance(notification_ids, list):
            raise TypeError("Expected argument 'notification_ids' to be a list")
        pulumi.set(__self__, "notification_ids", notification_ids)

    @property
    @pulumi.getter(name="applicationIds")
    def application_ids(self) -> Sequence[int]:
        """
        List of associated applications.
        """
        return pulumi.get(self, "application_ids")

    @property
    @pulumi.getter
    def id(self) -> int:
        """
        Tag ID.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="indexerIds")
    def indexer_ids(self) -> Sequence[int]:
        """
        List of associated indexers.
        """
        return pulumi.get(self, "indexer_ids")

    @property
    @pulumi.getter(name="indexerProxyIds")
    def indexer_proxy_ids(self) -> Sequence[int]:
        """
        List of associated indexer proxies.
        """
        return pulumi.get(self, "indexer_proxy_ids")

    @property
    @pulumi.getter
    def label(self) -> str:
        """
        Tag label.
        """
        return pulumi.get(self, "label")

    @property
    @pulumi.getter(name="notificationIds")
    def notification_ids(self) -> Sequence[int]:
        """
        List of associated notifications.
        """
        return pulumi.get(self, "notification_ids")


class AwaitableGetTagDetailsResult(GetTagDetailsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetTagDetailsResult(
            application_ids=self.application_ids,
            id=self.id,
            indexer_ids=self.indexer_ids,
            indexer_proxy_ids=self.indexer_proxy_ids,
            label=self.label,
            notification_ids=self.notification_ids)


def get_tag_details(label: Optional[str] = None,
                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetTagDetailsResult:
    """
    <!-- subcategory:Tag -->Single Tag with its associated resources.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_prowlarr as prowlarr

    example = prowlarr.Tag.get_tag_details(label="example")
    ```


    :param str label: Tag label.
    """
    __args__ = dict()
    __args__['label'] = label
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('prowlarr:Tag/getTagDetails:getTagDetails', __args__, opts=opts, typ=GetTagDetailsResult).value

    return AwaitableGetTagDetailsResult(
        application_ids=pulumi.get(__ret__, 'application_ids'),
        id=pulumi.get(__ret__, 'id'),
        indexer_ids=pulumi.get(__ret__, 'indexer_ids'),
        indexer_proxy_ids=pulumi.get(__ret__, 'indexer_proxy_ids'),
        label=pulumi.get(__ret__, 'label'),
        notification_ids=pulumi.get(__ret__, 'notification_ids'))


@_utilities.lift_output_func(get_tag_details)
def get_tag_details_output(label: Optional[pulumi.Input[str]] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetTagDetailsResult]:
    """
    <!-- subcategory:Tag -->Single Tag with its associated resources.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_prowlarr as prowlarr

    example = prowlarr.Tag.get_tag_details(label="example")
    ```


    :param str label: Tag label.
    """
    ...
