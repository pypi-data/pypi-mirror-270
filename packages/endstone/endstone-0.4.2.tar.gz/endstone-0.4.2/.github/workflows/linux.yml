name: Linux

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

permissions: read-all

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04, ubuntu-22.04 ]
        build_type: [ Debug, Release, RelWithDebInfo ]

    name: Build on ${{ matrix.os }} (${{ matrix.build_type }})
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Set up Clang 15
        env:
          LLVM_VERSION: 15
        run: |
          sudo apt-get update -y -q
          sudo apt-get install -y -q build-essential lsb-release wget software-properties-common gnupg
          sudo wget https://apt.llvm.org/llvm.sh
          sudo chmod +x llvm.sh
          sudo ./llvm.sh ${LLVM_VERSION}
          sudo apt-get install -y -q libc++-${LLVM_VERSION}-dev libc++abi-${LLVM_VERSION}-dev
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-${LLVM_VERSION} 100
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-${LLVM_VERSION} 100
          sudo update-alternatives --install /usr/bin/llvm-cov llvm-cov /usr/bin/llvm-cov-${LLVM_VERSION} 100
          sudo update-alternatives --install /usr/bin/ld ld /usr/bin/ld.lld-${LLVM_VERSION} 100

      - name: Set up CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Build with Conan
        run: |
          python -m pip install --upgrade pip
          pip install conan
          conan profile detect --force
          conan export third_party/funchook --version 1.1.3
          conan create . --build=missing -pr:a .github/conan_profiles/linux -s build_type=${{ matrix.build_type }}
