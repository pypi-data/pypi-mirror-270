# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/python@6.13.3)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from copy import deepcopy
from typing import Any

from azure.core import PipelineClient
from azure.core.pipeline import policies
from azure.core.rest import HttpRequest, HttpResponse

from ._configuration import StructifyConfiguration
from ._serialization import Deserializer, Serializer
from .operations import (
    AdminOperations,
    DatasetOperations,
    DocumentsOperations,
    ServerOperations,
    SourceOperations,
    StructureOperations,
    UserOperations,
)


class Structify:  # pylint: disable=client-accepts-api-version-keyword,too-many-instance-attributes
    """Structure all your unstructured data into one place.

    :ivar admin: AdminOperations operations
    :vartype admin: structify.operations.AdminOperations
    :ivar dataset: DatasetOperations operations
    :vartype dataset: structify.operations.DatasetOperations
    :ivar documents: DocumentsOperations operations
    :vartype documents: structify.operations.DocumentsOperations
    :ivar server: ServerOperations operations
    :vartype server: structify.operations.ServerOperations
    :ivar source: SourceOperations operations
    :vartype source: structify.operations.SourceOperations
    :ivar structure: StructureOperations operations
    :vartype structure: structify.operations.StructureOperations
    :ivar user: UserOperations operations
    :vartype user: structify.operations.UserOperations
    :keyword endpoint: Service URL. Known values are: "https://api.structify.ai" and
     "http://localhost:8080". Default value is "https://api.structify.ai".
    :paramtype endpoint: str
    """

    def __init__(  # pylint: disable=missing-client-constructor-parameter-credential
        self, *, endpoint: str = "https://api.structify.ai", **kwargs: Any
    ) -> None:
        self._config = StructifyConfiguration(**kwargs)
        _policies = kwargs.pop("policies", None)
        if _policies is None:
            _policies = [
                policies.RequestIdPolicy(**kwargs),
                self._config.headers_policy,
                self._config.user_agent_policy,
                self._config.proxy_policy,
                policies.ContentDecodePolicy(**kwargs),
                self._config.redirect_policy,
                self._config.retry_policy,
                self._config.authentication_policy,
                self._config.custom_hook_policy,
                self._config.logging_policy,
                policies.SensitiveHeaderCleanupPolicy(**kwargs) if self._config.redirect_policy else None,
                self._config.http_logging_policy,
            ]
        self._client: PipelineClient = PipelineClient(base_url=endpoint, policies=_policies, **kwargs)

        self._serialize = Serializer()
        self._deserialize = Deserializer()
        self._serialize.client_side_validation = False
        self.admin = AdminOperations(self._client, self._config, self._serialize, self._deserialize)
        self.dataset = DatasetOperations(self._client, self._config, self._serialize, self._deserialize)
        self.documents = DocumentsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.server = ServerOperations(self._client, self._config, self._serialize, self._deserialize)
        self.source = SourceOperations(self._client, self._config, self._serialize, self._deserialize)
        self.structure = StructureOperations(self._client, self._config, self._serialize, self._deserialize)
        self.user = UserOperations(self._client, self._config, self._serialize, self._deserialize)

    def send_request(self, request: HttpRequest, *, stream: bool = False, **kwargs: Any) -> HttpResponse:
        """Runs the network request through the client's chained policies.

        >>> from azure.core.rest import HttpRequest
        >>> request = HttpRequest("GET", "https://www.example.org/")
        <HttpRequest [GET], url: 'https://www.example.org/'>
        >>> response = client.send_request(request)
        <HttpResponse: 200 OK>

        For more information on this code flow, see https://aka.ms/azsdk/dpcodegen/python/send_request

        :param request: The network request you want to make. Required.
        :type request: ~azure.core.rest.HttpRequest
        :keyword bool stream: Whether the response payload will be streamed. Defaults to False.
        :return: The response of your network call. Does not do error handling on your response.
        :rtype: ~azure.core.rest.HttpResponse
        """

        request_copy = deepcopy(request)
        request_copy.url = self._client.format_url(request_copy.url)
        return self._client.send_request(request_copy, stream=stream, **kwargs)  # type: ignore

    def close(self) -> None:
        self._client.close()

    def __enter__(self) -> "Structify":
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details: Any) -> None:
        self._client.__exit__(*exc_details)

    def it(self):
        import time

        print("INFO: Starting the structification!")
        while True:
            print("INFO: Running...")
            time.sleep(5)
