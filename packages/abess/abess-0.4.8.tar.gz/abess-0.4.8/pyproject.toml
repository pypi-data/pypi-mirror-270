[build-system]
requires = [
    "setuptools>=42",
    "wheel",
    "pybind11>=2.8.0",
    "cmake>=3.12",

    # use oldest-supported-numpy which provides the oldest numpy version with
    # wheels on PyPI (it is a similar operation used in scikit-learn)
    #
    # see: https://github.com/scipy/oldest-supported-numpy/blob/main/setup.cfg
    "oldest-supported-numpy"
]

build-backend = "setuptools.build_meta"

# Configuration for cibuildwheel
[tool.cibuildwheel]
build = "*linux_i686 *linux_x86_64 *win* *macos*"
skip = "pp*"

# skip test because lack of wheels for dependencies
test-skip = """\
    *manylinux_i686 \
    *musllinux* \
    *win32
    """
test-requires = "pytest"
test-command = "pytest {package}/pytest -v"
before-test = "pip install lifelines \"pandas<2.0.0\" scipy scikit-learn"

# install pybind11 for cmake
before-build = "pip install pybind11[global]"

[tool.cibuildwheel.macos]
archs = ["x86_64", "universal2", "arm64"]

# [[tool.cibuildwheel.overrides]]
# select = "*musllinux*"
# before-all = "apk add openblas-dev lapack-dev jpeg-dev"

# [[tool.cibuildwheel.overrides]]
# select = "*win32"
# before-test = "pip install lifelines \"pandas<2.0.0\" \"scipy<=1.9.1\" \"scikit-learn<=0.24.2\""

[[tool.cibuildwheel.overrides]]
select = "*macos*"
before-all = "brew install libomp" # install openmp library

[[tool.cibuildwheel.overrides]]
select = "cp36-win* cp37-win*"
before-test = "pip install lifelines \"pandas<2.0.0\" scipy scikit-learn \"joblib<1.3.0\""
