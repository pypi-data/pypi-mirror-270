[tool.poetry]
name = "vatsim"
version = "0.1.1"
description = "Library for interacting with VATSIM APIs and data"
authors = [
    "Franz Pletz <fpletz@fnordicwalking.de>",
    "Alex Legler <alex@a3li.li>",
    "Robin Gloster <mail@glob.in>",
]
license = "MIT"
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Games/Entertainment :: Simulation",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.5"
requests = "^2.28"
regex = ">=2023.12.25,<2025.0.0"

[tool.poetry.group.dev.dependencies]
ruff = "0.4.2"
pytest = "^8"
pytest-cov = ">=4.1,<6.0"
pyright = "1.1.360"

[tool.pytest.ini_options]
addopts = [
    "--cov-report=term",
    "--cov-report=xml:cov.xml",
    "--cov=vatsim",
]
testpaths = [
    "tests",
]

[tool.ruff]
line-length = 100
target-version = "py311"
preview = true

[tool.ruff.lint]
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "C90",  # mccabe
  "I",  # isort
  "ASYNC",  # flake8-async
  "B",  # flake8-bugbear
  "BLE",  # flake8-blind-except
  "COM",  # flake8-commas
  "C4",  # flake8-comprehensions
  "DTZ",  # flake8-datetimez
  "EM",  # flake8-errmsg
  "ICN",  # flake8-import-conventions
  "PYI",  # flake8-pyi
  "Q",  # flake8-quotes
  "SIM",  # flake8-simplify
  "TCH",  # flake8-typechecking
  "PTH",  # flake8-use-pathlib
  "UP",  # pyupgrade
  "RUF",  # ruff-specific
  "TRY",  # tryceratops
  "FURB", # refurb
]
ignore = ["COM812"]

[tool.pyright]
include = ["vatsim", "tests"]
pythonVersion = "3.11"
typeCheckingMode = "strict"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
