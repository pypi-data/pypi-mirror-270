# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetProfileResult',
    'AwaitableGetProfileResult',
    'get_profile',
    'get_profile_output',
]

@pulumi.output_type
class GetProfileResult:
    """
    A collection of values returned by getProfile.
    """
    def __init__(__self__, id=None, name=None, primary_album_types=None, release_statuses=None, secondary_album_types=None):
        if id and not isinstance(id, int):
            raise TypeError("Expected argument 'id' to be a int")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if primary_album_types and not isinstance(primary_album_types, list):
            raise TypeError("Expected argument 'primary_album_types' to be a list")
        pulumi.set(__self__, "primary_album_types", primary_album_types)
        if release_statuses and not isinstance(release_statuses, list):
            raise TypeError("Expected argument 'release_statuses' to be a list")
        pulumi.set(__self__, "release_statuses", release_statuses)
        if secondary_album_types and not isinstance(secondary_album_types, list):
            raise TypeError("Expected argument 'secondary_album_types' to be a list")
        pulumi.set(__self__, "secondary_album_types", secondary_album_types)

    @property
    @pulumi.getter
    def id(self) -> int:
        """
        Metadata Profile ID.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Metadata Profile name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="primaryAlbumTypes")
    def primary_album_types(self) -> Sequence[int]:
        """
        Primary album types.
        """
        return pulumi.get(self, "primary_album_types")

    @property
    @pulumi.getter(name="releaseStatuses")
    def release_statuses(self) -> Sequence[int]:
        """
        Release statuses.
        """
        return pulumi.get(self, "release_statuses")

    @property
    @pulumi.getter(name="secondaryAlbumTypes")
    def secondary_album_types(self) -> Sequence[int]:
        """
        Secondary album types.
        """
        return pulumi.get(self, "secondary_album_types")


class AwaitableGetProfileResult(GetProfileResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetProfileResult(
            id=self.id,
            name=self.name,
            primary_album_types=self.primary_album_types,
            release_statuses=self.release_statuses,
            secondary_album_types=self.secondary_album_types)


def get_profile(name: Optional[str] = None,
                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetProfileResult:
    """
    <!-- subcategory:Profiles -->Single Metadata Profile.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_lidarr as lidarr

    example = lidarr.Metadata.get_profile(name="Example")
    ```


    :param str name: Metadata Profile name.
    """
    __args__ = dict()
    __args__['name'] = name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('lidarr:Metadata/getProfile:getProfile', __args__, opts=opts, typ=GetProfileResult).value

    return AwaitableGetProfileResult(
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        primary_album_types=pulumi.get(__ret__, 'primary_album_types'),
        release_statuses=pulumi.get(__ret__, 'release_statuses'),
        secondary_album_types=pulumi.get(__ret__, 'secondary_album_types'))


@_utilities.lift_output_func(get_profile)
def get_profile_output(name: Optional[pulumi.Input[str]] = None,
                       opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetProfileResult]:
    """
    <!-- subcategory:Profiles -->Single Metadata Profile.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_lidarr as lidarr

    example = lidarr.Metadata.get_profile(name="Example")
    ```


    :param str name: Metadata Profile name.
    """
    ...
