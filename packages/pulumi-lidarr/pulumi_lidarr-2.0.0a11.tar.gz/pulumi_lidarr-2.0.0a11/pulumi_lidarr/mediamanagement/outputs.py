# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetRootFoldersRootFolderResult',
]

@pulumi.output_type
class GetRootFoldersRootFolderResult(dict):
    def __init__(__self__, *,
                 accessible: bool,
                 id: int,
                 metadata_profile_id: int,
                 monitor_option: str,
                 name: str,
                 new_item_monitor_option: str,
                 path: str,
                 quality_profile_id: int,
                 tags: Sequence[int]):
        """
        :param bool accessible: Access flag.
        :param int id: Root Folder ID.
        :param int metadata_profile_id: Metadata profile ID.
        :param str monitor_option: Monitor option.
        :param str name: Root Folder friendly name.
        :param str new_item_monitor_option: New item monitor option.
        :param str path: Root Folder absolute path.
        :param int quality_profile_id: Quality profile ID.
        :param Sequence[int] tags: List of associated tags.
        """
        pulumi.set(__self__, "accessible", accessible)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "metadata_profile_id", metadata_profile_id)
        pulumi.set(__self__, "monitor_option", monitor_option)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "new_item_monitor_option", new_item_monitor_option)
        pulumi.set(__self__, "path", path)
        pulumi.set(__self__, "quality_profile_id", quality_profile_id)
        pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter
    def accessible(self) -> bool:
        """
        Access flag.
        """
        return pulumi.get(self, "accessible")

    @property
    @pulumi.getter
    def id(self) -> int:
        """
        Root Folder ID.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="metadataProfileId")
    def metadata_profile_id(self) -> int:
        """
        Metadata profile ID.
        """
        return pulumi.get(self, "metadata_profile_id")

    @property
    @pulumi.getter(name="monitorOption")
    def monitor_option(self) -> str:
        """
        Monitor option.
        """
        return pulumi.get(self, "monitor_option")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Root Folder friendly name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="newItemMonitorOption")
    def new_item_monitor_option(self) -> str:
        """
        New item monitor option.
        """
        return pulumi.get(self, "new_item_monitor_option")

    @property
    @pulumi.getter
    def path(self) -> str:
        """
        Root Folder absolute path.
        """
        return pulumi.get(self, "path")

    @property
    @pulumi.getter(name="qualityProfileId")
    def quality_profile_id(self) -> int:
        """
        Quality profile ID.
        """
        return pulumi.get(self, "quality_profile_id")

    @property
    @pulumi.getter
    def tags(self) -> Sequence[int]:
        """
        List of associated tags.
        """
        return pulumi.get(self, "tags")


