# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetExclusionsResult',
    'AwaitableGetExclusionsResult',
    'get_exclusions',
    'get_exclusions_output',
]

@pulumi.output_type
class GetExclusionsResult:
    """
    A collection of values returned by getExclusions.
    """
    def __init__(__self__, id=None, import_list_exclusions=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if import_list_exclusions and not isinstance(import_list_exclusions, list):
            raise TypeError("Expected argument 'import_list_exclusions' to be a list")
        pulumi.set(__self__, "import_list_exclusions", import_list_exclusions)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of this resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="importListExclusions")
    def import_list_exclusions(self) -> Sequence['outputs.GetExclusionsImportListExclusionResult']:
        """
        ImportListExclusion list.
        """
        return pulumi.get(self, "import_list_exclusions")


class AwaitableGetExclusionsResult(GetExclusionsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetExclusionsResult(
            id=self.id,
            import_list_exclusions=self.import_list_exclusions)


def get_exclusions(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetExclusionsResult:
    """
    <!-- subcategory:Import Lists -->List all available Import List Exclusions.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_lidarr as lidarr

    example = lidarr.ImportLists.get_exclusions()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('lidarr:ImportLists/getExclusions:getExclusions', __args__, opts=opts, typ=GetExclusionsResult).value

    return AwaitableGetExclusionsResult(
        id=pulumi.get(__ret__, 'id'),
        import_list_exclusions=pulumi.get(__ret__, 'import_list_exclusions'))


@_utilities.lift_output_func(get_exclusions)
def get_exclusions_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetExclusionsResult]:
    """
    <!-- subcategory:Import Lists -->List all available Import List Exclusions.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_lidarr as lidarr

    example = lidarr.ImportLists.get_exclusions()
    ```
    """
    ...
