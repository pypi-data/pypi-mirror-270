# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetMetadataProfilesResult',
    'AwaitableGetMetadataProfilesResult',
    'get_metadata_profiles',
    'get_metadata_profiles_output',
]

@pulumi.output_type
class GetMetadataProfilesResult:
    """
    A collection of values returned by getMetadataProfiles.
    """
    def __init__(__self__, id=None, metadata_profiles=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if metadata_profiles and not isinstance(metadata_profiles, list):
            raise TypeError("Expected argument 'metadata_profiles' to be a list")
        pulumi.set(__self__, "metadata_profiles", metadata_profiles)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of this resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="metadataProfiles")
    def metadata_profiles(self) -> Sequence['outputs.GetMetadataProfilesMetadataProfileResult']:
        """
        Metadata Profile list.
        """
        return pulumi.get(self, "metadata_profiles")


class AwaitableGetMetadataProfilesResult(GetMetadataProfilesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetMetadataProfilesResult(
            id=self.id,
            metadata_profiles=self.metadata_profiles)


def get_metadata_profiles(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetMetadataProfilesResult:
    """
    <!-- subcategory:Profiles -->List all available Metadata Profiles.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_lidarr as lidarr

    example = lidarr.Profiles.get_metadata_profiles()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('lidarr:Profiles/getMetadataProfiles:getMetadataProfiles', __args__, opts=opts, typ=GetMetadataProfilesResult).value

    return AwaitableGetMetadataProfilesResult(
        id=pulumi.get(__ret__, 'id'),
        metadata_profiles=pulumi.get(__ret__, 'metadata_profiles'))


@_utilities.lift_output_func(get_metadata_profiles)
def get_metadata_profiles_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetMetadataProfilesResult]:
    """
    <!-- subcategory:Profiles -->List all available Metadata Profiles.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_lidarr as lidarr

    example = lidarr.Profiles.get_metadata_profiles()
    ```
    """
    ...
