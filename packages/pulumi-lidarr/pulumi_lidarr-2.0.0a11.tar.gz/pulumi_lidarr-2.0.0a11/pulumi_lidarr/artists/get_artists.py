# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetArtistsResult',
    'AwaitableGetArtistsResult',
    'get_artists',
    'get_artists_output',
]

@pulumi.output_type
class GetArtistsResult:
    """
    A collection of values returned by getArtists.
    """
    def __init__(__self__, artists=None, id=None):
        if artists and not isinstance(artists, list):
            raise TypeError("Expected argument 'artists' to be a list")
        pulumi.set(__self__, "artists", artists)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter
    def artists(self) -> Sequence['outputs.GetArtistsArtistResult']:
        """
        Artist list.
        """
        return pulumi.get(self, "artists")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of this resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetArtistsResult(GetArtistsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetArtistsResult(
            artists=self.artists,
            id=self.id)


def get_artists(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetArtistsResult:
    """
    <!-- subcategory:Artists -->List all available Artists.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_lidarr as lidarr

    example = lidarr.Artists.get_artists()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('lidarr:Artists/getArtists:getArtists', __args__, opts=opts, typ=GetArtistsResult).value

    return AwaitableGetArtistsResult(
        artists=pulumi.get(__ret__, 'artists'),
        id=pulumi.get(__ret__, 'id'))


@_utilities.lift_output_func(get_artists)
def get_artists_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetArtistsResult]:
    """
    <!-- subcategory:Artists -->List all available Artists.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_lidarr as lidarr

    example = lidarr.Artists.get_artists()
    ```
    """
    ...
