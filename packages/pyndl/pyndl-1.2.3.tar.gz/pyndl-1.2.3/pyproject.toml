[tool.poetry]
name = "pyndl"
version = "1.2.3"
description = "Naive discriminative learning implements learning and classification models based on the Rescorla-Wagner equations."

license = "MIT"

authors = ["Konstantin Sering <konstantin.sering@uni-tuebingen.de>",
           "Marc Weitz",
           "David-Elias KÃ¼nstle",
           "Lennard Schneider",
           "Elnaz Shafaei-Bajestan"
           ]

readme = "README.rst"  # Markdown files are supported

repository = "https://github.com/quantling/pyndl"
homepage = "https://pyndl.readthedocs.io/en/latest/"

classifiers = ['Development Status :: 5 - Production/Stable',
               'Environment :: Console',
               'Intended Audience :: Science/Research',
               'Operating System :: POSIX :: Linux',
               'Operating System :: MacOS',
               'Operating System :: Microsoft :: Windows',
               'Topic :: Scientific/Engineering',
               'Topic :: Scientific/Engineering :: Artificial Intelligence',
               'Topic :: Scientific/Engineering :: Information Analysis',]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"  # Compatible python versions must be declared here
numpy = ">=1.24.1"
scipy = ">=1.13.0"
pandas = ">=1.4.3"
xarray = ">=2022.6.0"
netCDF4 = ">=1.6.0"
Cython = ">=3.0.0"
toml = ">=0.10.2"
setuptools = ">=69.2.0"

[tool.poetry.dev-dependencies]
pytest = ">=7.0"
pytest-cov = ">=2.4"
pydocstyle = ">=6.1.1"
flake8 = ">=4.0.1"
sphinx = ">=1.4"
sphinx_rtd_theme = ">=1.0.0"
notebook = ">=6.4.10"
seaborn = ">=0.12.1"
numpydoc = ">=1.2"
sphinx-copybutton = ">=0.5.1"
pylint = ">=2.0.0"
nbsphinx = ">=0.8.8"
vulture = ">=2.3"
Jinja2 = ">=3.1.3"

[tool.pytest.ini_options]
addopts = '--doctest-glob "*.rst"'

[tool.pylint]
  [tool.pylint.basic]
  good-names = ["nn", "ii", "_", "jj", "df"]
  extension-pkg-whitelist = ["numpy", "pyndl.ndl_parallel", "pyndl/ndl_openmp"]
  ignore = ["pyndl/ndl_parallel", "pyndl/ndl_openmp"]

  [tool.pylint.format]
  max-line-length = 120

  [tool.pylint.message_control]
  disable = "E1101"

[build-system]
requires = ["poetry-core", "setuptools", "Cython", "numpy"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.build]
generate-setup-file = false
script = 'build.py'

