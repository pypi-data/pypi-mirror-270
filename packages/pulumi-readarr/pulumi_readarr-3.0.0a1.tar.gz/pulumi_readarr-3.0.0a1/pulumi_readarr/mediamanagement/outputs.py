# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetRootFoldersRootFolderResult',
]

@pulumi.output_type
class GetRootFoldersRootFolderResult(dict):
    def __init__(__self__, *,
                 accessible: bool,
                 default_metadata_profile_id: int,
                 default_monitor_new_item_option: str,
                 default_monitor_option: str,
                 default_quality_profile_id: int,
                 default_tags: Sequence[int],
                 host: str,
                 id: int,
                 is_calibre_library: bool,
                 library: str,
                 name: str,
                 output_profile: str,
                 password: str,
                 path: str,
                 port: int,
                 use_ssl: bool,
                 username: str):
        """
        :param bool accessible: Access flag.
        :param int default_metadata_profile_id: Default metadata profile ID.
        :param str default_monitor_new_item_option: Default monitor new item option.
        :param str default_monitor_option: Default monitor option.
        :param int default_quality_profile_id: Default metadata profile ID.
        :param Sequence[int] default_tags: List of associated tags.
        :param str host: Calibre host.
        :param int id: Root Folder ID.
        :param bool is_calibre_library: Is calibre library flag.
        :param str library: Calibre library.
        :param str name: Root Folder name.
        :param str output_profile: Calibre output profile.
        :param str password: Calibre password.
        :param str path: Root Folder absolute path.
        :param int port: Calibre Port.
        :param bool use_ssl: Use SSL for calibre connection.
        :param str username: Calibre username.
        """
        pulumi.set(__self__, "accessible", accessible)
        pulumi.set(__self__, "default_metadata_profile_id", default_metadata_profile_id)
        pulumi.set(__self__, "default_monitor_new_item_option", default_monitor_new_item_option)
        pulumi.set(__self__, "default_monitor_option", default_monitor_option)
        pulumi.set(__self__, "default_quality_profile_id", default_quality_profile_id)
        pulumi.set(__self__, "default_tags", default_tags)
        pulumi.set(__self__, "host", host)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "is_calibre_library", is_calibre_library)
        pulumi.set(__self__, "library", library)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "output_profile", output_profile)
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "path", path)
        pulumi.set(__self__, "port", port)
        pulumi.set(__self__, "use_ssl", use_ssl)
        pulumi.set(__self__, "username", username)

    @property
    @pulumi.getter
    def accessible(self) -> bool:
        """
        Access flag.
        """
        return pulumi.get(self, "accessible")

    @property
    @pulumi.getter(name="defaultMetadataProfileId")
    def default_metadata_profile_id(self) -> int:
        """
        Default metadata profile ID.
        """
        return pulumi.get(self, "default_metadata_profile_id")

    @property
    @pulumi.getter(name="defaultMonitorNewItemOption")
    def default_monitor_new_item_option(self) -> str:
        """
        Default monitor new item option.
        """
        return pulumi.get(self, "default_monitor_new_item_option")

    @property
    @pulumi.getter(name="defaultMonitorOption")
    def default_monitor_option(self) -> str:
        """
        Default monitor option.
        """
        return pulumi.get(self, "default_monitor_option")

    @property
    @pulumi.getter(name="defaultQualityProfileId")
    def default_quality_profile_id(self) -> int:
        """
        Default metadata profile ID.
        """
        return pulumi.get(self, "default_quality_profile_id")

    @property
    @pulumi.getter(name="defaultTags")
    def default_tags(self) -> Sequence[int]:
        """
        List of associated tags.
        """
        return pulumi.get(self, "default_tags")

    @property
    @pulumi.getter
    def host(self) -> str:
        """
        Calibre host.
        """
        return pulumi.get(self, "host")

    @property
    @pulumi.getter
    def id(self) -> int:
        """
        Root Folder ID.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="isCalibreLibrary")
    def is_calibre_library(self) -> bool:
        """
        Is calibre library flag.
        """
        return pulumi.get(self, "is_calibre_library")

    @property
    @pulumi.getter
    def library(self) -> str:
        """
        Calibre library.
        """
        return pulumi.get(self, "library")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Root Folder name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="outputProfile")
    def output_profile(self) -> str:
        """
        Calibre output profile.
        """
        return pulumi.get(self, "output_profile")

    @property
    @pulumi.getter
    def password(self) -> str:
        """
        Calibre password.
        """
        return pulumi.get(self, "password")

    @property
    @pulumi.getter
    def path(self) -> str:
        """
        Root Folder absolute path.
        """
        return pulumi.get(self, "path")

    @property
    @pulumi.getter
    def port(self) -> int:
        """
        Calibre Port.
        """
        return pulumi.get(self, "port")

    @property
    @pulumi.getter(name="useSsl")
    def use_ssl(self) -> bool:
        """
        Use SSL for calibre connection.
        """
        return pulumi.get(self, "use_ssl")

    @property
    @pulumi.getter
    def username(self) -> str:
        """
        Calibre username.
        """
        return pulumi.get(self, "username")


