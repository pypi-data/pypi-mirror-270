# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetAuthorsResult',
    'AwaitableGetAuthorsResult',
    'get_authors',
    'get_authors_output',
]

@pulumi.output_type
class GetAuthorsResult:
    """
    A collection of values returned by getAuthors.
    """
    def __init__(__self__, authors=None, id=None):
        if authors and not isinstance(authors, list):
            raise TypeError("Expected argument 'authors' to be a list")
        pulumi.set(__self__, "authors", authors)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter
    def authors(self) -> Sequence['outputs.GetAuthorsAuthorResult']:
        """
        Author list.
        """
        return pulumi.get(self, "authors")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of this resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetAuthorsResult(GetAuthorsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAuthorsResult(
            authors=self.authors,
            id=self.id)


def get_authors(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAuthorsResult:
    """
    <!-- subcategory:Authors -->List all available Authors.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_readarr as readarr

    example = readarr.Authors.get_authors()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('readarr:Authors/getAuthors:getAuthors', __args__, opts=opts, typ=GetAuthorsResult).value

    return AwaitableGetAuthorsResult(
        authors=pulumi.get(__ret__, 'authors'),
        id=pulumi.get(__ret__, 'id'))


@_utilities.lift_output_func(get_authors)
def get_authors_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAuthorsResult]:
    """
    <!-- subcategory:Authors -->List all available Authors.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_readarr as readarr

    example = readarr.Authors.get_authors()
    ```
    """
    ...
