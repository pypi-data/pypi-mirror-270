# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetExclusionResult',
    'AwaitableGetExclusionResult',
    'get_exclusion',
    'get_exclusion_output',
]

@pulumi.output_type
class GetExclusionResult:
    """
    A collection of values returned by getExclusion.
    """
    def __init__(__self__, author_name=None, foreign_id=None, id=None):
        if author_name and not isinstance(author_name, str):
            raise TypeError("Expected argument 'author_name' to be a str")
        pulumi.set(__self__, "author_name", author_name)
        if foreign_id and not isinstance(foreign_id, str):
            raise TypeError("Expected argument 'foreign_id' to be a str")
        pulumi.set(__self__, "foreign_id", foreign_id)
        if id and not isinstance(id, int):
            raise TypeError("Expected argument 'id' to be a int")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter(name="authorName")
    def author_name(self) -> str:
        """
        Author to be excluded.
        """
        return pulumi.get(self, "author_name")

    @property
    @pulumi.getter(name="foreignId")
    def foreign_id(self) -> str:
        """
        Musicbrainz ID.
        """
        return pulumi.get(self, "foreign_id")

    @property
    @pulumi.getter
    def id(self) -> int:
        """
        ImportListExclusion ID.
        """
        return pulumi.get(self, "id")


class AwaitableGetExclusionResult(GetExclusionResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetExclusionResult(
            author_name=self.author_name,
            foreign_id=self.foreign_id,
            id=self.id)


def get_exclusion(foreign_id: Optional[str] = None,
                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetExclusionResult:
    """
    <!-- subcategory:Import Lists -->Single Import List Exclusion.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_readarr as readarr

    example = readarr.ImportLists.get_exclusion(foreign_id="987")
    ```


    :param str foreign_id: Musicbrainz ID.
    """
    __args__ = dict()
    __args__['foreignId'] = foreign_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('readarr:ImportLists/getExclusion:getExclusion', __args__, opts=opts, typ=GetExclusionResult).value

    return AwaitableGetExclusionResult(
        author_name=pulumi.get(__ret__, 'author_name'),
        foreign_id=pulumi.get(__ret__, 'foreign_id'),
        id=pulumi.get(__ret__, 'id'))


@_utilities.lift_output_func(get_exclusion)
def get_exclusion_output(foreign_id: Optional[pulumi.Input[str]] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetExclusionResult]:
    """
    <!-- subcategory:Import Lists -->Single Import List Exclusion.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_readarr as readarr

    example = readarr.ImportLists.get_exclusion(foreign_id="987")
    ```


    :param str foreign_id: Musicbrainz ID.
    """
    ...
