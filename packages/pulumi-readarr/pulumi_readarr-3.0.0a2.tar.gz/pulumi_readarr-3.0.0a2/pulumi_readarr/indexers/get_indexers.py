# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetIndexersResult',
    'AwaitableGetIndexersResult',
    'get_indexers',
    'get_indexers_output',
]

@pulumi.output_type
class GetIndexersResult:
    """
    A collection of values returned by getIndexers.
    """
    def __init__(__self__, id=None, indexers=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if indexers and not isinstance(indexers, list):
            raise TypeError("Expected argument 'indexers' to be a list")
        pulumi.set(__self__, "indexers", indexers)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of this resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def indexers(self) -> Sequence['outputs.GetIndexersIndexerResult']:
        """
        Indexer list.
        """
        return pulumi.get(self, "indexers")


class AwaitableGetIndexersResult(GetIndexersResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetIndexersResult(
            id=self.id,
            indexers=self.indexers)


def get_indexers(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetIndexersResult:
    """
    <!-- subcategory:Indexers -->List all available Indexers.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_readarr as readarr

    example = readarr.Indexers.get_indexers()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('readarr:Indexers/getIndexers:getIndexers', __args__, opts=opts, typ=GetIndexersResult).value

    return AwaitableGetIndexersResult(
        id=pulumi.get(__ret__, 'id'),
        indexers=pulumi.get(__ret__, 'indexers'))


@_utilities.lift_output_func(get_indexers)
def get_indexers_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetIndexersResult]:
    """
    <!-- subcategory:Indexers -->List all available Indexers.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_readarr as readarr

    example = readarr.Indexers.get_indexers()
    ```
    """
    ...
