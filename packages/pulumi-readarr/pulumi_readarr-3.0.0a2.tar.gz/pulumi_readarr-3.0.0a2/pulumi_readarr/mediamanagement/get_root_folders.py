# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetRootFoldersResult',
    'AwaitableGetRootFoldersResult',
    'get_root_folders',
    'get_root_folders_output',
]

@pulumi.output_type
class GetRootFoldersResult:
    """
    A collection of values returned by getRootFolders.
    """
    def __init__(__self__, id=None, root_folders=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if root_folders and not isinstance(root_folders, list):
            raise TypeError("Expected argument 'root_folders' to be a list")
        pulumi.set(__self__, "root_folders", root_folders)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of this resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="rootFolders")
    def root_folders(self) -> Sequence['outputs.GetRootFoldersRootFolderResult']:
        """
        Root Folder list.
        """
        return pulumi.get(self, "root_folders")


class AwaitableGetRootFoldersResult(GetRootFoldersResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetRootFoldersResult(
            id=self.id,
            root_folders=self.root_folders)


def get_root_folders(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetRootFoldersResult:
    """
    <!-- subcategory:Media Management -->List all available Root Folders.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_readarr as readarr

    example = readarr.MediaManagement.get_root_folders()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('readarr:MediaManagement/getRootFolders:getRootFolders', __args__, opts=opts, typ=GetRootFoldersResult).value

    return AwaitableGetRootFoldersResult(
        id=pulumi.get(__ret__, 'id'),
        root_folders=pulumi.get(__ret__, 'root_folders'))


@_utilities.lift_output_func(get_root_folders)
def get_root_folders_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetRootFoldersResult]:
    """
    <!-- subcategory:Media Management -->List all available Root Folders.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_readarr as readarr

    example = readarr.MediaManagement.get_root_folders()
    ```
    """
    ...
