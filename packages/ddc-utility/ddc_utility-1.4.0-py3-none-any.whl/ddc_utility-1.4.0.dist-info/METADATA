Metadata-Version: 2.1
Name: ddc-utility
Version: 1.4.0
Summary: Package for retrieving DDC datasests
Author-email: Balint Alfoldy <alfibalint@gmail.com>, CropOM <marton.tolnai@cropom.com>
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: dask >=2023.1.1
Requires-Dist: Jinja2 >=3.1.2
Requires-Dist: matplotlib >=3.6.2
Requires-Dist: numcodecs >=0.11.0
Requires-Dist: pydantic >=1.10.0
Requires-Dist: pyproj >=3.4.1
Requires-Dist: requests >=2.28.2
Requires-Dist: xarray >=2023.1.0
Requires-Dist: zarr >=2.13.6
Requires-Dist: fsspec
Requires-Dist: s3fs
Requires-Dist: shapely

# DDC Utility

This is the Danube Data Cube Utility library, for retrieving data from the Danube Data Cube portal.

### Installation

```bash
pip install ddc-utility
```

### Usage

Users must have a valid DDC registration.

### Example
```
$ python

# Importing packages
>>> from ddc_utility.ddc import DanubeDataCube
>>> from ddc_utility.config import DdcCubeConfig, CustomCubeConfig
>>> from ddc_utility.cube import open_cube

# Setting DDC credentials
>>> os.environ['DDC_CLIENT_ID'] = ""
>>> os.environ['DDC_CLIENT_SECRET'] = ""

# Initialize DDC object 
>>> DDC = DanubeDataCube()

# Retrieve meteorological data from DDC
>>> cube_config = DdcCubeConfig(dataset_name='METEOROLOGY', variable_names=['prec', 'temp_min', 'temp_max'], danube_data_cube=DDC)
>>> cube = open_cube(cube_config)

# Retrieve custom cube based on users's AOI
>>> cube_config2 = CustomCubeConfig(dataset_name='<my_aoi_1.zarr>', variable_names=['NDVI', 'temp_avg', 'B04', 'B08'], danube_data_cube=DDC)
>>> cube2 = open_cube(cube_config2)

```
